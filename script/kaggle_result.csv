url,original code,alternative code,original time,new time,api,alternative api
https://www.kaggle.com/aarotang/test-data,"np.hstack((x_num_data, vec_x_cat_data))","np.append(x_num_data, vec_x_cat_data, axis=1)",0.041127196,0.040032614,np.hstack,np.append
https://www.kaggle.com/aarotang/test-data,"np.hstack((x_num_data, vec_x_cat_data))","np.concatenate((x_num_data, vec_x_cat_data), axis=1)",0.031387328,0.030727563,np.hstack,np.concatenate
https://www.kaggle.com/aawadall/deep-neural-net,np.array(train_raw['label']),np.concatenate([train_raw['label']]),4.15e-05,3.9899999999999994e-05,np.array,np.concatenate
https://www.kaggle.com/aawadall/deep-neural-net,"np.sum(t, axis=0)",(t).sum( axis=0),0.000132402,0.000125096,np.sum,np.ndarray.sum
https://www.kaggle.com/aawadall/deep-neural-net,np.sum(logprobs),(logprobs).sum(),0.00013393700000000002,0.000127192,np.sum,np.ndarray.sum
https://www.kaggle.com/abrierly/nn-approach,"np.ones((1, m), dtype=np.float)","np.empty((1, m), dtype=np.float); r2.fill(1)",1.95e-06,9.69e-07,np.ones,np.empty
https://www.kaggle.com/acyouzi/test-frist,np.ones(len(FLS)),np.empty(len(FLS)); r2.fill(1),0.01345582,0.002411598,np.ones,np.empty
https://www.kaggle.com/adrianbureu/another-test,data.ix[891:],data.iloc[891:],0.00034407,0.000324922,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/aharless/jiwon-small-improvements-for-magic-number-results,"test.loc[equal_index, 'full_sq']","test.ix[equal_index, 'full_sq']",0.00032838400000000003,0.00029047700000000003,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/aharless/jiwon-small-improvements-for-magic-number-results,"train.loc[kitch_is_build_year, 'build_year']","train.ix[kitch_is_build_year, 'build_year']",0.00039465,0.000293043,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.000756005,0.00024199,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",0.000301971,0.000249983,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",0.000290837,0.000253607,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.00044289800000000005,0.00020762599999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.000712394,0.000218982,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.000728514,0.000210371,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.000566144,0.000206602,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.00039644800000000004,0.00020250599999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",0.00029450900000000004,0.00024968799999999997,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",0.000287742,0.000245723,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.000950245,0.00020867299999999999,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.00062611,0.00020777,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.000965073,0.00044421,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.0007898730000000001,0.000280376,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.00041284599999999997,0.00020294,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.000351587,0.000193173,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",0.000642625,0.0006313790000000001,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",0.000609592,0.000599969,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",0.000758256,0.000242727,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",0.000713865,0.00025652,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.000477214,0.000209282,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.000325003,0.000195667,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.000293187,0.000252317,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.000294643,0.000246476,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]",0.0006288309999999999,0.000609466,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.00041066400000000004,0.000206875,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.000724145,0.000228984,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.000711925,0.000212891,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.000741028,0.000247769,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.0007309,0.000234055,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.000281695,0.000251939,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",0.000346855,0.000201902,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/alabsinatheer/mercedes-benz-first-model-stacking-1,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.concatenate((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed), axis=1)",0.018912891,0.017268352,np.hstack,np.concatenate
https://www.kaggle.com/albytho/pubg-prediction-ann-implementation,"df_train.loc[:, (['winPlacePerc'])]","df_train.ix[:, (['winPlacePerc'])]",0.02011413,0.019728895,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/albytho/pubg-prediction-ann-implementation,"df_test.loc[:, :]","df_test.ix[:, :]",1.4800000000000002e-05,1.1900000000000001e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/alexai/competition1,combined.ix[train_rows + 1:],combined.iloc[train_rows + 1:],0.000105249,9.08e-05,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/alexai/competition2,combined.ix[train_rows + 1:],combined.iloc[train_rows + 1:],0.000104356,8.9e-05,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/alexai/competition3,combined.ix[train_rows + 1:],combined.iloc[train_rows + 1:],0.00011258799999999999,0.000111324,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/alexai/competition4,combined.ix[train_rows + 1:],combined.iloc[train_rows + 1:],0.00010469799999999999,8.87e-05,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/alexai/competition5,combined.ix[train_rows + 1:],combined.iloc[train_rows + 1:],0.00011665200000000001,9.87e-05,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/alexxanderlarko/extratreesclassifier,train.ix[train_sample],train.loc[train_sample],0.12644559,0.126365014,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/alexxanderlarko/extratreesclassifier,"train.ix[:, 0:299]","train.iloc[:, 0:299]",0.055335800000000004,0.055273773,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/alexxanderlarko/xgb-offset0501,np.ones(num_classes),np.empty(num_classes); r2.fill(1),5.19e-06,2.39e-06,np.ones,np.empty
https://www.kaggle.com/alipala/ml-regressors-20-features,"test.loc[:, (test.columns != c)]","test.ix[:, (test.columns != c)]",0.000437296,0.000416313,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/amazone/lightgbm-regressor,df['pickup_datetime'].apply(lambda x: int(x.split(' ')[0].split('-')[2])),df['pickup_datetime'].map(lambda x: int(x.split(' ')[0].split('-')[2])),1.22438407,1.201874174,pd.Series.apply,pd.Series.map
https://www.kaggle.com/amielsy/second-script,"train.loc[:, 'MSSubClass':'SaleCondition']","train.ix[:, 'MSSubClass':'SaleCondition']",0.000725932,0.0007253860000000001,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/andrewlin1006/cs145-v1,"np.hstack((x_num_data, vec_x_cat_data))","np.concatenate((x_num_data, vec_x_cat_data), axis=1)",0.034193007000000004,0.032524574,np.hstack,np.concatenate
https://www.kaggle.com/andrewlin1006/cs145-v1,"np.hstack((x_num_test, vec_x_cat_test))","np.concatenate((x_num_test, vec_x_cat_test), axis=1)",0.03570841,0.034288946,np.hstack,np.concatenate
https://www.kaggle.com/andywan/data-import,np.ones(len(age_col['Age'])),np.empty(len(age_col['Age'])); r2.fill(1),1.1400000000000001e-05,9.24e-06,np.ones,np.empty
https://www.kaggle.com/anilcs/et-classifier,df[columnName].map(lambda y: 1 if y == x else 0),"np.where( df[columnName] == x , 1 ,0)",0.09617786199999999,0.013530826999999999,pd.Series.map,np.where
https://www.kaggle.com/anirban00727/titanic-survival-chances-prediction,combined.FamilySize.map(lambda s: 1 if s == 1 else 0),"np.where( combined.FamilySize == 1 , 1 ,0)",0.001609768,0.000529677,pd.Series.map,np.where
https://www.kaggle.com/anirban00727/titanic-survival-chances-prediction,combined.FamilySize.map(lambda s: 1 if s > 4 else 0),"np.where( combined.FamilySize > 4 , 1 ,0)",0.001359323,0.000505955,pd.Series.map,np.where
https://www.kaggle.com/antoinekrajnc/house-prices-multiple-linear-regression,"np.ones((1460, 1))","np.empty((1460, 1)); r2.fill(1)",2.02e-06,9.67e-07,np.ones,np.empty
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.0006573530000000001,0.000193749,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",0.000302698,0.000268489,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.00048637400000000003,0.000228638,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.000869714,0.00025119,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.000701235,0.000227976,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.00061515,0.000211295,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",0.00031277599999999996,0.00028042299999999997,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",0.000281478,0.000253852,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.001021885,0.000209562,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.0006029469999999999,0.00020345200000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.000893783,0.000400597,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.000757886,0.00027739400000000003,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.000413312,0.00019796900000000001,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.000345537,0.00020401299999999999,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",0.000658712,0.000601573,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",0.000581563,0.0005802019999999999,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",0.000745613,0.000245273,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",0.000711602,0.000220032,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.00048808099999999996,0.000198919,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.000315608,0.00018956900000000003,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.000286499,0.00024536400000000003,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.000320539,0.00027919,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]",0.000621377,0.000605932,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.000399029,0.000199252,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.000833775,0.00022888299999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.000750727,0.000252435,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.0007061839999999999,0.00022618400000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.000288944,0.00026373,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",0.000413059,0.000227278,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/arthurlpgc/first-tests,train.dot(Theta),"np.tensordot(train,Theta,axes=1)",0.00027754099999999996,0.000210035,np.ndarray.dot,np.tensordot
https://www.kaggle.com/arthurlpgc/first-tests,(anstrain - Pred).transpose().dot(train),"np.tensordot((anstrain - Pred).transpose(),train,axes=1)",0.000430955,0.00040360300000000005,np.ndarray.dot,np.tensordot
https://www.kaggle.com/arthurlpgc/first-tests,train.dot(Theta),"np.tensordot(train,Theta,axes=1)",0.000316585,0.00024066599999999998,np.ndarray.dot,np.tensordot
https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"df.ix[:, 'Sex':]","df.loc[:, 'Sex':]",0.00076194,0.000755375,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"df1.ix[:, ('PassengerId')]","df1.loc[:, ('PassengerId')]",3.3299999999999996e-05,2.56e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.hstack([X, bias])","np.append(X, bias, axis=1)",2.14e-05,2.0600000000000003e-05,np.hstack,np.append
https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.hstack([X_test, bias1])","np.append(X_test, bias1, axis=1)",7.3e-06,6.65e-06,np.hstack,np.append
https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.hstack([Submit, Yhat])","np.append(Submit, Yhat, axis=1)",7.85e-06,5.59e-06,np.hstack,np.append
https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.hstack([X, bias])","np.concatenate([X, bias], axis=1)",1.51e-05,1.13e-05,np.hstack,np.concatenate
https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.hstack([X_test, bias1])","np.concatenate([X_test, bias1], axis=1)",6.09e-06,3.45e-06,np.hstack,np.concatenate
https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.hstack([Submit, Yhat])","np.concatenate([Submit, Yhat], axis=1)",4.56e-06,2.3e-06,np.hstack,np.concatenate
https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.ones((100, 1))","np.empty((100, 1)); r2.fill(1)",1.45e-06,5.61e-07,np.ones,np.empty
https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.vstack([X_train, X_class1])","np.concatenate([X_train, X_class1], axis=0)",1.4800000000000002e-05,1.1599999999999999e-05,np.vstack,np.concatenate
https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.vstack([Y_train, Y_class1])","np.concatenate([Y_train, Y_class1], axis=0)",4.41e-06,2.27e-06,np.vstack,np.concatenate
https://www.kaggle.com/azuralrainbow/summer,np.sum(probs ** 2),"np.einsum('i->',probs ** 2)",4.44e-06,3.33e-06,np.sum,np.einsum
https://www.kaggle.com/azuralrainbow/summer,np.sum(probs ** 2),(probs ** 2).sum(),4.18e-06,3.67e-06,np.sum,np.ndarray.sum
https://www.kaggle.com/balajibi/facebook-solution-bi-1,np.vstack(preds_list),"np.concatenate(preds_list, axis=0)",0.166612557,0.159553058,np.vstack,np.concatenate
https://www.kaggle.com/batzner/small-dataset-generator,np.where(gift_pref[child_id] == gift_id),np.nonzero(gift_pref[child_id] == gift_id),2.63e-06,2.55e-06,np.where,np.nonzero
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.000655462,0.000205818,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",0.000287081,0.000251092,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",0.000294997,0.00025141299999999997,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.00045157300000000004,0.000206725,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.00074268,0.000240794,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.0007182139999999999,0.000217128,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.00059386,0.00020898900000000003,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.000396297,0.00020705900000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",0.000338313,0.000286965,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",0.000296828,0.000262751,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.001018161,0.00020784900000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.000779834,0.000226233,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.000983546,0.000416439,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.00081398,0.000466055,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.000852676,0.00020547099999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.00032943400000000003,0.00019852799999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",0.000630392,0.000619517,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",0.0007498089999999999,0.00024513599999999997,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",0.0008384989999999999,0.000239176,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.000578007,0.00021145799999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.00035729699999999996,0.000246119,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.00033304,0.000254993,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.000311397,0.000279928,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.000405055,0.000206275,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.000727368,0.000236472,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.0007443360000000001,0.000222571,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.000781586,0.000245961,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.0008287839999999999,0.00022841,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.000310218,0.000276933,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",0.00035682300000000004,0.000197417,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bibhuti93/titanic-analysis-v1-0,"train_data.ix[:, 1:6]","train_data.iloc[:, 1:6]",0.000375228,0.00037064199999999997,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/bibhuti93/titanic-analysis-v1-0,"train_data.ix[:, (0)]","train_data.iloc[:, (0)]",5.5299999999999996e-05,3.78e-05,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/bibhuti93/titanic-analysis-v1-0,"test_data.ix[:, 0:5]","test_data.iloc[:, 0:5]",0.00037605699999999995,0.00035869,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/bigdit/test00000,"test_df.ix[0:, 1:]","test_df.iloc[0:, 1:]",0.0005028669999999999,0.0004944109999999999,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/bigdit/test00000,"test_df.ix[:, (0)]","test_df.iloc[:, (0)]",4.6899999999999995e-05,3.81e-05,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/bigdit/test00000,"np.c_[passengers, y0.astype(int)]","np.hstack([np.array(passengers).reshape(len(passengers),1), np.array(y0.astype(int)).reshape(len(passengers),1)])",4.6399999999999996e-05,3.35e-05,np.c_,np.hstack
https://www.kaggle.com/brandao/test-4,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)","np.where( df['shot_distance'] < 45 , df['shot_distance'] ,    45)",0.499103804,0.00024370599999999997,pd.DataFrame.apply,np.where
https://www.kaggle.com/brandao/test-4,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)","np.where( df['time_remaining'] < 3 , 1 ,0)",0.30876493,0.000213517,pd.DataFrame.apply,np.where
https://www.kaggle.com/brandao/test-4,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)", df['shot_distance'].apply(lambda row:row if row < 45 else     45),0.511101416,0.007790018,pd.DataFrame.apply,pd.Series.apply
https://www.kaggle.com/brandao/test-4,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)", df['time_remaining'].apply(lambda row: 1 if row < 3 else 0),0.32779412399999996,0.011220659,pd.DataFrame.apply,pd.Series.apply
https://www.kaggle.com/brandao/test-6,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)","np.where( df['shot_distance'] < 45 , df['shot_distance'] ,    45)",0.504056135,0.000269283,pd.DataFrame.apply,np.where
https://www.kaggle.com/brandao/test-6,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)","np.where( df['time_remaining'] < 3 , 1 ,0)",0.332212915,0.000216285,pd.DataFrame.apply,np.where
https://www.kaggle.com/brandao/test-6,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)", df['shot_distance'].apply(lambda row:row if row < 45 else     45),0.7445858879999999,0.009398990999999999,pd.DataFrame.apply,pd.Series.apply
https://www.kaggle.com/brandao/test-6,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)", df['time_remaining'].apply(lambda row: 1 if row < 3 else 0),0.38156847,0.008429873000000001,pd.DataFrame.apply,pd.Series.apply
https://www.kaggle.com/brandao/test-7,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)","np.where( df['shot_distance'] < 45 , df['shot_distance'] ,    45)",0.500464045,0.000282336,pd.DataFrame.apply,np.where
https://www.kaggle.com/brandao/test-7,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)","np.where( df['time_remaining'] < 3 , 1 ,0)",0.329453342,0.00023945299999999999,pd.DataFrame.apply,np.where
https://www.kaggle.com/brandao/test-7,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)", df['shot_distance'].apply(lambda row:row if row < 45 else     45),0.5655871720000001,0.009200719,pd.DataFrame.apply,pd.Series.apply
https://www.kaggle.com/brandao/test-7,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)", df['time_remaining'].apply(lambda row: 1 if row < 3 else 0),0.335478396,0.00810407,pd.DataFrame.apply,pd.Series.apply
https://www.kaggle.com/brandao/teste-5,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)","np.where( df['shot_distance'] < 45 , df['shot_distance'] ,    45)",0.48025104,0.000260358,pd.DataFrame.apply,np.where
https://www.kaggle.com/brandao/teste-5,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)","np.where( df['time_remaining'] < 3 , 1 ,0)",0.322935821,0.00021333900000000003,pd.DataFrame.apply,np.where
https://www.kaggle.com/brandao/winner-script,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)","np.where( df['shot_distance'] < 45 , df['shot_distance'] ,    45)",0.473687352,0.00023840799999999998,pd.DataFrame.apply,np.where
https://www.kaggle.com/brandao/winner-script,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)","np.where( df['time_remaining'] < 3 , 1 ,0)",0.316260663,0.00023745599999999998,pd.DataFrame.apply,np.where
https://www.kaggle.com/brandao/winner-script,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)", df['shot_distance'].apply(lambda row:row if row < 45 else     45),0.507239612,0.009975686999999999,pd.DataFrame.apply,pd.Series.apply
https://www.kaggle.com/brandao/winner-script,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)", df['time_remaining'].apply(lambda row: 1 if row < 3 else 0),0.35271415100000003,0.008566964,pd.DataFrame.apply,pd.Series.apply
https://www.kaggle.com/bschaefer/frequent-items-per-user-baseline-lb-0-30,"orders.loc[orders.eval_set == 'test', 'user_id']","orders.ix[orders.eval_set == 'test', 'user_id']",0.145052461,0.143514547,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/canran/titanic-rf,"X_df.loc[:, ('Age')]","X_df.ix[:, ('Age')]",4.8e-05,4.22e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.000775402,0.000238139,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",0.00028686,0.000251029,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",0.000299197,0.000256754,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.00044192300000000004,0.000206358,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.000747597,0.000225983,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.000729519,0.000223826,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.0005644000000000001,0.00020005900000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",0.00029628900000000004,0.0002544,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",0.000284502,0.000250615,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.000935107,0.000207547,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.0006059619999999999,0.00020444200000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.000911151,0.000394971,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.0007843510000000001,0.000294762,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.00041962699999999994,0.000198779,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.000325895,0.00020067700000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",0.00062633,0.000613623,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",0.000743565,0.000234313,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",0.0007258039999999999,0.00022162400000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.00048358300000000005,0.00020339400000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.000325953,0.000192851,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.000287192,0.000242655,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.000285647,0.00024671599999999996,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]",0.000635028,0.000618485,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.00040665300000000004,0.000203805,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.00070515,0.000223936,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.0008597289999999999,0.00023830099999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.000724075,0.000247363,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.000765249,0.00023270900000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.000285561,0.000240273,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",0.000394519,0.000228788,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/carmnejsu/feature-engineering-different-models,dataset.isnull().values.sum(),"np.count_nonzero(dataset.isnull().values,)",0.000476485,0.000355116,np.ndarray.sum,np.count_nonzero
https://www.kaggle.com/carmnejsu/feature-engineering-different-models,dataset.isnull().values.sum(),"np.sum(dataset.isnull().values,)",0.000576172,0.000544724,np.ndarray.sum,np.sum
https://www.kaggle.com/cast42/calibratedcv-xgboost,np.sum(y == 1),np.count_nonzero(y == 1),0.001259632,0.001217126,np.sum,np.count_nonzero
https://www.kaggle.com/cast42/calibratedcv-xgboost,np.sum(y == 0),np.count_nonzero(y == 0),0.001047685,0.000754423,np.sum,np.count_nonzero
https://www.kaggle.com/cast42/calibratedcv-xgboost,np.sum(y == 1),(y == 1).sum(),0.000333742,0.00032664799999999997,np.sum,np.ndarray.sum
https://www.kaggle.com/cesarboucas/oneclasssvm,np.ones(X_outliers.shape[0]),np.empty(X_outliers.shape[0]); r2.fill(1),2.29e-06,1.24e-06,np.ones,np.empty
https://www.kaggle.com/ceyarzam/sssss,"train.ix[:, 1:]","train.iloc[:, 1:]",0.000161036,0.000127296,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/ceyarzam/sssss,"train.ix[:, (0)]","train.iloc[:, (0)]",4.9e-05,3.9399999999999995e-05,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/chechir/export-feats-kernel,np.sum(shared_weights),"np.einsum('i->',shared_weights)",8.54e-06,5.13e-06,np.sum,np.einsum
https://www.kaggle.com/chenhagn/test-1,"train.ix[:, (0)]","train.iloc[:, (0)]",4.61e-05,3.8299999999999996e-05,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/chriscc/xgb-cv,"np.hstack((trainCatVecX, trainNumX))","np.append(trainCatVecX, trainNumX, axis=1)",0.038640107,0.035288678,np.hstack,np.append
https://www.kaggle.com/chriscc/xgb-cv,"np.hstack((testCatVecX, testNumX))","np.append(testCatVecX, testNumX, axis=1)",0.040092507,0.038746256,np.hstack,np.append
https://www.kaggle.com/chriscc/xgb-cv,"np.hstack((trainCatVecX, trainNumX))","np.concatenate((trainCatVecX, trainNumX), axis=1)",0.032915359,0.031856213,np.hstack,np.concatenate
https://www.kaggle.com/chriscc/xgb-cv,np.sum(true_order),(true_order).sum(),3.570000000000001e-05,2.78e-05,np.sum,np.ndarray.sum
https://www.kaggle.com/chriscc/xgb-cv,np.sum(true_order),(true_order).sum(),3.18e-05,2.8600000000000004e-05,np.sum,np.ndarray.sum
https://www.kaggle.com/chriscc/xgb-py,"np.hstack((trainCatVecX, trainNumX))","np.concatenate((trainCatVecX, trainNumX), axis=1)",0.03541935,0.033560087999999995,np.hstack,np.concatenate
https://www.kaggle.com/chriscc/xgb-py,"np.hstack((testCatVecX, testNumX))","np.concatenate((testCatVecX, testNumX), axis=1)",0.032618254,0.032438881,np.hstack,np.concatenate
https://www.kaggle.com/chrisgundling/anyone-else-try-using-svm,counts.iloc[0],counts.iat[0],5.25e-06,2.98e-06,pd.Series.iloc,pd.Series.iat
https://www.kaggle.com/cjansen/magic-numbers-private-lb-0-31647,"train.loc[bad_index, ['max_floor', 'floor']]","train.ix[bad_index, ['max_floor', 'floor']]",0.000653679,0.000635829,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/company/kbss-1,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)","np.where( df['shot_distance'] < 45 , df['shot_distance'] ,    45)",0.495377904,0.000257188,pd.DataFrame.apply,np.where
https://www.kaggle.com/company/kbss-1,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)","np.where( df['time_remaining'] < 3 , 1 ,0)",0.317963645,0.00021601400000000002,pd.DataFrame.apply,np.where
https://www.kaggle.com/company/kbss-1,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)", df['shot_distance'].apply(lambda row:row if row < 45 else     45),0.49471936299999997,0.008006373,pd.DataFrame.apply,pd.Series.apply
https://www.kaggle.com/company/kbss-1,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)", df['time_remaining'].apply(lambda row: 1 if row < 3 else 0),0.314414521,0.008101894,pd.DataFrame.apply,pd.Series.apply
https://www.kaggle.com/computermage/test-titanic-survival-script,family['FamilySize'].map(lambda s: 1 if 5 <= s else 0),"np.where( 5 <= family['FamilySize'] , 1 ,0)",0.001865645,0.000474549,pd.Series.map,np.where
https://www.kaggle.com/cooleel/a-quick-try-of-h2o-automl-on-titanic-dataset,np.ones(data.shape[0]),np.empty(data.shape[0]); r2.fill(1),3.24e-06,2.19e-06,np.ones,np.empty
https://www.kaggle.com/corgicoffee/kernelb4bd873fab,"train_data.loc[:, (['Fare'])]","train_data.ix[:, (['Fare'])]",0.000419219,0.000412638,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/corgicoffee/kernelb4bd873fab,"test_data.loc[:, (['Fare'])]","test_data.ix[:, (['Fare'])]",0.000414461,0.000401925,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/cttsai/xgb-trial-oct-08,"clustered_train.loc[:, (name)]","clustered_train.ix[:, (name)]",4.02e-05,3.87e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/cttsai/xgb-trial-oct-08,"train.loc[:, (name)]","train.ix[:, (name)]",4.15e-05,4.09e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/cttsai/xgb-trial-oct-08,df['MoSold'].astype(str),df['MoSold'].apply(str),0.001428795,0.0006121809999999999,pd.Series.astype,pd.Series.apply
https://www.kaggle.com/cttsai/xgb-voting-weighted-goblins,"train[target].replace({'Goblin': 1.15, 'Ghost': 1.0, 'Ghoul': 1.0})","train[target].map({'Goblin': 1.15, 'Ghost': 1.0, 'Ghoul': 1.0})",0.001403785,0.000828658,pd.Series.replace,pd.Series.map
https://www.kaggle.com/cxxacxx/have-a-try-2,"test.loc[:, 'MSSubClass':'SaleCondition']","test.ix[:, 'MSSubClass':'SaleCondition']",0.00077478,0.000751134,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/cxxacxx/have-a-try-2,"train.loc[:, (columns_for_pc)]","train.ix[:, (columns_for_pc)]",0.000495249,0.000491396,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/davideng/homeprices,"train_dataset.ix[train_dataset.Alley.notnull(), 'Alley']","train_dataset.loc[train_dataset.Alley.notnull(), 'Alley']",0.001961454,0.000334975,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/davideng/homeprices,"train_dataset.ix[train_dataset.Alley.isnull(), 'Alley']","train_dataset.loc[train_dataset.Alley.isnull(), 'Alley']",0.0014790970000000002,0.00026036799999999997,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/davideng/homeprices,"train_dataset.ix[train_dataset.MasVnrType.isnull(), 'MasVnrType']","train_dataset.loc[train_dataset.MasVnrType.isnull(), 'MasVnrType']",0.0015012970000000002,0.000329564,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/davideng/homeprices,"train_dataset.ix[train_dataset.MasVnrType == 'None', 'MasVnrArea']","train_dataset.loc[train_dataset.MasVnrType == 'None', 'MasVnrArea']",0.002196458,0.000618972,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/davideng/homeprices,"train_dataset.ix[train_dataset.Fireplaces == 0, 'FireplaceQu']","train_dataset.loc[train_dataset.Fireplaces == 0, 'FireplaceQu']",0.001545613,0.000348711,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/davideng/homeprices,"train_dataset.ix[train_dataset.GarageCars.isnull(), 'GarageCars']","train_dataset.loc[train_dataset.GarageCars.isnull(), 'GarageCars']",0.001508019,0.000259798,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/davideng/homeprices,"train_dataset.ix[train_dataset.GarageQual.isnull(), 'GarageQual']","train_dataset.loc[train_dataset.GarageQual.isnull(), 'GarageQual']",0.0014531070000000001,0.000323533,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/davideng/homeprices,"train_dataset.ix[train_dataset.GarageCars == 0, 'GarageType']","train_dataset.loc[train_dataset.GarageCars == 0, 'GarageType']",0.0015214120000000002,0.000348925,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/davideng/titanic-attempt-1-random-forest,"np.where(y_pred[:] > 0.95, 1, 0)",(y_pred[:] > 0.95).astype((y_pred[:] > 0.95).dtype),3.19e-06,2.21e-06,np.where,np.ndarray.astype
https://www.kaggle.com/demoonism/rf-multilabel-framework-lb-0-022475,"np.hstack([train_X, temp_train_X])","np.append(train_X, temp_train_X, axis=1)",0.019397576,0.019120813,np.hstack,np.append
https://www.kaggle.com/demoonism/rf-multilabel-framework-lb-0-022475,"np.hstack([test_X, temp_test_X])","np.append(test_X, temp_test_X, axis=1)",0.018334635,0.017872924,np.hstack,np.append
https://www.kaggle.com/demoonism/rf-multilabel-framework-lb-0-022475,"np.hstack([train_X, temp_train_X])","np.concatenate([train_X, temp_train_X], axis=1)",0.016558725,0.016548026,np.hstack,np.concatenate
https://www.kaggle.com/demoonism/rf-multilabel-framework-lb-0-022475,"np.hstack([test_X, temp_test_X])","np.concatenate([test_X, temp_test_X], axis=1)",0.015378163,0.015247408999999998,np.hstack,np.concatenate
https://www.kaggle.com/devendramittal/randomforest,"np.column_stack((Idtest, YPred))","np.transpose((Idtest, YPred))",6.9e-05,4.05e-05,np.column_stack,np.transpose
https://www.kaggle.com/devendramittal/randomforest,"np.column_stack((Idtest, YPred))","np.vstack((Idtest.T, YPred.T)).T",6.26e-05,4.34e-05,np.column_stack,np.vstack
https://www.kaggle.com/devinanzelmo/component-cdf-s-and-sample-predictions,train.query('num_scans > 7 and num_scans < 18'),train.loc[(train.num_scans > 7 )& (train.num_scans < 18)],0.171832247,0.16331334,pd.DataFrame.query,pd.DataFrame.loc
https://www.kaggle.com/devinanzelmo/fiddling-with-xgb,train.query('num_scans > 17'),train.loc[train.num_scans > 17],0.009438867,0.008256665,pd.DataFrame.query,pd.DataFrame.loc
https://www.kaggle.com/dexter22/testing,"train.loc[train['Age'].isnull(), ['Age']]","train.ix[train['Age'].isnull(), ['Age']]",0.002322621,0.002290885,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/dlyzer/k-nearest-neighbors,"np.hstack([Z_train, X_pt_q_train])","np.append(Z_train, X_pt_q_train, axis=1)",2.6000000000000002e-05,1.7800000000000002e-05,np.hstack,np.append
https://www.kaggle.com/dlyzer/k-nearest-neighbors,"np.hstack([Z_test, X_pt_q_test])","np.append(Z_test, X_pt_q_test, axis=1)",4.44e-05,3.2200000000000003e-05,np.hstack,np.append
https://www.kaggle.com/dlyzer/k-nearest-neighbors,"np.hstack([Z_train, X_pt_q_train])","np.concatenate([Z_train, X_pt_q_train], axis=1)",7.32e-05,5.73e-05,np.hstack,np.concatenate
https://www.kaggle.com/dlyzer/k-nearest-neighbors,"np.hstack([Z_test, X_pt_q_test])","np.concatenate([Z_test, X_pt_q_test], axis=1)",6.25e-05,4.54e-05,np.hstack,np.concatenate
https://www.kaggle.com/drarfc/knn-accelerated-v3,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T",4.18e-05,4.01e-05,np.column_stack,np.vstack
https://www.kaggle.com/drarfc/script-competition-facebook-v-2-1,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T",5.94e-05,4.88e-05,np.column_stack,np.vstack
https://www.kaggle.com/drasko/1st-python-try-1,"np.c_[xx.ravel(), yy.ravel()]","np.hstack([xx.ravel().reshape(len(xx.ravel()),1), yy.ravel().reshape(len(xx.ravel()),1)])",0.008973865,0.008872205,np.c_,np.hstack
https://www.kaggle.com/ed25519/code-taken-from-xkcd-examples-showcase-xkcd-html,np.ones(100),np.empty(100); r2.fill(1),1.83e-06,8.85e-07,np.ones,np.empty
https://www.kaggle.com/ekethio/titanic-second,"file.ix[file['Embarked'] == 'S', 'Embarked']","file.loc[file['Embarked'] == 'S', 'Embarked']",0.001604897,0.00041290300000000005,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ekethio/titanic-second,"file.ix[file['Embarked'] == 'C', 'Embarked']","file.loc[file['Embarked'] == 'C', 'Embarked']",0.001726064,0.00041257800000000003,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ekethio/titanic-second,"file.ix[file['Embarked'] == 'Q', 'Embarked']","file.loc[file['Embarked'] == 'Q', 'Embarked']",0.002463547,0.000802832,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ekethio/titanic-second,"file.ix[file.Age > 60, 'Above_50']","file.loc[file.Age > 60, 'Above_50']",0.0016954510000000002,0.00034770199999999997,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/eliotbarr/stacking-starter,np.array(all_data[:train.shape[0]]),np.concatenate([all_data[:train.shape[0]]]),0.026199179,0.024035168,np.array,np.concatenate
https://www.kaggle.com/eliotbarr/stacking-starter,np.array(all_data[train.shape[0]:]),np.concatenate([all_data[train.shape[0]:]]),0.016609186,0.014390853,np.array,np.concatenate
https://www.kaggle.com/eponymous/weighted-models-example,"scores.ix[:, (scores.columns != 'split')]","scores.loc[:, (scores.columns != 'split')]",0.000697916,0.00039297199999999995,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.000648743,0.000198223,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",0.000297317,0.000244644,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",0.00029445,0.000253299,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.00044255,0.000198404,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.000730023,0.00023203,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.000876852,0.00024974599999999996,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.0005863590000000001,0.000216615,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.000395006,0.000203224,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",0.000302436,0.000251386,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",0.000287136,0.000256516,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.000951895,0.00020341400000000001,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.000614581,0.00021464599999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.000914118,0.00041142,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.000775121,0.000275821,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.00043127199999999996,0.00019596599999999997,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.000321533,0.00019493400000000001,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",0.000640457,0.000623369,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",0.0006058169999999999,0.000596963,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",0.000750245,0.00024609,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",0.0007450569999999999,0.000253016,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.000541192,0.000223589,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.00033993699999999995,0.00019911200000000001,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.00029899799999999997,0.000261412,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.00032716799999999997,0.000250519,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]",0.000641145,0.0006374369999999999,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.000424424,0.00021741599999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.0007325880000000001,0.000235245,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.000696522,0.000222749,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.000787383,0.00025346099999999996,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.000712011,0.00023139299999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.00033465,0.000273068,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",0.000360898,0.000201482,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,train['ratio_life_sq_full_sq'].ix[train['ratio_life_sq_full_sq'] < 0],train['ratio_life_sq_full_sq'].loc[train['ratio_life_sq_full_sq'] < 0],0.000363251,0.000338298,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,train['ratio_life_sq_full_sq'].ix[train['ratio_life_sq_full_sq'] > 1],train['ratio_life_sq_full_sq'].loc[train['ratio_life_sq_full_sq'] > 1],0.00034928300000000004,0.00032896199999999997,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,test['ratio_life_sq_full_sq'].ix[test['ratio_life_sq_full_sq'] < 0],test['ratio_life_sq_full_sq'].loc[test['ratio_life_sq_full_sq'] < 0],0.000344032,0.000322891,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,test['ratio_life_sq_full_sq'].ix[test['ratio_life_sq_full_sq'] > 1],test['ratio_life_sq_full_sq'].loc[test['ratio_life_sq_full_sq'] > 1],0.00039996599999999997,0.000326262,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,test['ratio_kitch_sq_life_sq'].ix[test['ratio_kitch_sq_life_sq'] < 0],test['ratio_kitch_sq_life_sq'].loc[test['ratio_kitch_sq_life_sq'] < 0],0.000352637,0.000332657,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,test['ratio_kitch_sq_life_sq'].ix[test['ratio_kitch_sq_life_sq'] > 1],test['ratio_kitch_sq_life_sq'].loc[test['ratio_kitch_sq_life_sq'] > 1],0.000344138,0.000318425,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,train['ratio_kitch_sq_full_sq'].ix[train['ratio_kitch_sq_full_sq'] < 0],train['ratio_kitch_sq_full_sq'].loc[train['ratio_kitch_sq_full_sq'] < 0],0.000345445,0.000337461,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,train['ratio_kitch_sq_full_sq'].ix[train['ratio_kitch_sq_full_sq'] > 1],train['ratio_kitch_sq_full_sq'].loc[train['ratio_kitch_sq_full_sq'] > 1],0.000350945,0.000329409,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/ezyyyy/silly-silly-data,test['ratio_kitch_sq_full_sq'].ix[test['ratio_kitch_sq_full_sq'] < 0],test['ratio_kitch_sq_full_sq'].loc[test['ratio_kitch_sq_full_sq'] < 0],0.00034172,0.00032852,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/fzhurd/titanic-suvive20160924v4,combined['FamilySize'].map(lambda s: 1 if 5 <= s else 0),"np.where( 5 <= combined['FamilySize'] , 1 ,0)",0.0015706939999999999,0.00048398,pd.Series.map,np.where
https://www.kaggle.com/gilbar/visualizing-data,"train.loc[:, (keep)]","train.ix[:, (keep)]",0.135387208,0.129040867,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/gravity/testing-1,"train.ix[:, (0)]","train.iloc[:, (0)]",5.04e-05,3.9200000000000004e-05,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.000661867,0.00019975,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",0.00029750400000000003,0.000250369,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",0.000290547,0.000257547,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.000445399,0.000212108,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.000719215,0.000231825,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.000718652,0.000216808,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.000575531,0.000211802,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.000411006,0.000213227,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",0.000303757,0.000279744,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",0.000285203,0.00024784599999999997,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.001271713,0.000239338,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.000608445,0.000210189,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.000908517,0.00041248099999999997,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.0007883030000000001,0.000287988,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.000487201,0.000230703,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",0.000639208,0.000628967,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",0.000651267,0.000603514,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",0.000747745,0.00025437,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",0.000743308,0.000231128,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.0004933240000000001,0.00020936700000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.000349762,0.00019922400000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.000308262,0.000263975,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]",0.00072864,0.000674315,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.000407554,0.00020564,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.000733084,0.000239373,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.00088733,0.00023591,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.000820882,0.000265965,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.0007243919999999999,0.000213148,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.000297241,0.000257532,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",0.000355342,0.00019837200000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/hakeem/stacked-then-averaged-models-0-5697,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.append(np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed, axis=1)",0.037845517,0.037476323,np.hstack,np.append
https://www.kaggle.com/hakeem/stacked-then-averaged-models-0-5697,"np.hstack((X, out_of_fold_predictions))","np.append(X, out_of_fold_predictions, axis=1)",0.01824676,0.016961897,np.hstack,np.append
https://www.kaggle.com/hakeem/stacked-then-averaged-models-0-5697,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.append(np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed, axis=1)",0.030152803,0.029993304,np.hstack,np.append
https://www.kaggle.com/hakeem/stacked-then-averaged-models-0-5697,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.concatenate((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed), axis=1)",0.027704611,0.025213315,np.hstack,np.concatenate
https://www.kaggle.com/hakeem/stacked-then-averaged-models-0-5697,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.concatenate((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed), axis=1)",0.019523598,0.017384971000000003,np.hstack,np.concatenate
https://www.kaggle.com/happycube/python-ver-of-group-1-and-date-trick,np.where(~g.isnull()),np.nonzero(~g.isnull()),0.000115735,9.63e-05,np.where,np.nonzero
https://www.kaggle.com/harshitsaini/clean-character-image,"binary_image.loc[:, (isValid)]","binary_image.ix[:, (isValid)]",0.153808928,0.15222290300000002,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/harshitsaini/kmeans-kernel,"X.loc[:, (isValid)]","X.ix[:, (isValid)]",0.143521745,0.143246752,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/heaviside9/sklearn-linear-regression-benchmark,np.sum(E),(E).sum(),3.66e-06,2.07e-06,np.sum,np.ndarray.sum
https://www.kaggle.com/heaviside9/sklearn-linear-regression-benchmark,np.sum(E),(E).sum(),7.27e-06,3.86e-06,np.sum,np.ndarray.sum
https://www.kaggle.com/heaviside9/sklearn-linear-regression-benchmark,np.sum(E),(E).sum(),3.63e-06,3.13e-06,np.sum,np.ndarray.sum
https://www.kaggle.com/heibankeli/pca-knn,"train.ix[:, (0)]","train.iloc[:, (0)]",4.6500000000000005e-05,4.0799999999999996e-05,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/heibankeli/pca-svm1,"train.ix[:, (0)]","train.iloc[:, (0)]",0.000126332,6.56e-05,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/hideki1234/neural-network,"np.hstack((np.zeros((Theta2.shape[0], 1)), Theta2[:, 1:]))","np.append(np.zeros((Theta2.shape[0], 1)), Theta2[:, 1:], axis=1)",5.24e-06,3.95e-06,np.hstack,np.append
https://www.kaggle.com/hideki1234/neural-network,"np.hstack((np.zeros((Theta1.shape[0], 1)), Theta1[:, 1:]))","np.append(np.zeros((Theta1.shape[0], 1)), Theta1[:, 1:], axis=1)",1.24e-05,9.22e-06,np.hstack,np.append
https://www.kaggle.com/hideki1234/neural-network,"np.hstack((np.zeros((Theta2.shape[0], 1)), Theta2[:, 1:]))","np.concatenate((np.zeros((Theta2.shape[0], 1)), Theta2[:, 1:]), axis=1)",4.86e-06,2.67e-06,np.hstack,np.concatenate
https://www.kaggle.com/hideki1234/neural-network,"np.hstack((np.zeros((Theta1.shape[0], 1)), Theta1[:, 1:]))","np.concatenate((np.zeros((Theta1.shape[0], 1)), Theta1[:, 1:]), axis=1)",1.21e-05,8.98e-06,np.hstack,np.concatenate
https://www.kaggle.com/hideki1234/neural-network,Theta1.dot(Xt),"np.tensordot(Theta1,Xt,axes=1)",0.050216855,0.047893103,np.ndarray.dot,np.tensordot
https://www.kaggle.com/hideki1234/neural-network,Delta3.dot(A2.T),"np.tensordot(Delta3,A2.T,axes=1)",0.001686029,0.0016652770000000002,np.ndarray.dot,np.tensordot
https://www.kaggle.com/hideki1234/neural-network,Delta2.dot(Xt.T),"np.tensordot(Delta2,Xt.T,axes=1)",0.032887944,0.031593973,np.ndarray.dot,np.tensordot
https://www.kaggle.com/hideki1234/neural-network,np.ones(m),np.empty(m); r2.fill(1),9.62e-06,8.51e-06,np.ones,np.empty
https://www.kaggle.com/hideki1234/neural-network,"np.vstack((a_0, X.T))","np.column_stack((a_0.T, X.T.T)).T",0.143587123,0.142631237,np.vstack,np.column_stack
https://www.kaggle.com/huangweijie/kobe-bryant,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)","np.where( df['shot_distance'] < 45 , df['shot_distance'] ,    45)",0.47983167200000004,0.000246581,pd.DataFrame.apply,np.where
https://www.kaggle.com/huangweijie/kobe-bryant,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)","np.where( df['time_remaining'] < 3 , 1 ,0)",0.312661303,0.000211583,pd.DataFrame.apply,np.where
https://www.kaggle.com/huangweijie/kobe-bryant,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)", df['shot_distance'].apply(lambda row:row if row < 45 else     45),0.480518461,0.007736656,pd.DataFrame.apply,pd.Series.apply
https://www.kaggle.com/huangweijie/kobe-bryant,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)", df['time_remaining'].apply(lambda row: 1 if row < 3 else 0),0.317701201,0.010333708,pd.DataFrame.apply,pd.Series.apply
https://www.kaggle.com/iangarland/mnist,"train.ix[:, (0)]","train.iloc[:, (0)]",5.2600000000000005e-05,4.68e-05,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/inpefess/xgboost-in-python-with-rmspe,"data.loc[data['StateHoliday'] == 'a', 'StateHoliday']","data.ix[data['StateHoliday'] == 'a', 'StateHoliday']",0.051488919,0.049811095,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/isaac7/talking-script1,np.ones(len(FLS)),np.empty(len(FLS)); r2.fill(1),0.009717704,0.0017814089999999999,np.ones,np.empty
https://www.kaggle.com/isaac7/visualize-mnist,"train.ix[:, 1:]","train.iloc[:, 1:]",9.73e-05,8.499999999999999e-05,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/isaac7/visualize-mnist,"train.ix[:, (0)]","train.iloc[:, (0)]",4.970000000000001e-05,4.03e-05,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/iviglious/teamysi-titanic-rf-a,"main_all_df.ix[main_all_df.Survived.isnull() == False, 'Survived']","main_all_df.loc[main_all_df.Survived.isnull() == False, 'Survived']",0.0016427070000000002,0.00038659199999999995,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/iwasred/pubg-finish-placement-prediction-1,"train_data.loc[:, (l)]","train_data.ix[:, (l)]",0.200532336,0.188654268,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/izzul02/age-gender-breed-and-name-vs-outcome,np.sum(feature_values_cat[outcome_cat == unique_outcomes[i]].isnull()),np.count_nonzero(feature_values_cat[outcome_cat == unique_outcomes[i]].isnull()),0.00445703,0.002121268,np.sum,np.count_nonzero
https://www.kaggle.com/izzul02/age-gender-breed-and-name-vs-outcome,np.sum(feature_values_cat[outcome_cat == unique_outcomes[i]].notnull()),np.count_nonzero(feature_values_cat[outcome_cat == unique_outcomes[i]].notnull()),0.0008935839999999999,0.0007993210000000001,np.sum,np.count_nonzero
https://www.kaggle.com/izzul02/age-gender-breed-and-name-vs-outcome,np.sum(feature_values_dog[outcome_dog == unique_outcomes[i]].isnull()),np.count_nonzero(feature_values_dog[outcome_dog == unique_outcomes[i]].isnull()),0.0011871219999999999,0.001036429,np.sum,np.count_nonzero
https://www.kaggle.com/izzul02/age-gender-breed-and-name-vs-outcome,np.sum(feature_values_dog[outcome_dog == unique_outcomes[i]].notnull()),np.count_nonzero(feature_values_dog[outcome_dog == unique_outcomes[i]].notnull()),0.001221469,0.001076111,np.sum,np.count_nonzero
https://www.kaggle.com/izzul02/age-gender-breed-and-name-vs-outcome,"np.sum(fractions_dog[1:, :1], axis=1)","np.einsum('ij->i',fractions_dog[1:, :1])",1.31e-05,1.0300000000000001e-05,np.sum,np.einsum
https://www.kaggle.com/janekk/xgboost-with-optimized-offsets,np.ones(num_classes),np.empty(num_classes); r2.fill(1),4.54e-06,2.19e-06,np.ones,np.empty
https://www.kaggle.com/janekk/xgboost-with-optimized-offsets,"np.vstack((train_preds, train_preds, train['Response'].values))","np.column_stack((train_preds.T, train_preds.T, train['Response'].values.T)).T",0.00106226,0.000729565,np.vstack,np.column_stack
https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.000755575,0.00023229099999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",0.000298376,0.00025073799999999997,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",0.000297151,0.00026428,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.000451474,0.000218025,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.000947345,0.00023568099999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.000736522,0.000221731,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.000612355,0.000217673,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.00041146900000000003,0.000237656,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",0.00033054,0.000248175,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",0.000742457,0.000291342,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.001094898,0.000211303,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.000619609,0.000205353,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.0009522980000000001,0.00042849800000000003,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.0008849439999999999,0.000308937,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.00042358900000000004,0.000203169,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.00033627,0.00019392099999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",0.000655725,0.000625639,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",0.000616978,0.000591477,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",0.00075368,0.000243513,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",0.000728087,0.000224763,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.000499894,0.00020303099999999997,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.000349669,0.000188966,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.00032403900000000003,0.00030071,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.000296507,0.000249903,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]",0.0006841010000000001,0.000625939,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.00044947199999999997,0.00021007,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.000768157,0.000234516,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.0007146310000000001,0.00021854400000000001,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.000779368,0.000248416,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.0008152999999999999,0.000270853,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.000318458,0.00026152099999999996,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",0.000373429,0.00021522700000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.000819286,0.000211428,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",0.000300458,0.00025558,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",0.00028915099999999997,0.00024159099999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.00045776199999999996,0.00020603,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.00075046,0.00023156400000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.000788163,0.00021922400000000001,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.0005749269999999999,0.000204556,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.000413075,0.000225979,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",0.000287855,0.000248763,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",0.00031449799999999997,0.00028938,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.000935207,0.00021117599999999999,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.000616317,0.00019890200000000001,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.000943325,0.000407995,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.00081385,0.000294205,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.000464826,0.000208602,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.000346712,0.00019800900000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",0.0006189559999999999,0.000600954,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",0.000750695,0.000244181,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",0.00072476,0.00023359,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.000477846,0.000203365,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.000320216,0.00019679900000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.000300617,0.00025263,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.000292332,0.00024896200000000003,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.00040906,0.00020092,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.000792948,0.000250867,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.0007126669999999999,0.00021592400000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.0008042189999999999,0.00024749799999999997,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.0007220410000000001,0.000225916,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.000308413,0.000247015,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",0.000354504,0.000199142,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.000783585,0.000209415,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",0.000286639,0.000244842,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",0.000289407,0.000244902,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.00043082699999999995,0.000201589,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.000723812,0.00022481099999999997,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.000736033,0.00024374099999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.000559148,0.000208835,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.000460889,0.00023625599999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",0.000292699,0.00026450299999999997,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",0.000302791,0.000260643,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.0009145339999999999,0.00020382400000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.000600119,0.000242272,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.0009389839999999999,0.000413193,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.0007792360000000001,0.000297495,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.00043605699999999995,0.000205214,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.000324234,0.000193387,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",0.000638753,0.000623284,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",0.000671495,0.000617051,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",0.0007482039999999999,0.000241875,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",0.0007266330000000001,0.000243088,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.0004732,0.00019930299999999999,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.000327947,0.000191443,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.000297188,0.0002524,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.000290228,0.00028156,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]",0.00063164,0.000620962,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.000409377,0.000204553,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.000738787,0.00024665,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.0007102569999999999,0.00021,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.000757541,0.000249136,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.000722859,0.00022580400000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.000304171,0.00028058900000000003,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",0.000345851,0.000209743,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.001067622,0.000215727,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",0.00029742099999999997,0.00026656200000000003,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",0.00029116,0.000254366,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.000461594,0.00020551,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.00073817,0.00024746400000000003,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.00076276,0.000235396,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.0007327880000000001,0.00021513400000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.00040349099999999996,0.000212115,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",0.000291276,0.000249863,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",0.000298162,0.00024813200000000003,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.000960995,0.000213825,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.000746424,0.00022884200000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.000990803,0.000424945,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.0008095960000000001,0.000282853,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.000427621,0.00020315,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.00036373199999999997,0.00020083700000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",0.0007799189999999999,0.000258073,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",0.0007211310000000001,0.000246902,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.000544321,0.00020679799999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.000326567,0.000198136,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.000309036,0.000262704,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.000319717,0.000267762,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]",0.0007729719999999999,0.000651888,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.00042308900000000003,0.00025183,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.000765414,0.000261906,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.000801999,0.00024198400000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.0007840060000000001,0.000254004,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.0007703230000000001,0.00023092,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.000293013,0.000250559,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",0.00037535,0.00020211,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.000838575,0.000209183,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",0.000299581,0.000276002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",0.000292243,0.000258422,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.0006559210000000001,0.000201948,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.000722958,0.000220945,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.0007119569999999999,0.000221478,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.000576386,0.000200654,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.00042401099999999996,0.00020563,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",0.00030504,0.000264763,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",0.000292653,0.000251417,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.00111709,0.00021039,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.0006489169999999999,0.00021087400000000003,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.00092404,0.00042553599999999996,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.000840045,0.000288236,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.000429268,0.00020412099999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.000324117,0.00018961,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",0.000642002,0.000618761,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",0.00082821,0.000253197,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",0.0007324660000000001,0.000230073,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.000498155,0.000206347,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.000328661,0.00021648200000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.00032919599999999997,0.000253437,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.000288367,0.000260819,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]",0.000652873,0.000652351,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.000418389,0.00020438700000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.0007605139999999999,0.00022537799999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.000714103,0.000229842,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.000765523,0.000255275,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.0007720310000000001,0.00022877,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.000284598,0.000251873,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",0.000359336,0.000202748,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jaycb26/xgbryant,"data.apply(lambda row: 28 if row['shot_distance'] > 28 else row[	    'shot_distance'], axis=1)","np.where( data['shot_distance'] > 28 , 28 ,data[	    'shot_distance'])",0.509619202,0.00027573,pd.DataFrame.apply,np.where
https://www.kaggle.com/jeshugames2/classification-using-svm,"np.hstack((p_id, y_pred))","np.append(p_id, y_pred, axis=1)",5.29e-06,4.2e-06,np.hstack,np.append
https://www.kaggle.com/jeshugames2/classification-using-svm,"np.hstack((p_id, y_pred))","np.concatenate((p_id, y_pred), axis=1)",4.71e-06,2.22e-06,np.hstack,np.concatenate
https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.000649198,0.000212143,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",0.00029056,0.000251455,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",0.000285437,0.000250505,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.00044744800000000003,0.000203484,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.00072692,0.000219137,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.0007197210000000001,0.000217094,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.000612245,0.00020421599999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.000388324,0.000201692,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",0.000284008,0.000252688,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",0.000282318,0.000249804,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.000938632,0.000203671,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.000621875,0.000209344,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.000939504,0.00043511900000000003,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.0009116430000000001,0.000315255,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.00048465,0.000241582,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.00033049800000000003,0.000196617,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",0.0006260430000000001,0.000601294,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",0.000614572,0.000596051,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",0.0007510819999999999,0.000244172,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",0.000716519,0.000225993,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.000489328,0.000249952,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.00033023300000000003,0.000194468,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.000296421,0.00025828,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.00028728900000000003,0.000241418,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]",0.000629909,0.000627651,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.00041001300000000003,0.00020606400000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.000740632,0.000230335,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.000787064,0.000218388,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.000748686,0.000239318,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.0007254589999999999,0.000223555,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.000301978,0.000244595,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",0.000393691,0.000222478,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/judata/talkingdata-xgb-param-tuning-rdm-sampling,"np.sum(np.logical_and(y_pred == 1, y_test == 0))","np.count_nonzero(np.logical_and(y_pred == 1, y_test == 0))",0.000479496,0.00033553699999999996,np.sum,np.count_nonzero
https://www.kaggle.com/justdoit/xgboost-in-python-with-rmspe,df[featureCol].map(lambda x: 1 if x == val else 0),"np.where( df[featureCol] == val , 1 ,0)",0.682939018,0.107790126,pd.Series.map,np.where
https://www.kaggle.com/justdoit/xgboost-in-python-with-rmspe,data['StoreType'].map(lambda y: 1 if y == x else 0),"np.where( data['StoreType'] == x , 1 ,0)",0.7229284359999999,0.079913001,pd.Series.map,np.where
https://www.kaggle.com/justfor/bench-stacked-generalization,"test.ix[:, ('Id')]","test.loc[:, ('Id')]",3.4200000000000005e-05,2.3e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/justfor/bench-stacked-generalization,"train.ix[:, ('Id')]","train.loc[:, ('Id')]",3.32e-05,2.4299999999999998e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/justfor/bench-stacked-generalization,"np.hstack((testCatVecX, testNumX))","np.append(testCatVecX, testNumX, axis=1)",0.023109867000000003,0.022520609,np.hstack,np.append
https://www.kaggle.com/justfor/bench-stacked-generalization,"np.hstack((testCatVecX, testNumX))","np.concatenate((testCatVecX, testNumX), axis=1)",0.020873374,0.020659372,np.hstack,np.concatenate
https://www.kaggle.com/justinabel/prud-1,"train_sample.ix[:, ('Response')]","train_sample.loc[:, ('Response')]",2.8800000000000002e-05,2.18e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/justinabel/prud-1,"X.ix[:, (column)]","X.loc[:, (column)]",6.440000000000001e-05,4.57e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/justinabel/prud-1,"X.ix[:, (column)]","X.loc[:, (column)]",3.35e-05,2.3e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/justinabel/prud-1,"X.ix[nans, column]","X.loc[nans, column]",0.00149306,0.00018878400000000003,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/justinabel/prud-1,"test_sample.ix[:, (column)]","test_sample.loc[:, (column)]",3.19e-05,2.58e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/justinabel/prud-1,"test_sample.ix[:, (column)]","test_sample.loc[:, (column)]",3.4399999999999996e-05,2.36e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/justinabel/prud-1,"test_sample.ix[nans, column]","test_sample.loc[nans, column]",0.000814762,0.000191657,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/justinabel/prud-1,"train.ix[10001:10010, ('Response')]","train.loc[10001:10010, ('Response')]",8.609999999999999e-05,7.269999999999999e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jvallej/agregaciones-previouse-applications,"data1.loc[:, (['SK_ID_CURR'])]","data1.ix[:, (['SK_ID_CURR'])]",0.002052284,0.001911116,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/khyh00/xkcd-style-test,np.ones(100),np.empty(100); r2.fill(1),2.91e-06,2.1e-06,np.ones,np.empty
https://www.kaggle.com/kmalev/randomforest-alternative-coding-example,"encoded_column.ix[:, :]","encoded_column.loc[:, :]",1.26e-05,1.13e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/kmalev/randomforest-alternative-coding-example,"encoded_column.ix[:, :]","encoded_column.loc[:, :]",1.13e-05,1.06e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/knageswara78/my-tatanic-python-solution,np.nonzero(results['rank_test_%s' % scorer] == 1),np.where(results['rank_test_%s' % scorer] == 1),2.9e-06,2.41e-06,np.nonzero,np.where
https://www.kaggle.com/knageswara78/my-tatanic-python-solution,np.nonzero(results['rank_test_%s' % scorer] == 1),np.where(results['rank_test_%s' % scorer] == 1),1.98e-06,1.75e-06,np.nonzero,np.where
https://www.kaggle.com/kobakhit/xgboost,"train.loc[(train['Demanda_uni_equil'] < 51), :]","train.ix[(train['Demanda_uni_equil'] < 51), :]",0.536033396,0.535071793,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/kumareshd/chicken-momos-plate-1,"e1.loc[e1.isnull()['appcounts'] == True, 'appcounts']","e1.ix[e1.isnull()['appcounts'] == True, 'appcounts']",0.28536228399999997,0.27825463100000003,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,np.transpose(1 - true_output_y).dot(np.log(1 - h)),"np.tensordot(np.transpose(1 - true_output_y),np.log(1 - h),axes=1)",0.000454016,0.00039220300000000004,np.ndarray.dot,np.tensordot
https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,np.transpose(-true_output_y).dot(np.log(h)),"np.tensordot(np.transpose(-true_output_y),np.log(h),axes=1)",0.000335073,0.000279857,np.ndarray.dot,np.tensordot
https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,input_x.dot(theta),"np.tensordot(input_x,theta,axes=1)",8.58e-05,8.28e-05,np.ndarray.dot,np.tensordot
https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,input_x.dot(theta),"np.tensordot(input_x,theta,axes=1)",8.99e-05,7.7e-05,np.ndarray.dot,np.tensordot
https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,"np.ones((train_x.shape[0], 1))","np.empty((train_x.shape[0], 1)); r2.fill(1)",4.04e-06,1.93e-06,np.ones,np.empty
https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,np.where(p >= 0.5),np.nonzero(p >= 0.5),0.00016558099999999999,0.000151324,np.where,np.nonzero
https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,np.where(p != true_output_y),np.nonzero(p != true_output_y),0.00020883299999999998,0.00018569900000000003,np.where,np.nonzero
https://www.kaggle.com/kyleingraham/titanic-survivor-prediction-scikit-learn,"X.loc[:, (X.columns[X.columns.isin(self.columns)])]","X.ix[:, (X.columns[X.columns.isin(self.columns)])]",0.001218383,0.0010515189999999999,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/lancerts/combined,np.where(queries[10158:] == q),np.nonzero(queries[10158:] == q),0.000155114,0.000154576,np.where,np.nonzero
https://www.kaggle.com/laparrala/first,data.ix[891:],data.iloc[891:],0.000333694,0.000325007,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/lesibius/naive-bayes-time-only,"df_train_pred.ix[df_train_pred.Year == 2003, 'Category']","df_train_pred.loc[df_train_pred.Year == 2003, 'Category']",0.00415775,0.00300943,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lesibius/naive-bayes-time-only,"df_test.ix[df_test.Year == y, 'Id']","df_test.loc[df_test.Year == y, 'Id']",0.003837507,0.002521531,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lesibius/naive-bayes-time-only,"df_train_pred.ix[df_train_pred.Year == y1, 'Category']","df_train_pred.loc[df_train_pred.Year == y1, 'Category']",0.004239894,0.002949854,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lesibius/naive-bayes-time-only,"df_test.ix[df_test.Year == y2, 'Id']","df_test.loc[df_test.Year == y2, 'Id']",0.003798839,0.002488677,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lesibius/naive-bayes-time-only,"df_train.loc[:, (['Year', 'Category'])]","df_train.ix[:, (['Year', 'Category'])]",0.010164478000000001,0.010157708,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/lesibius/naive-bayes-time-only,"df_test.loc[:, (['Id', 'Year', 'Hour', 'Month', 'DayOfWeek'])]","df_test.ix[:, (['Id', 'Year', 'Hour', 'Month', 'DayOfWeek'])]",0.02855241,0.027793437999999997,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/lesibius/time-only-sv,"df_train.ix[:, 1:]","df_train.iloc[:, 1:]",0.030900875,0.02844208,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/lesibius/time-only-sv,"df_train_pred.ix[:, ('Category')]","df_train_pred.loc[:, ('Category')]",3.24e-05,2.7699999999999996e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lesibius/time-only-sv,"df_test.loc[:, (['Id', 'Year', 'Hour', 'Month', 'DayOfWeek', 'X', 'Y'])]","df_test.ix[:, (['Id', 'Year', 'Hour', 'Month', 'DayOfWeek', 'X', 'Y'])]",0.064315073,0.06365793900000001,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/lifepreserver/simple-sklearn-randomforestclassifier,df[col].apply(lambda x: hash(str(x))),df[col].map(lambda x: hash(str(x))),0.038149312000000005,0.036641325,pd.Series.apply,pd.Series.map
https://www.kaggle.com/lindenlu/linden-titanic-script,train_df.query('Survived==1'),train_df.loc[train_df.Survived==1],0.001226887,0.0005783569999999999,pd.DataFrame.query,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,train['price_doc'].ix[train['price_doc'] > int(2.5 * np.exp(supbdd))],train['price_doc'].loc[train['price_doc'] > int(2.5 * np.exp(supbdd))],0.000424204,0.000383794,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,train['price_doc'].ix[train['price_doc'] < int(np.exp(13.5))],train['price_doc'].loc[train['price_doc'] < int(np.exp(13.5))],0.000400797,0.000373834,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.000712858,0.00021248599999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",0.000393731,0.000271517,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",0.00030131200000000003,0.00025643599999999997,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.000446295,0.000205897,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.000732958,0.000234955,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.0007310089999999999,0.000225715,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.000921365,0.000257075,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.000421759,0.000230725,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",0.000291876,0.00025452900000000003,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",0.000290387,0.000265759,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.001076986,0.000211242,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.00062573,0.000212575,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.0009155039999999999,0.00041881800000000005,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.0007814580000000001,0.000283698,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.00042301,0.00021087,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.000330354,0.00019450400000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",0.000642529,0.000614517,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",0.0007670989999999999,0.000268145,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",0.000746822,0.000234598,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.000479017,0.000204679,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.000346474,0.000201767,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.00030126,0.000259113,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.000288877,0.000254037,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]",0.000705413,0.000655933,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.000419431,0.00022857099999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.0007356060000000001,0.000244353,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.0007797710000000001,0.00021373,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.000759973,0.00025912,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.000814104,0.000231368,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.000287827,0.00024932599999999996,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",0.000354473,0.000200263,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/luistangui/titanicpy,s.query('(Pclass == 1 or Pclass == 2) and Sex == 'female),"s.loc[s.Pclass.isin([1, 2]) & (s.Sex =='female')]",0.002178744,0.00107644,pd.DataFrame.query,pd.DataFrame.loc
https://www.kaggle.com/luistangui/titanicpy,s.query('Pclass == 3 and Sex == 'female' and (Embarked == 'C' or Embarked == 'Q')'),"s.loc[(s.Pclass == 3) & (s.Sex == 'female') & (s.Embarked.isin(['C','Q']))]",0.002811475,0.0013395170000000001,pd.DataFrame.query,pd.DataFrame.loc
https://www.kaggle.com/luistangui/titanicpy, s.query('Pclass == 3 and Sex == 'male' and Embarked == 'C' and Family > 0'), s.loc[(s.Pclass == 3 )&( s.Sex == 'male') &(s.Embarked == 'C') &( s.Family > 0)],0.0027858440000000004,0.001767207,pd.DataFrame.query,pd.DataFrame.loc
https://www.kaggle.com/madraziw/mad-0721-1245,"np.c_[xx.ravel(), yy.ravel()]"," np.hstack([xx.ravel().reshape(len(xx.ravel()),1), yy.ravel().reshape(len(yy.ravel()),1)])",9.73e-05,8.05e-05,np.c_,np.hstack
https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.0007053669999999999,0.000235994,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",0.000328458,0.000271335,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.000576231,0.000208501,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.000740498,0.000256747,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.0007434360000000001,0.000239447,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.0005944769999999999,0.000212169,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.00038815199999999995,0.000197419,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",0.00028953299999999997,0.000273332,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.0009648360000000001,0.00021229700000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.00082231,0.00020538299999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.001114235,0.000444279,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.00080489,0.000286089,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.00041646300000000005,0.00019675700000000001,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.000328248,0.000208088,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",0.000647429,0.000647005,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",0.0006068219999999999,0.000601361,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",0.000740412,0.000270615,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",0.0007214560000000001,0.000243721,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.000552848,0.00022946900000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.00038936099999999996,0.000211785,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.0007236230000000001,0.000235988,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.000294698,0.000261403,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",0.000445223,0.00026331,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/marbel/keras-dummy-vars,np.array(train_values),np.concatenate([train_values]),4.25e-06,3.68e-06,np.array,np.concatenate
https://www.kaggle.com/melisbiyikli/titanic-data-sets,all_datas.ix[891:],all_datas.iloc[891:],0.00125695,0.001251331,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/melisbiyikli/titanic-data-sets,all_datas['FamilySize'].map(lambda s: 1 if 5 <= s else 0),"np.where( 5 <= all_datas['FamilySize'] , 1 ,0)",0.001415258,0.000528985,pd.Series.map,np.where
https://www.kaggle.com/mhooreman/test-new-script,"tmp.loc[:, ([c for c in range(nBreedsMax)])]","tmp.ix[:, ([c for c in range(nBreedsMax)])]",0.001109375,0.000927218,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/michaelpawlus/testing-run-errors,all_data.Product_Info_2.str[0],all_data.Product_Info_2.map(lambda x: x[0]),0.027441156,0.008934444,pd.Series.str,pd.Series.map
https://www.kaggle.com/michaelpawlus/testing-run-errors,all_data.Product_Info_2.str[1],all_data.Product_Info_2.map(lambda x: x[1]),0.027965617,0.009243801,pd.Series.str,pd.Series.map
https://www.kaggle.com/mingruimingrui/top-3-hakeem-s-script-without-outlier-y-250,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.append(np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed, axis=1)",0.019704911000000002,0.019326844,np.hstack,np.append
https://www.kaggle.com/mingruimingrui/top-3-hakeem-s-script-without-outlier-y-250,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.concatenate((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed), axis=1)",0.018807125,0.018612038,np.hstack,np.concatenate
https://www.kaggle.com/mjyang/testw,"np.hstack([X, bias])","np.append(X, bias, axis=1)",1.39e-05,1.23e-05,np.hstack,np.append
https://www.kaggle.com/mjyang/testw,"np.hstack([X_test, bias1])","np.append(X_test, bias1, axis=1)",9.15e-06,5.67e-06,np.hstack,np.append
https://www.kaggle.com/mjyang/testw,"np.hstack([Submit, Yhat])","np.append(Submit, Yhat, axis=1)",8.44e-06,5.98e-06,np.hstack,np.append
https://www.kaggle.com/mjyang/testw,"np.hstack([X, bias])","np.concatenate([X, bias], axis=1)",1.4499999999999998e-05,1.17e-05,np.hstack,np.concatenate
https://www.kaggle.com/mjyang/testw,"np.hstack([X_test, bias1])","np.concatenate([X_test, bias1], axis=1)",8.57e-06,4.24e-06,np.hstack,np.concatenate
https://www.kaggle.com/mjyang/testw,"np.hstack([Submit, Yhat])","np.concatenate([Submit, Yhat], axis=1)",4.53e-06,2.29e-06,np.hstack,np.concatenate
https://www.kaggle.com/mjyang/testw,"np.ones((100, 1))","np.empty((100, 1)); r2.fill(1)",1.43e-06,5.64e-07,np.ones,np.empty
https://www.kaggle.com/mjyang/testw,"np.vstack([X_train, X_class1])","np.column_stack((X_train.T, X_class1.T)).T",1.47e-05,7.33e-06,np.vstack,np.column_stack
https://www.kaggle.com/mjyang/testw,"np.vstack([Y_train, Y_class1])","np.column_stack((Y_train.T, Y_class1.T)).T",4.51e-06,3.77e-06,np.vstack,np.column_stack
https://www.kaggle.com/mjyang/testw,"np.vstack([X_train, X_class1])","np.concatenate([X_train, X_class1], axis=0)",2.2800000000000002e-05,1.77e-05,np.vstack,np.concatenate
https://www.kaggle.com/mjyang/testw,"np.vstack([Y_train, Y_class1])","np.concatenate([Y_train, Y_class1], axis=0)",4.95e-06,2.17e-06,np.vstack,np.concatenate
https://www.kaggle.com/mmueller/categorical-embedding-with-xgb,np.array(list(zip(*sorted(val.items())))),np.concatenate([list(zip(*sorted(val.items())))]),0.0018892029999999999,0.001489261,np.array,np.concatenate
https://www.kaggle.com/moichiaaron/numpynist-py,theta2.dot(a2),"np.tensordot(theta2,a2,axes=1)",0.003082176,0.0029025640000000003,np.ndarray.dot,np.tensordot
https://www.kaggle.com/moichiaaron/numpynist-py,theta1.dot(a1.T),"np.tensordot(theta1,a1.T,axes=1)",0.05687182,0.051456626,np.ndarray.dot,np.tensordot
https://www.kaggle.com/moichiaaron/numpynist-py,s2.dot(a1),"np.tensordot(s2,a1,axes=1)",0.037389858,0.032312744,np.ndarray.dot,np.tensordot
https://www.kaggle.com/moichiaaron/numpynist-py,"np.ones((np.size(y), nlabels))","np.empty((np.size(y), nlabels)); r2.fill(1)",0.001288275,0.000128679,np.ones,np.empty
https://www.kaggle.com/mosa94/linear-regression-implementations,np.ones(np.shape(trainX)[0]),np.empty(np.shape(trainX)[0]); r2.fill(1),3e-06,1.93e-06,np.ones,np.empty
https://www.kaggle.com/mshankarrao/svmpca-0-8-rbf,"train.ix[:, (0)]","train.iloc[:, (0)]",5.27e-05,3.81e-05,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/muhammadzaman/knn-argpartition-and-value-of-k,"data.ix[:, 1:-1]","data.iloc[:, 1:-1]",0.028774339,0.02814936,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/muhammadzaman/knn-argpartition-and-value-of-k,"data.ix[:, (-1)]","data.iloc[:, (-1)]",4.96e-05,4.39e-05,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/muthu4all/recognize-the-number,np.array(train),np.concatenate([train]),0.019582019,0.018133425,np.array,np.concatenate
https://www.kaggle.com/nabilnobel/if-product-exists-in-last-4-order,"orders_all.loc[orders_all['order_number'] > 3, 'n_3']","orders_all.ix[orders_all['order_number'] > 3, 'n_3']",0.059718074,0.052391277,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/nagadomi/nearest-neighbor-search,"train_x.ix[:, (0)]","train_x.iloc[:, (0)]",5.59e-05,4.83e-05,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/naropian/narnar-test,"df_train.ix[:, (df_train.columns != 'SalePrice')]","df_train.loc[:, (df_train.columns != 'SalePrice')]",0.000893322,0.0006799989999999999,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/nbose2/tests,"df_train.ix[:, (df_train.columns != 'SalePrice')]","df_train.loc[:, (df_train.columns != 'SalePrice')]",0.000785588,0.0006914789999999999,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/nemethpeter42/valami,"df_Train.loc[:, (['Cliente_ID', 'Demanda_uni_equil'])]","df_Train.ix[:, (['Cliente_ID', 'Demanda_uni_equil'])]",0.495378827,0.48513481399999997,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/netguyhyun/netguytest,np.nonzero([(i == y) for i in y_train]),np.where([(i == y) for i in y_train]),0.014035362,0.013996586,np.nonzero,np.where
https://www.kaggle.com/newhardwarefound/artificial-neural-network,"np.dot(w, activation)","np.einsum('ij,jm->im',w, activation)",7.01e-05,2.47e-05,np.dot,np.einsum
https://www.kaggle.com/nightshade7/allstatetest,"np.hstack((catData.T, df[cols[117:nFeat - 1]].as_matrix()))","np.append(catData.T, df[cols[117:nFeat - 1]].as_matrix(), axis=1)",0.163484032,0.162375864,np.hstack,np.append
https://www.kaggle.com/niladri18/usinng-logistic-regression,"df.ix[:, ('srch_adults_cnt')]","df.loc[:, ('srch_adults_cnt')]",3.2200000000000003e-05,2.75e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/niladri18/usinng-logistic-regression,"df.ix[:, ('srch_destination_id')]","df.loc[:, ('srch_destination_id')]",2.8300000000000003e-05,2.0300000000000002e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/niladri18/usinng-logistic-regression,"df.ix[:, ('srch_ci')]","df.loc[:, ('srch_ci')]",5.18e-05,3.229999999999999e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/niladri18/usinng-logistic-regression,"df.ix[:, ('srch_co')]","df.loc[:, ('srch_co')]",0.000126409,5.8899999999999995e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/nilzone/lgbm-with-mean-encodings,"alldata.loc[(alldata.is_test), :]","alldata.ix[(alldata.is_test), :]",0.071401362,0.070460367,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/nilzone/lightgbm,"alldata.loc[:, (col)]","alldata.ix[:, (col)]",6.86e-05,3.24e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/nithin98/pubg-v5,np.sum(eig_val),(eig_val).sum(),7.23e-06,5.27e-06,np.sum,np.ndarray.sum
https://www.kaggle.com/nkdxczh/test-py,np.where(clf.feature_importances_ > 0),np.nonzero(clf.feature_importances_ > 0),0.006864659,0.00657511,np.where,np.nonzero
https://www.kaggle.com/nolanhoney/nolan-honey-comp-3122-assignment-3,"training_data.loc[:, 'MSSubClass':'SaleCondition']","training_data.ix[:, 'MSSubClass':'SaleCondition']",0.000706377,0.000702464,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/numberswithkartik/so-you-think-xgboost-will-work,"np.c_[actual, pred, np.arange(len(actual))]","np.hstack([actual.reshape(len(actual),1),pred.reshape(len(pred),1),np.arange(len(actual)).reshape(len(actual),1)])",0.013083517,0.012599945,np.c_,np.hstack
https://www.kaggle.com/ogrellier/multi-core-aggregations,np.sum(b_s),"np.einsum('i->',b_s)",0.00013411,4.46e-05,np.sum,np.einsum
https://www.kaggle.com/ogrellier/multi-core-aggregations,np.sum(a_s),"np.einsum('i->',a_s)",0.000198018,7.48e-05,np.sum,np.einsum
https://www.kaggle.com/ogrellier/multi-core-aggregations,np.sum(a_s),"np.einsum('i->',a_s)",0.00020894599999999997,8.56e-05,np.sum,np.einsum
https://www.kaggle.com/ogrellier/multi-core-aggregations,np.sum(b_s),(b_s).sum(),7.390000000000001e-05,6.3e-05,np.sum,np.ndarray.sum
https://www.kaggle.com/ogrellier/multi-core-aggregations,np.sum(b_s),(b_s).sum(),7.509999999999998e-05,6.929999999999999e-05,np.sum,np.ndarray.sum
https://www.kaggle.com/ogrellier/multi-core-aggregations,np.sum(b_s),(b_s).sum(),9.7e-05,6.7e-05,np.sum,np.ndarray.sum
https://www.kaggle.com/ogrellier/multi-core-aggregations,np.sum(b_s),(b_s).sum(),0.00012926,7.240000000000001e-05,np.sum,np.ndarray.sum
https://www.kaggle.com/ogrellier/multi-core-aggregations,"np.zeros((len(df), np.unique(y).shape[0]))","np.empty((len(df), np.unique(y).shape[0])); r2[:]= 0",0.000212267,0.00020873400000000002,np.zeros,np.empty
https://www.kaggle.com/ogrellier/plasticc-in-a-kernel-meta-and-data,"np.sum(y_ohe.values * y_p_log, axis=0)","np.einsum('ij->j',y_ohe.values * y_p_log)",0.000698156,0.000586006,np.sum,np.einsum
https://www.kaggle.com/olttwa/titanic-logistic-regression-v1,"np.ones((m, n + 1))","np.empty((m, n + 1)); r2.fill(1)",3.29e-06,2.3e-06,np.ones,np.empty
https://www.kaggle.com/omijn1/titanic-survivor-prediction,"X_test.loc[:, (['Fare'])]","X_test.ix[:, (['Fare'])]",0.000420723,0.000416364,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/papadopc/neural-nets-and-address-featurization,"address_features.ix[:, :]","address_features.loc[:, :]",1.29e-05,1.11e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/papadopc/neural-nets-and-address-featurization,"dummy_ranks_DAY.ix[:, :]","dummy_ranks_DAY.loc[:, :]",1.2e-05,1.0199999999999999e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/papadopc/neural-nets-and-address-featurization,"dummy_ranks_PD.ix[:, :]","dummy_ranks_PD.loc[:, :]",1.57e-05,1.42e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/pappukrjha/log-reg-auc-98795,"predTest.ix[:, ('id')]","predTest.loc[:, ('id')]",4.24e-05,2.2e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/pappukrjha/log-reg-auc-98795,"predValid.ix[:, (col)]","predValid.loc[:, (col)]",3.11e-05,2.25e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/pappukrjha/log-reg-auc-98795,"predTest.ix[:, (col)]","predTest.loc[:, (col)]",3.570000000000001e-05,2.34e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/pappukrjha/rf-tfidf-word-char-lb-945,"predTest.ix[:, ('id')]","predTest.loc[:, ('id')]",3.12e-05,2.24e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/pappukrjha/rf-tfidf-word-char-lb-945,"predValid.ix[:, (col)]","predValid.loc[:, (col)]",9.14e-05,4.31e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/pappukrjha/rf-tfidf-word-char-lb-945,"predTest.ix[:, (col)]","predTest.loc[:, (col)]",4.33e-05,3.07e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/paullo0106/knn-accelerated-v3,np.vstack(preds_list),"np.concatenate(preds_list, axis=0)",0.168409625,0.158904935,np.vstack,np.concatenate
https://www.kaggle.com/piplimoon/leaderboard-0-8134,"df_combo.loc[:, (['Cabin'])]","df_combo.ix[:, (['Cabin'])]",0.00041651599999999997,0.00039920900000000003,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/piplimoon/leaderboard-0-8134,"df_combo.loc[mask_Age, ['Title', 'Sex', 'Pclass']]","df_combo.ix[mask_Age, ['Title', 'Sex', 'Pclass']]",0.000853335,0.000837781,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/plantsgo/solution-public-0-471-private-0-505,np.sum(pr * weight),"np.einsum('i->',pr * weight)",1.3500000000000001e-05,8.48e-06,np.sum,np.einsum
https://www.kaggle.com/poslegm/pca-svm-97-8-accuracy,"train.ix[:, 'label':'label']","train.loc[:, 'label':'label']",0.00021988700000000002,0.000185671,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/prashantkikani/ensembling-has-always-been-the-answer,"df.loc[(testdex), :]","df.ix[(testdex), :]",1.306774906,1.234930103,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/prashantkikani/ensembling-has-always-been-the-answer,"df.loc[traindex, vocab]","df.ix[traindex, vocab]",1.480421514,1.47413362,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/prashantkikani/ensembling-has-always-been-the-answer,train.ix[trn_idx],train.loc[trn_idx],0.009487853000000001,0.009466994,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/prashantkikani/ensembling-has-always-been-the-answer,train.ix[val_idx],train.loc[val_idx],0.003549865,0.0035361109999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/prashantkikani/home-rf-et-xgb-cb-stack-oof1-lb-0-789,"credit_card_df.loc[most_recent_index, cat_feats]","credit_card_df.ix[most_recent_index, cat_feats]",0.067616686,0.06631901,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/prashantkikani/home-rf-et-xgb-cb-stack-oof1-lb-0-789,"bureau_balance_df.loc[(most_recent_index), :]","bureau_balance_df.ix[(most_recent_index), :]",0.094252756,0.082766773,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/prashantkikani/home-rf-et-xgb-cb-stack-oof1-lb-0-789,"pos_cash_df.loc[most_recent_index, cat_feats]","pos_cash_df.ix[most_recent_index, cat_feats]",0.22917345,0.21627220000000003,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/prototype96/mytest6,"data_file.ix[:, 1:]","data_file.iloc[:, 1:]",0.000100285,8.669999999999999e-05,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/rakhlin/abcde,"df.loc[:, (['DOCAone', 'DOCAtwo', 'DOCAthree'])]","df.ix[:, (['DOCAone', 'DOCAtwo', 'DOCAthree'])]",0.00137039,0.001009652,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/rakhlin/abcde,"df.loc[:, (['p0_IsoBDT', 'p1_IsoBDT', 'p2_IsoBDT'])]","df.ix[:, (['p0_IsoBDT', 'p1_IsoBDT', 'p2_IsoBDT'])]",0.001271702,0.001039888,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/rakhlin/ultra-fast-grid-knn-model,np.where(d > g.th),np.nonzero(d > g.th),2.26e-05,2.14e-05,np.where,np.nonzero
https://www.kaggle.com/rakhlin/ultra-fast-grid-knn-model,np.where(d > g.th),np.nonzero(d > g.th),2.8100000000000002e-05,2.7699999999999996e-05,np.where,np.nonzero
https://www.kaggle.com/rakhlin/ultra-fast-grid-knn-model,np.where(d > g.th),np.nonzero(d > g.th),2.49e-05,2.07e-05,np.where,np.nonzero
https://www.kaggle.com/rakhlin/ultra-fast-grid-knn-model,np.where(d > g.th),np.nonzero(d > g.th),2.0300000000000002e-05,1.9399999999999997e-05,np.where,np.nonzero
https://www.kaggle.com/rchitic17/titanic-r-to-python,"full.loc[[61, 829], 'Embarked']","full.ix[[61, 829], 'Embarked']",0.00044202099999999996,0.00041759400000000003,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/reyhaneh/titanic-s,np.where(bb['Embarked'] != train_df['Embarked']),np.nonzero(bb['Embarked'] != train_df['Embarked']),0.00025916400000000004,0.00017565200000000002,np.where,np.nonzero
https://www.kaggle.com/rom1m201363/road-grid-and-backpropagated-dijkstra-with-pytorch,np.where(closest_pickup != closest_dropoff),np.nonzero(closest_pickup != closest_dropoff),0.005716349,0.005263991,np.where,np.nonzero
https://www.kaggle.com/rtmink/cs-145-project-2c,"np.hstack((x_num_data, vec_x_cat_data))","np.append(x_num_data, vec_x_cat_data, axis=1)",0.03535648,0.034282163,np.hstack,np.append
https://www.kaggle.com/rtmink/cs-145-project-2c,"np.hstack((x_num_data, vec_x_cat_data))","np.concatenate((x_num_data, vec_x_cat_data), axis=1)",0.035909249,0.035547817,np.hstack,np.concatenate
https://www.kaggle.com/rtmink/test-101,"np.hstack((x_num_test, vec_x_cat_test))","np.concatenate((x_num_test, vec_x_cat_test), axis=1)",0.036365631,0.035367243,np.hstack,np.concatenate
https://www.kaggle.com/rtmink/test-1011,"np.hstack((x_num_data, vec_x_cat_data))","np.append(x_num_data, vec_x_cat_data, axis=1)",0.041622546,0.040496524,np.hstack,np.append
https://www.kaggle.com/rtmink/test-1011,"np.hstack((x_num_test, vec_x_cat_test))","np.concatenate((x_num_test, vec_x_cat_test), axis=1)",0.033261401,0.033120462999999996,np.hstack,np.concatenate
https://www.kaggle.com/safavieh/median-estimation-by-fibonacci-et-al-lb-44-9,np.where(Visits < 1),np.nonzero(Visits < 1),0.00010282200000000001,0.00010182,np.where,np.nonzero
https://www.kaggle.com/saihttam/understanding-rmspe,"np.ones(shape=(nsamples, 1))","np.empty(shape=(nsamples, 1)); r2.fill(1)",1.6e-06,7.440000000000001e-07,np.ones,np.empty
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Aggressive', 'Aggressive']","train.loc[train.OutcomeSubtype == 'Aggressive', 'Aggressive']",0.002560046,0.001296753,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'At Vet', 'At Vet']","train.loc[train.OutcomeSubtype == 'At Vet', 'At Vet']",0.002612875,0.001421701,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Barn', 'Barn']","train.loc[train.OutcomeSubtype == 'Barn', 'Barn']",0.002704298,0.0014437229999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Behavior', 'Behavior']","train.loc[train.OutcomeSubtype == 'Behavior', 'Behavior']",0.002441757,0.00126597,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Court/Investigation', 'Court/Investigation']","train.loc[train.OutcomeSubtype == 'Court/Investigation', 'Court/Investigation']",0.0025799029999999997,0.001267703,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Enroute', 'Enroute']","train.loc[train.OutcomeSubtype == 'Enroute', 'Enroute']",0.002648868,0.001373413,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Foster', 'Foster']","train.loc[train.OutcomeSubtype == 'Foster', 'Foster']",0.002572741,0.001412638,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'In Foster', 'In Foster']","train.loc[train.OutcomeSubtype == 'In Foster', 'In Foster']",0.002560266,0.0012972139999999999,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'In Kennel', 'In Kennel']","train.loc[train.OutcomeSubtype == 'In Kennel', 'In Kennel']",0.0025609129999999997,0.001367656,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'In Surgery', 'In Surgery']","train.loc[train.OutcomeSubtype == 'In Surgery', 'In Surgery']",0.002458239,0.001392762,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Medical', 'Medical']","train.loc[train.OutcomeSubtype == 'Medical', 'Medical']",0.002451015,0.001333352,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Offsite', 'Offsite']","train.loc[train.OutcomeSubtype == 'Offsite', 'Offsite']",0.0028263109999999998,0.001364283,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Partner', 'Partner']","train.loc[train.OutcomeSubtype == 'Partner', 'Partner']",0.0027290340000000004,0.0014796260000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Rabies Risk', 'Rabies Risk']","train.loc[train.OutcomeSubtype == 'Rabies Risk', 'Rabies Risk']",0.00305465,0.001603239,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'SCRP', 'SCRP']","train.loc[train.OutcomeSubtype == 'SCRP', 'SCRP']",0.002721332,0.001390635,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Suffering', 'Suffering']","train.loc[train.OutcomeSubtype == 'Suffering', 'Suffering']",0.002528084,0.001388775,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeType == 'Return_to_owner', 'Target']","train.loc[train.OutcomeType == 'Return_to_owner', 'Target']",0.0028920609999999996,0.001631646,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeType == 'Euthanasia', 'Target']","train.loc[train.OutcomeType == 'Euthanasia', 'Target']",0.004233937,0.001539974,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeType == 'Adoption', 'Target']","train.loc[train.OutcomeType == 'Adoption', 'Target']",0.003260575,0.002010873,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeType == 'Transfer', 'Target']","train.loc[train.OutcomeType == 'Transfer', 'Target']",0.0030096940000000003,0.001796492,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeType == 'Died', 'Target']","train.loc[train.OutcomeType == 'Died', 'Target']",0.002884583,0.001977541,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.AnimalType == 'Dog', 'AnimalType_cat']","train.loc[train.AnimalType == 'Dog', 'AnimalType_cat']",0.0031199929999999997,0.001853053,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.AnimalType == 'Cat', 'AnimalType_cat']","train.loc[train.AnimalType == 'Cat', 'AnimalType_cat']",0.0029836040000000004,0.001849935,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.AnimalType == 'Dog', 'AnimalType_cat']","test.loc[test.AnimalType == 'Dog', 'AnimalType_cat']",0.0021978279999999998,0.0009585860000000001,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.AnimalType == 'Cat', 'AnimalType_cat']","test.loc[test.AnimalType == 'Cat', 'AnimalType_cat']",0.0020763970000000002,0.000934033,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Intact Female', 'SexuponOutcome_cat']","train.loc[train.SexuponOutcome == 'Intact Female', 'SexuponOutcome_cat']",0.002924203,0.001699441,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Spayed Female', 'SexuponOutcome_cat']","train.loc[train.SexuponOutcome == 'Spayed Female', 'SexuponOutcome_cat']",0.0030084,0.0017601960000000001,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Neutered Male', 'SexuponOutcome_cat']","train.loc[train.SexuponOutcome == 'Neutered Male', 'SexuponOutcome_cat']",0.003114402,0.001882895,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Intact Male', 'SexuponOutcome_cat']","train.loc[train.SexuponOutcome == 'Intact Male', 'SexuponOutcome_cat']",0.002901833,0.001611101,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Unknown', 'SexuponOutcome_cat']","train.loc[train.SexuponOutcome == 'Unknown', 'SexuponOutcome_cat']",0.002922322,0.0017165939999999999,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Intact Female', 'SexuponOutcome_cat']","test.loc[test.SexuponOutcome == 'Intact Female', 'SexuponOutcome_cat']",0.002076874,0.000928052,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Spayed Female', 'SexuponOutcome_cat']","test.loc[test.SexuponOutcome == 'Spayed Female', 'SexuponOutcome_cat']",0.002190946,0.001001638,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Neutered Male', 'SexuponOutcome_cat']","test.loc[test.SexuponOutcome == 'Neutered Male', 'SexuponOutcome_cat']",0.002170188,0.000988087,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Intact Male', 'SexuponOutcome_cat']","test.loc[test.SexuponOutcome == 'Intact Male', 'SexuponOutcome_cat']",0.002029094,0.00085483,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Unknown', 'SexuponOutcome_cat']","test.loc[test.SexuponOutcome == 'Unknown', 'SexuponOutcome_cat']",0.002050246,0.000840338,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Intact Female', 'Type_sex']","train.loc[train.SexuponOutcome == 'Intact Female', 'Type_sex']",0.002863321,0.001660617,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Spayed Female', 'Type_sex']","train.loc[train.SexuponOutcome == 'Spayed Female', 'Type_sex']",0.003006817,0.0017737520000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Neutered Male', 'Type_sex']","train.loc[train.SexuponOutcome == 'Neutered Male', 'Type_sex']",0.003115909,0.001768981,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Intact Male', 'Type_sex']","train.loc[train.SexuponOutcome == 'Intact Male', 'Type_sex']",0.00288206,0.0015302129999999999,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Unknown', 'Type_sex']","train.loc[train.SexuponOutcome == 'Unknown', 'Type_sex']",0.0027483440000000002,0.001493629,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Intact Female', 'Type_sex']","test.loc[test.SexuponOutcome == 'Intact Female', 'Type_sex']",0.0021654210000000003,0.000926867,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Spayed Female', 'Type_sex']","test.loc[test.SexuponOutcome == 'Spayed Female', 'Type_sex']",0.002135008,0.000995006,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Neutered Male', 'Type_sex']","test.loc[test.SexuponOutcome == 'Neutered Male', 'Type_sex']",0.002138636,0.000956908,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Intact Male', 'Type_sex']","test.loc[test.SexuponOutcome == 'Intact Male', 'Type_sex']",0.002011165,0.000843812,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Unknown', 'Type_sex']","test.loc[test.SexuponOutcome == 'Unknown', 'Type_sex']",0.002032359,0.00087336,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Intact Female', 'sprayed']","train.loc[train.SexuponOutcome == 'Intact Female', 'sprayed']",0.002861762,0.0016687229999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Spayed Female', 'sprayed']","train.loc[train.SexuponOutcome == 'Spayed Female', 'sprayed']",0.002975536,0.001789199,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Neutered Male', 'sprayed']","train.loc[train.SexuponOutcome == 'Neutered Male', 'sprayed']",0.0029771990000000003,0.001764723,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Intact Male', 'sprayed']","train.loc[train.SexuponOutcome == 'Intact Male', 'sprayed']",0.002790313,0.001648891,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Unknown', 'sprayed']","train.loc[train.SexuponOutcome == 'Unknown', 'sprayed']",0.002665938,0.0014822020000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Intact Female', 'sprayed']","test.loc[test.SexuponOutcome == 'Intact Female', 'sprayed']",0.002119956,0.000916715,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Spayed Female', 'sprayed']","test.loc[test.SexuponOutcome == 'Spayed Female', 'sprayed']",0.002121174,0.000955502,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Neutered Male', 'sprayed']","test.loc[test.SexuponOutcome == 'Neutered Male', 'sprayed']",0.0021431370000000003,0.000967082,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Intact Male', 'sprayed']","test.loc[test.SexuponOutcome == 'Intact Male', 'sprayed']",0.002038345,0.0008473689999999999,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Unknown', 'sprayed']","test.loc[test.SexuponOutcome == 'Unknown', 'sprayed']",0.001992479,0.000828568,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/saurabhp75/titanicexcercise1,combined['FamilySize'].map(lambda s: 1 if 5 <= s else 0),"np.where( 5 <= combined['FamilySize'] , 1 ,0)",0.001396925,0.00047472,pd.Series.map,np.where
https://www.kaggle.com/scirpus/benouilli-naive-bayes,df[columnName].map(lambda y: 1 if y == x else 0),"np.where( df[columnName] == x , 1 ,0)",0.093663371,0.014673008999999999,pd.Series.map,np.where
https://www.kaggle.com/scirpus/genetic-programming-ii-lb-0-662,train.Product_Info_2.str[1:],train.Product_Info_2.map(lambda x: x[1:]),0.0075594040000000005,0.007550179000000001,pd.Series.str,pd.Series.map
https://www.kaggle.com/scirpus/genetic-programming-ii-lb-0-662,train.Product_Info_2.str[0],train.Product_Info_2.map(lambda x: x[0]),0.023411783999999998,0.006335217,pd.Series.str,pd.Series.map
https://www.kaggle.com/scirpus/genetic-programming-ii-lb-0-662,test.Product_Info_2.str[0],test.Product_Info_2.map(lambda x: x[0]),0.007502188000000001,0.002216708,pd.Series.str,pd.Series.map
https://www.kaggle.com/scirpus/quick-genetic-programme,"test.loc[:, (col)]","test.ix[:, (col)]",4.429999999999999e-05,4.1200000000000005e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/sdanaipat/prime,"np.ones(n + 1, dtype=np.bool)","np.empty(n + 1, dtype=np.bool); r2.fill(1)",0.008913552,0.001643398,np.ones,np.empty
https://www.kaggle.com/seandot7/mnist-test,"train.ix[:, 1:]","train.iloc[:, 1:]",0.000104194,9.470000000000001e-05,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/shankarpendse/titanicsurvivortraining,np.ones(X.shape[0]),np.empty(X.shape[0]); r2.fill(1),2.3e-06,1.3e-06,np.ones,np.empty
https://www.kaggle.com/shitalsawant/liner-svm-two-variables-py,"train_df.loc[:, (selected_features)]","train_df.ix[:, (selected_features)]",0.0005151,0.000504591,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/shitalsawant/liner-svm-two-variables-py,"test_df.loc[:, (selected_features)]","test_df.ix[:, (selected_features)]",0.0004969859999999999,0.00048527900000000003,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/shyamspr/backward-elimination,"np.ones((891, 1))","np.empty((891, 1)); r2.fill(1)",1.81e-06,8.709999999999999e-07,np.ones,np.empty
https://www.kaggle.com/silpara/h2o-python-starter,"train_test.loc[(train_test.flag == 1), :]","train_test.ix[(train_test.flag == 1), :]",0.043584955999999994,0.043433803,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/soroushj/tap30-challenge-random-forest-regressor,"np.array((hse, row, col, hod), dtype=np.int32)","np.fromiter((hse, row, col, hod), dtype=np.int32)",1.77e-06,7.140000000000001e-07,np.array,np.fromiter
https://www.kaggle.com/soutou/new-model-lb-44-6,np.where(Visits < 1),np.nonzero(Visits < 1),0.000102706,0.00010087799999999999,np.where,np.nonzero
https://www.kaggle.com/stacyayaka/cs145,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.append(np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed, axis=1)",0.032850872999999996,0.029659442,np.hstack,np.append
https://www.kaggle.com/stacyayaka/cs145,"np.hstack((x_num_data, vec_x_cat_data))","np.append(x_num_data, vec_x_cat_data, axis=1)",0.059696900000000004,0.058179229000000006,np.hstack,np.append
https://www.kaggle.com/stacyayaka/cs145,"np.hstack((x_num_test, vec_x_cat_test))","np.append(x_num_test, vec_x_cat_test, axis=1)",0.05385067,0.049690047,np.hstack,np.append
https://www.kaggle.com/sudalairajkumar/rf-multilabel-framework-lb-0-022475,"np.hstack([train_X, temp_train_X])","np.append(train_X, temp_train_X, axis=1)",0.023090847,0.022801141,np.hstack,np.append
https://www.kaggle.com/sudalairajkumar/rf-multilabel-framework-lb-0-022475,"np.hstack([train_X, temp_train_X])","np.concatenate([train_X, temp_train_X], axis=1)",0.016560496,0.016526937,np.hstack,np.concatenate
https://www.kaggle.com/sudalairajkumar/rf-multilabel-framework-lb-0-022475,"np.hstack([test_X, temp_test_X])","np.concatenate([test_X, temp_test_X], axis=1)",0.015351231000000002,0.015344874,np.hstack,np.concatenate
https://www.kaggle.com/sundancekid/sctryout,np.array(train),np.concatenate([train]),0.027547207999999997,0.024703307,np.array,np.concatenate
https://www.kaggle.com/sundancekid/sctryout,np.array(labels),np.concatenate([labels]),1.25e-05,1.15e-05,np.array,np.concatenate
https://www.kaggle.com/swkim94/test77,"np.c_[xx.ravel(), yy.ravel(), zz.ravel()]","np.hstack([xx.ravel().reshape(len(xx.ravel()),1), yy.ravel().reshape(len(xx.ravel()),1), zz.ravel().reshape(len(xx.ravel()),1)])",8.56e-05,7.020000000000001e-05,np.c_,np.hstack
https://www.kaggle.com/tedspikes/titanic-test,"train.loc[:, (['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare'])]","train.ix[:, (['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare'])]",0.002050279,0.0020322870000000002,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/tflana/simple-keras-feed-fwd-nn,np.array(full_df[coln]),np.concatenate([full_df[coln]]),0.000939587,0.0009146019999999999,np.array,np.concatenate
https://www.kaggle.com/thamagame/titanic-with-learning-curves,"train.ix[:, 'Pclass':]","train.loc[:, 'Pclass':]",0.000290469,0.00028551,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/thamagame/titanic-with-learning-curves,"test.ix[:, 'Pclass':]","test.loc[:, 'Pclass':]",0.000317795,0.000305474,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/thamagame/titanic-with-learning-curves,"train_temp.ix[:, 'Pclass':]","train_temp.loc[:, 'Pclass':]",0.00026389,0.000248939,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/tilii7/you-want-outliers-we-got-them-outliers,"np.sum((points - median) ** 2, axis=-1)",((points - median) ** 2).sum( axis=-1),2.7399999999999995e-05,2.0600000000000003e-05,np.sum,np.ndarray.sum
https://www.kaggle.com/tilii7/you-want-outliers-we-got-them-outliers,"np.vstack((target, target_pred))","np.column_stack((target.T, target_pred.T)).T",1.99e-05,1.93e-05,np.vstack,np.column_stack
https://www.kaggle.com/toadtoadtoad/newwwww,data.ix[891:],data.iloc[891:],0.000311237,0.000290416,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/tobikaggle/stacked-then-averaged-models-0-5697,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.append(np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed, axis=1)",0.02066736,0.01786949,np.hstack,np.append
https://www.kaggle.com/tommyttf/try-to-learn,"train.loc[:, 'pixel0':]","train.ix[:, 'pixel0':]",0.543398642,0.517577685,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/tommyttf/try-to-learn,"test.loc[:, 'pixel0':]","test.ix[:, 'pixel0':]",0.34617898700000005,0.340451367,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/tranquangan/my-first-experiment-with-kaggle,family['FamilySize'].map(lambda s: 1 if 5 <= s else 0),"np.where( 5 <= family['FamilySize'] , 1 ,0)",0.0018099939999999999,0.000520305,pd.Series.map,np.where
https://www.kaggle.com/tunguz/pca-svm1,"train.ix[:, (0)]","train.iloc[:, (0)]",4.7499999999999996e-05,4.11e-05,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/tunguz/script-competition-facebook-v-2-2,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T",7.780000000000001e-05,5.520000000000001e-05,np.column_stack,np.vstack
https://www.kaggle.com/tuomastik/pca-visualization,np.where(y_train == class_ix),np.nonzero(y_train == class_ix),0.00027963799999999997,0.000271352,np.where,np.nonzero
https://www.kaggle.com/uj2295/xgboost-for-compset,df_train[column].astype(str),df_train[column].apply(str),1.5562236390000002,0.579720651,pd.Series.astype,pd.Series.apply
https://www.kaggle.com/unlikelybutpossible/scratch1,"alldata.ix[kids_no_age, 'Age2']","alldata.loc[kids_no_age, 'Age2']",0.001341416,0.000144705,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/unlikelybutpossible/scratch1,"alldata.ix[dr_no_age, 'Age2']","alldata.loc[dr_no_age, 'Age2']",0.001285501,0.000142221,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/unlikelybutpossible/scratch1,"alldata.ix[ms_no_age, 'Age2']","alldata.loc[ms_no_age, 'Age2']",0.001357725,0.00017609,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/unlikelybutpossible/scratch1,"alldata.ix[mr_no_age, 'Age2']","alldata.loc[mr_no_age, 'Age2']",0.001346994,0.00015968299999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/unlikelybutpossible/scratch1,"alldata.ix[miss_no_age, 'Age2']","alldata.loc[miss_no_age, 'Age2']",0.001344126,0.00015972799999999999,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/unlikelybutpossible/scratch1,"alldata.ix[mrs_no_age, 'Age2']","alldata.loc[mrs_no_age, 'Age2']",0.001343067,0.000153253,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/utsavpatel/titanic-test,"np.count_nonzero(titanic.loc[titanic['Pclass'] == 3, 'Survived'].values)","np.sum(titanic.loc[titanic['Pclass'] == 3, 'Survived'].values!=0)",0.00036152199999999997,0.000336174,np.count_nonzero,np.sum
https://www.kaggle.com/utsavpatel/titanic-test,"np.count_nonzero(titanic.loc[titanic['Pclass'] == 2, 'Pclass'].values)","np.sum(titanic.loc[titanic['Pclass'] == 2, 'Pclass'].values!=0)",0.00033819599999999997,0.00031859200000000003,np.count_nonzero,np.sum
https://www.kaggle.com/utsavpatel/titanic-test,"np.count_nonzero(titanic.loc[titanic['Pclass'] == 2, 'Survived'].values)","np.sum(titanic.loc[titanic['Pclass'] == 2, 'Survived'].values!=0)",0.000339306,0.000323592,np.count_nonzero,np.sum
https://www.kaggle.com/utsavpatel/titanic-test,np.where(titanic['Pclass'] == 2),np.nonzero(titanic['Pclass'] == 2),0.00038598800000000003,0.00022719,np.where,np.nonzero
https://www.kaggle.com/v81msk/test1,"df.loc[df['ecology'] == 'no data', ['ecology', 'industrial_km']]","df.ix[df['ecology'] == 'no data', ['ecology', 'industrial_km']]",0.023442678999999998,0.017010049,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/vgerald/predict-claims-severity-v2,"train.ix[:, 'cat1':'cat116']","train.loc[:, 'cat1':'cat116']",0.002299385,0.002245854,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/vgerald/predict-claims-severity-v2,"test.ix[:, 'cont1':'cont14']","test.loc[:, 'cont1':'cont14']",0.000241736,0.000236193,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/vgerald/predict-claims-severity-v2,"test.ix[:, 'cont1':'cont14']","test.loc[:, 'cont1':'cont14']",0.000244647,0.000231013,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/vinhnguyen/evolutionary-algorithms-for-param-tuning,df[featureCol].map(lambda x: 1 if x == val else 0),"np.where( df[featureCol] == val , 1 ,0)",0.73927188,0.12901633199999998,pd.Series.map,np.where
https://www.kaggle.com/vinhnguyen/evolutionary-algorithms-for-param-tuning,data['StoreType'].map(lambda y: 1 if y == x else 0),"np.where( data['StoreType'] == x , 1 ,0)",0.6740940059999999,0.07842716599999999,pd.Series.map,np.where
https://www.kaggle.com/weishyi/titanic,"train.loc[:, (feat_colums)]","train.ix[:, (feat_colums)]",0.001838051,0.001551338,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/weishyi/titanic,"test.loc[:, (feat_colums)]","test.ix[:, (feat_colums)]",0.00151574,0.001375677,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/willjashford/minst-willjashford,"verify_df.loc[row, 'label']","verify_df.at[row, 'label']",1.09e-05,4.59e-06,pd.DataFrame.loc,pd.DataFrame.at
https://www.kaggle.com/willjashford/minst-willjashford,"verify_df.loc[row, 'label']","verify_df.at[row, 'label']",1.0199999999999999e-05,5.95e-06,pd.DataFrame.loc,pd.DataFrame.at
https://www.kaggle.com/willjashford/minst-willjashford,"verify_df.loc[row, 'label']","verify_df.at[row, 'label']",7.64e-06,4.57e-06,pd.DataFrame.loc,pd.DataFrame.at
https://www.kaggle.com/willjashford/minst-willjashford,"verify_df.loc[row, 'label']","verify_df.at[row, 'label']",8.22e-06,4.59e-06,pd.DataFrame.loc,pd.DataFrame.at
https://www.kaggle.com/wonjohnchoi/pca-svm,"train.ix[:, 1:]","train.iloc[:, 1:]",9.379999999999999e-05,8.44e-05,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/wonjohnchoi/pca-svm,"train.ix[:, (0)]","train.iloc[:, (0)]",6.32e-05,3.76e-05,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/wonjohnchoi/pca-svm,"test.ix[:, :]","test.loc[:, :]",1.36e-05,1.1e-05,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/wrosinski/boosted-python-xgb-starter-0-0223532-lb,"np.hstack([test_X, temp_test_X])","np.append(test_X, temp_test_X, axis=1)",0.021319845,0.021199448,np.hstack,np.append
https://www.kaggle.com/wrosinski/boosted-python-xgb-starter-0-0223532-lb,"np.hstack([train_X, temp_train_X])","np.concatenate([train_X, temp_train_X], axis=1)",0.01658186,0.016574693,np.hstack,np.concatenate
https://www.kaggle.com/xcz011/mercedez,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.concatenate((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed), axis=1)",0.017438953,0.017292046999999998,np.hstack,np.concatenate
https://www.kaggle.com/xiaoml/bag-of-app-id-python-2-27392,np.ones(len(FLS)),np.empty(len(FLS)); r2.fill(1),0.009857260999999999,0.001807956,np.ones,np.empty
https://www.kaggle.com/xiziling/deal-with,"np.hstack((pro_data, XL1))","np.append(pro_data, XL1, axis=1)",0.48560464799999997,0.46745825399999996,np.hstack,np.append
https://www.kaggle.com/xiziling/deal-with,"np.hstack((pro_data, XL1))","np.concatenate((pro_data, XL1), axis=1)",0.430004086,0.42150806799999996,np.hstack,np.concatenate
https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,a_s.sum(),"np.einsum('i->',a_s)",0.000133416,0.000110105,np.ndarray.sum,np.einsum
https://www.kaggle.com/yangnanhai/testtest,"np.vstack((train_preds, train_preds, train['Response'].values))","np.column_stack((train_preds.T, train_preds.T, train['Response'].values.T)).T",0.001047415,0.00074678,np.vstack,np.column_stack
https://www.kaggle.com/yangnanhai/testtest,all_data.Product_Info_2.str[0],all_data.Product_Info_2.map(lambda x: x[0]),0.028901976,0.009126417,pd.Series.str,pd.Series.map
https://www.kaggle.com/yangnanhai/testtest,all_data.Product_Info_2.str[1],all_data.Product_Info_2.map(lambda x: x[1]),0.027288466,0.0089795,pd.Series.str,pd.Series.map
https://www.kaggle.com/yashduvvuru/pytanic,"test.loc[:, (['Cader', 'FamilyId'])]","test.ix[:, (['Cader', 'FamilyId'])]",0.000443451,0.000436085,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/yashduvvuru/pytanic,"test.loc[:, (['PassengerId', 'Survived'])]","test.ix[:, (['PassengerId', 'Survived'])]",0.00073363,0.000420914,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/ybping/digits-recognizer,"train_data.ix[:, 1:]","train_data.iloc[:, 1:]",0.000105845,0.000102004,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/yifanxie/training-set-split-for-cross-validation,np.sum((np.log1p(tr_preds) - np.log1p(tr_test_y)) ** 2),((np.log1p(tr_preds) - np.log1p(tr_test_y)) ** 2).sum(),0.000304949,0.000301681,np.sum,np.ndarray.sum
https://www.kaggle.com/ymatioun/lightgbm-v1,np.zeros([len_train]),np.empty([len_train]); r2[:]= 0,1.32e-05,1.2e-05,np.zeros,np.empty
https://www.kaggle.com/ymatioun/lightgbm-v1,"merged_df['ingredients'].apply(','.join)","merged_df['ingredients'].map(','.join)",0.021401153,0.021307528,pd.Series.apply,pd.Series.map
https://www.kaggle.com/youngseoklee/digit-recognizer-with-machine-learning,X.loc[:size],X.ix[:size],0.00021471900000000002,0.000171476,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/youngseoklee/digit-recognizer-with-machine-learning,y.loc[:size],y.ix[:size],9.19e-05,8.45e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/youngseoklee/house-price-prediction-with-numeric-only-dataset,"df_test.loc[:, (important_index_wo_price)]","df_test.ix[:, (important_index_wo_price)]",0.000650085,0.000519191,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/ypcfirst/titanic-model-using-logistic-regression,"test.loc[:, (['Pclass', 'Age', 'Sex', 'SibSp', 'Parch', 'Fare', 'Embarked'])]","test.ix[:, (['Pclass', 'Age', 'Sex', 'SibSp', 'Parch', 'Fare', 'Embarked'])]",0.0007362660000000001,0.0005350859999999999,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/yuyimiao/miaoster,train['price_doc'].ix[train['price_doc'] > int(2.5 * np.exp(supbdd))],train['price_doc'].loc[train['price_doc'] > int(2.5 * np.exp(supbdd))],0.000379395,0.000348769,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,train['price_doc'].ix[train['price_doc'] < int(np.exp(13.5))],train['price_doc'].loc[train['price_doc'] < int(np.exp(13.5))],0.00037453300000000003,0.000348783,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.000779029,0.000224259,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.0006387890000000001,0.00020328400000000003,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.00061516,0.000208817,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.000712704,0.00020903,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.000695937,0.000278913,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.000620241,0.000212528,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",0.000301561,0.000254437,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",0.000304801,0.000267948,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.000454684,0.00021035599999999998,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.000532479,0.000348783,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",0.0007536289999999999,0.00022318400000000002,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",0.000294437,0.000275395,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",0.000297327,0.000256211,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.000994247,0.000232155,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.0007329,0.000218543,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",0.001017937,0.00043464199999999995,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",0.000805548,0.000292537,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",0.000521964,0.000208715,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",0.000579057,0.000230065,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",0.0006834810000000001,0.000624372,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",0.000352147,0.000194403,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",0.0012599269999999999,0.000253768,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",0.001151575,0.000250862,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.000667464,0.000230335,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.000357059,0.000194832,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",0.000314397,0.00024762,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",0.000304801,0.000253649,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]",0.000679719,0.000625841,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.000455349,0.000196502,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.00117743,0.000235811,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.0008133460000000001,0.000213777,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",0.001084395,0.000273265,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",0.000792086,0.000229495,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",0.000287844,0.000252218,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",0.000393609,0.000232533,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/zeroblue/knn-accelerated-v3,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T",4.39e-05,4.26e-05,np.column_stack,np.vstack
https://www.kaggle.com/zeroblue/testing-knn,np.vstack(preds_list),"np.concatenate(preds_list, axis=0)",0.099705241,0.09852219400000001,np.vstack,np.concatenate
https://www.kaggle.com/zeroblue/xgb-boost-with-event-data,"df_train_event.loc[fold_mask, ['M', 'F']]","df_train_event.ix[fold_mask, ['M', 'F']]",0.034308747,0.034105186,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/zeroblue/xgboost-with-optimized-offsets,all_data.Product_Info_2.str[0],all_data.Product_Info_2.map(lambda x: x[0]),0.027897814,0.008488775,pd.Series.str,pd.Series.map
https://www.kaggle.com/zeroblue/xgboost-with-optimized-offsets,all_data.Product_Info_2.str[1],all_data.Product_Info_2.map(lambda x: x[1]),0.027263474,0.009095876,pd.Series.str,pd.Series.map
https://www.kaggle.com/zeta2191622/how-to-get-a-score-of-0-894-in-two-minutes,"np.full((1000000, 1000), -1, dtype=np.int16)","np.empty((1000000, 1000), dtype=np.int16) ; r2[:] = -1",1.0078945129999999,0.15962357800000002,np.full,np.empty
https://www.kaggle.com/zeta2191622/how-to-get-a-score-of-0-894-in-two-minutes,"np.full((1000, 1000000), -1, dtype=np.int16)","np.empty((1000, 1000000), dtype=np.int16) ; r2[:] = -1",0.9335777670000001,0.162290935,np.full,np.empty
https://www.kaggle.com/zgo2016/titanic-logistic-regression,"np.ones((m, n + 1))","np.empty((m, n + 1)); r2.fill(1)",5.23e-06,3.16e-06,np.ones,np.empty
https://www.kaggle.com/zhoulaiqing/feature-starter,np.ones(gatrain.shape[0]),np.empty(gatrain.shape[0]); r2.fill(1),1.77e-05,1.62e-05,np.ones,np.empty
https://www.kaggle.com/zhoulaiqing/feature-starter,np.ones(gatrain.shape[0]),np.empty(gatrain.shape[0]); r2.fill(1),1.76e-05,1.4499999999999998e-05,np.ones,np.empty
https://www.kaggle.com/zstuwangrui/start-up,np.ones(df_test.shape[0]),np.empty(df_test.shape[0]); r2.fill(1),0.02515194,0.0045323,np.ones,np.empty
https://www.kaggle.com/chrisgundling/anyone-else-try-using-svm,counts.iloc[n],counts.iat[n],5.06e-06,2.99e-06,pd.Series.iloc,pd.Series.iat
https://www.kaggle.com/chrisgundling/anyone-else-try-using-svm,counts.iloc[n + 1],counts.iat[n + 1],5.35e-06,3.07e-06,pd.Series.iloc,pd.Series.iat
https://www.kaggle.com/rakhlin/ultra-fast-grid-knn-model,t.iloc[br],t.iat[br],5.14e-06,2.99e-06,pd.Series.iloc,pd.Series.iat
https://www.kaggle.com/aarotang/test-data,"np.hstack((x_num_test, vec_x_cat_test))","np.concatenate((x_num_test, vec_x_cat_test), axis=1)",0.033971212,0.03433576,np.hstack,np.concatenate
https://www.kaggle.com/aawadall/deep-neural-net,np.sum((y_hat == y_star) * y_star * 1),np.count_nonzero((y_hat == y_star) * y_star * 1),5.17e-05,6.8e-05,np.sum,np.count_nonzero
https://www.kaggle.com/aawadall/deep-neural-net,"np.sum(t, axis=0)","np.einsum('ij->j',t)",0.000139442,0.000179385,np.sum,np.einsum
https://www.kaggle.com/abrierly/explore-titanic-python,"train2.loc[train['Sex'] == 'male', 'Sex']","train2.ix[train['Sex'] == 'male', 'Sex']",0.0012462089999999999,0.005400881,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/abrierly/nn-approach,"np.dot(t0, x.T)","np.einsum('ij,jm->im',t0, x.T)",7.2e-06,1.4000000000000001e-05,np.dot,np.einsum
https://www.kaggle.com/adiamb/titanic-survival-my-way,"train.loc[:, 'Pclass':'Embarked']","train.ix[:, 'Pclass':'Embarked']",0.00036182099999999996,0.000366292,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/adityakumarsinha/stacked-then-averaged-models-private-lb-0-554,"all_data.loc[:, ('lag1')]","all_data.ix[:, ('lag1')]",2.7699999999999996e-05,4.0799999999999996e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/adityakumarsinha/stacked-then-averaged-models-private-lb-0-554,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.concatenate((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed), axis=1)",0.026921492999999998,0.027407985,np.hstack,np.concatenate
https://www.kaggle.com/adrianbureu/another-test,"data.loc[data.Fare.isnull() & (data.Pclass == f + 1), 'Fare']","data.ix[data.Fare.isnull() & (data.Pclass == f + 1), 'Fare']",0.000707214,0.001808985,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/adrianspataru/first-submission,"train.loc[train['Sex'] == 'male', 'Sex']","train.ix[train['Sex'] == 'male', 'Sex']",0.00038861,0.001535616,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/agarwalsneha/linear-svm-with-feature-engineering,"train.loc[train['Fare'] == 0, 'Fare_norm']","train.ix[train['Fare'] == 0, 'Fare_norm']",0.000339961,0.0014515560000000001,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/agarwalsneha/linear-svm-with-feature-engineering,"test['Sex'].map({'female': 0, 'male': 1})","pd.DataFrame(test['Sex']).replace({'female': 0, 'male': 1})",0.000385505,0.000718369,pd.Series.map,pd.DataFrame.replace
https://www.kaggle.com/aharless/jiwon-small-improvements-for-magic-number-results,"train.loc[bad_index, 'life_sq']","train.ix[bad_index, 'life_sq']",0.000331921,0.000669045,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.loc[train.full_sq == 0, 'full_sq']","train.ix[train.full_sq == 0, 'full_sq']",0.000375295,0.001975313,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/albytho/pubg-prediction-ann-implementation,"df_train.loc[:, :]","df_train.ix[:, :]",1.12e-05,1.31e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/aleiken/beginner-xgboost,df_train['Target'].replace(mapping),df_train['Target'].map(mapping),0.001143158,0.001265333,pd.Series.replace,pd.Series.map
https://www.kaggle.com/alexxanderlarko/road-2-0-4-featureset,"train.loc[train.Id.isin(tr.Id), 'StartTime']","train.ix[train.Id.isin(tr.Id), 'StartTime']",0.07802036799999999,0.08249021599999999,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/alipala/ml-regressors-20-features,"train.loc[:, (train.columns != c)]","train.ix[:, (train.columns != c)]",0.000596515,0.000621435,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/alpoza/test-titanic,"titanic.loc[titanic['Sex'] == 'male', 'Sex']","titanic.ix[titanic['Sex'] == 'male', 'Sex']",0.000405475,0.001499295,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/amazone/lightgbm-regressor,df['pickup_datetime'].apply(lambda x: int(x.split(' ')[0].split('-')[1])),df['pickup_datetime'].map(lambda x: int(x.split(' ')[0].split('-')[1])),1.1613864329999999,1.1644120820000001,pd.Series.apply,pd.Series.map
https://www.kaggle.com/amznit/rf-multilabel-framework-lb-0-022475,"np.hstack([train_X, temp_train_X])","np.append(train_X, temp_train_X, axis=1)",0.030738301000000003,0.030861844,np.hstack,np.append
https://www.kaggle.com/amznit/rf-multilabel-framework-lb-0-022475,"np.hstack([train_X, temp_train_X])","np.concatenate([train_X, temp_train_X], axis=1)",0.022481208,0.022509736000000002,np.hstack,np.concatenate
https://www.kaggle.com/andrewlin1006/cs145-v1,"np.hstack((x_num_data, vec_x_cat_data))","np.append(x_num_data, vec_x_cat_data, axis=1)",0.092292952,0.094648755,np.hstack,np.append
https://www.kaggle.com/andywan/data-import,"np.vstack([age_col['Age'], np.ones(len(age_col['Age']))])","np.column_stack((age_col['Age'].T, np.ones(len(age_col['Age'])).T)).T",7.46e-05,0.000101709,np.vstack,np.column_stack
https://www.kaggle.com/andyxie/titanic-xgboost,"data['train'].loc[:, (col)]","data['train'].ix[:, (col)]",2.5300000000000002e-05,3.46e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/angadp/trying-for-top-10,"dataset.loc[dataset['Family_Size'] == 1, 'isAlone']","dataset.ix[dataset['Family_Size'] == 1, 'isAlone']",0.000426061,0.001832349,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/anilcs/ectra-with-new-features,"train.loc[train[c].round(5) == 0, c]","train.ix[train[c].round(5) == 0, c]",0.004137664,0.0054306580000000005,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/anilkumarkuppa/extratreesclassifier-score-0-45911,"train.loc[train_series.isnull(), train_name]","train.ix[train_series.isnull(), train_name]",0.00031374,0.001529375,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/anirban00727/titanic-survival-chances-prediction,"combined.Sex.map({'male': 1, 'female': 0})","pd.DataFrame(combined.Sex).replace({'male': 1, 'female': 0})",0.00043217900000000004,0.000939595,pd.Series.map,pd.DataFrame.replace
https://www.kaggle.com/anishanalytics/oscar-wala-actor-leo,"data.loc[data.Sex != 'male', 'Sex']","data.ix[data.Sex != 'male', 'Sex']",0.00037986300000000003,0.0014758310000000001,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/anjuram25/titanic-ramanujamallam,"dataset.loc[dataset['FamilySize'] == 0, 'Family']","dataset.ix[dataset['FamilySize'] == 0, 'Family']",0.000328425,0.0014154670000000001,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/ankurbhartiya/titanicpy2,"df.loc[df.Age.isnull() & (df.Gender == i) & (df.Pclass == j + 1), 'AgeFill']","df.ix[df.Age.isnull() & (df.Gender == i) & (df.Pclass == j + 1), 'AgeFill']",0.001244703,0.002312409,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/ankurbhartiya/titanicpy2,"df['Embarked'].map({'C': 1, 'Q': 2, 'S': 3, '0': 3})","pd.DataFrame(df['Embarked']).replace({'C': 1, 'Q': 2, 'S': 3, '0': 3})",0.000418439,0.000984282,pd.Series.map,pd.DataFrame.replace
https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",0.000301701,0.00031025599999999996,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/azeembootwala/titanic-logistic-regression,X.T.dot(Y_pred - T),"np.tensordot(X.T,Y_pred - T,axes=1)",6.74e-05,8.56e-05,np.ndarray.dot,np.tensordot
https://www.kaggle.com/b0untyhunter/xgboost-lasso,"all_df.loc[idx, 'LotFrontage']","all_df.ix[idx, 'LotFrontage']",0.000158193,0.001477544,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/balajibi/facebook-solution-bi-1,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T",3.13e-05,3.59e-05,np.column_stack,np.vstack
https://www.kaggle.com/batzner/small-dataset-generator,np.where(child_pref[gift_id] == child_id),np.nonzero(child_pref[gift_id] == child_id),2.12e-06,2.34e-06,np.where,np.nonzero
https://www.kaggle.com/bguberfain/v22-classifier,"train.loc[~train[c].isin(cboth), c]","train.ix[~train[c].isin(cboth), c]",0.010782848000000001,0.016387086999999998,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/bhavesh09/onemoremodel,"c.loc[c.Age.isnull() & (c.Title == i), 'Age']","c.ix[c.Age.isnull() & (c.Title == i), 'Age']",0.0013914679999999999,0.0034919820000000002,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",0.000640211,0.0006997389999999999,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/bhavesh09/titanicsurvivalprediction,"train.loc[train['Age'] <= 14, 'Age']","train.ix[train['Age'] <= 14, 'Age']",0.0009222999999999999,0.005237650999999999,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/bigdit/test00000,"Df['Embarked'].map({'C': 1, 'S': 2, 'Q': 3})","pd.DataFrame(Df['Embarked']).replace({'C': 1, 'S': 2, 'Q': 3})",0.000413681,0.000935701,pd.Series.map,pd.DataFrame.replace
https://www.kaggle.com/bineetranjan/gbt-classification,"df.loc[df['Sex'] == 'male', 'Sex']","df.ix[df['Sex'] == 'male', 'Sex']",0.00040391099999999996,0.0017048710000000002,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/bluepoplar/try-1,"df.loc[df.FareFill > fare_ceiling - 1.0, 'FareFill']","df.ix[df.FareFill > fare_ceiling - 1.0, 'FareFill']",0.000397238,0.0017341260000000001,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/brajen259/pca-and-xgb,"test.loc[test[f] < lim, f]","test.ix[test[f] < lim, f]",0.0005630769999999999,0.00193154,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/brandymat/titanic-kernel-test,"data.loc[data['Title'] == 'Dr', 'Age']","data.ix[data['Title'] == 'Dr', 'Age']",0.00077604,0.00499799,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/brandymat/titanic-kernel-test,"np.where(data['Sex'] == 'male', 1, 0)",(data['Sex'] == 'male').astype((data['Sex'] == 'male').dtype),0.000765261,0.001551116,np.where,np.ndarray.astype
https://www.kaggle.com/bruceokallau/simple-knn-model-93-accurate,np.where(pred_valid != y_weight),np.nonzero(pred_valid != y_weight),0.00018799799999999998,0.00018976,np.where,np.nonzero
https://www.kaggle.com/bschaefer/frequent-items-per-user-baseline-lb-0-30,"submission.loc[submission['products'].isnull(), 'products']","submission.ix[submission['products'].isnull(), 'products']",0.00250953,0.003936991,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/bschaefer/frequent-items-per-user-baseline-lb-0-30,orders_test_user.query('eval_set == 'prior''),orders_test_user.loc[orders_test_user.eval_set == 'prior'],0.086600126,0.09812752300000001,pd.DataFrame.query,pd.DataFrame.loc
https://www.kaggle.com/buzzolord/kappavoid-testing,"dataset.loc[dataset['Age'] <= 5, 'Age']","dataset.ix[dataset['Age'] <= 5, 'Age']",0.000711038,0.005060677,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/bwboerman/a-quick-dive-into-h2o-with-python,"fullData.loc[fullData.TicketDiffFares == 1, 'TicketFare']","fullData.ix[fullData.TicketDiffFares == 1, 'TicketFare']",0.00035533900000000003,0.0016737689999999999,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/bwboerman/a-quick-dive-into-h2o-with-python,"np.where((fullData.Age <= 12) & (fullData.Sex == 'male'), 1, 0)",((fullData.Age <= 12) & (fullData.Sex == 'male')).astype(((fullData.Age <= 12) & (fullData.Sex == 'male')).dtype),0.000661546,0.001351375,np.where,np.ndarray.astype
https://www.kaggle.com/canran/titanic-rf,"X_df.loc[:, ('Sex')]","X_df.ix[:, ('Sex')]",3.01e-05,4.3200000000000007e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/careyai/san-fran-crime,"train.loc[train.X < -122.51093037786198, 'X']","train.ix[train.X < -122.51093037786198, 'X']",0.000881484,0.002118175,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",0.0005886590000000001,0.000593281,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/cast42/xgboost-example-python,"train_df.loc[train_df['Embarked'] == 'S', 'Embarked']","train_df.ix[train_df['Embarked'] == 'S', 'Embarked']",0.00047603699999999996,0.001656575,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/cast42/xgboost-extra-features,"data.loc[data.Open.isnull(), 'Open']","data.ix[data.Open.isnull(), 'Open']",0.00057853,0.001790375,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/cbrioso/lightgbm-with-cv,"data['hol']['transferred'].map({'False': 0, 'True': 1})","pd.DataFrame(data['hol']['transferred']).replace({'False': 0, 'True': 1})",0.0007530289999999999,0.000965225,pd.Series.map,pd.DataFrame.replace
https://www.kaggle.com/ceshine/pytorch-baseline-model,"df.loc[df.rankPoints < 0, 'rankPoints']","df.ix[df.rankPoints < 0, 'rankPoints']",0.004023188,0.0055604,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/ceshine/pytorch-baseline-model,df[col].astype(np.float64),df[col].apply(np.float64),0.009864048,0.468383714,pd.Series.astype,pd.Series.apply
https://www.kaggle.com/chappy19910723/tutrial20180702-2,np.array(L),np.concatenate([L]),1.18e-06,1.78e-06,np.array,np.concatenate
https://www.kaggle.com/chesters99/titanic-using-svm-classifierx,"df.loc[df['Age'].isnull() & (df['Title'] == atitle), 'Age']","df.ix[df['Age'].isnull() & (df['Title'] == atitle), 'Age']",0.0008037089999999999,0.002136877,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/chriscc/xgb-cv,"np.hstack((testCatVecX, testNumX))","np.concatenate((testCatVecX, testNumX), axis=1)",0.034313815,0.035622947,np.hstack,np.concatenate
https://www.kaggle.com/chriscc/xgb-py,"np.hstack((trainCatVecX, trainNumX))","np.append(trainCatVecX, trainNumX, axis=1)",0.036297663,0.036357852,np.hstack,np.append
https://www.kaggle.com/cjansen/magic-numbers-private-lb-0-31647,"train.loc[bad_index, 'num_room']","train.ix[bad_index, 'num_room']",0.00020774099999999997,0.000491159,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/clararnoux/titanic-not-failing,"titanic_test.loc[titanic_test['Sex'] == 'female', 'Sex']","titanic_test.ix[titanic_test['Sex'] == 'female', 'Sex']",0.000997658,0.003784445,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/clustifier/7-weeks-mode-lb-51-5,"test.loc[test.Visits.isnull(), 'Visits']","test.ix[test.Visits.isnull(), 'Visits']",0.012280693999999998,0.014244302,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/code1110/titanic-model-prediction-submission,"test_df['Sex'].map({'female': 1, 'male': 0})","pd.DataFrame(test_df['Sex']).replace({'female': 1, 'male': 0})",0.000371148,0.00079577,pd.Series.map,pd.DataFrame.replace
https://www.kaggle.com/coltonpaul/lost-in-a-forest-titanic,"data.loc[data['Sex'] == 'male', 'Sex']","data.ix[data['Sex'] == 'male', 'Sex']",0.001124774,0.004578323,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/company/facebook-pci,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T",2.3e-05,2.37e-05,np.column_stack,np.vstack
https://www.kaggle.com/computermage/test-titanic-survival-script,"np.where(full.Sex == 'male', 1, 0)",(full.Sex == 'male').astype((full.Sex == 'male').dtype),0.00023867900000000002,0.000454485,np.where,np.ndarray.astype
https://www.kaggle.com/cooleel/a-quick-try-of-h2o-automl-on-titanic-dataset,"data.loc[data.Name.str.contains('Miss.', regex=False), 'Prefix']","data.ix[data.Name.str.contains('Miss.', regex=False), 'Prefix']",0.000501709,0.0015782720000000001,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/corgicoffee/kernelb4bd873fab,"train_data.loc[:, (['Pclass', 'Sex', 'Age'])]","train_data.ix[:, (['Pclass', 'Sex', 'Age'])]",0.00050194,0.000510326,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/cttsai/xgb-trial-oct-08,"clustered_test.loc[:, (name)]","clustered_test.ix[:, (name)]",3.37e-05,4.29e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/cttsai/xgb-trial-oct-08,df[i].astype(str),df[i].apply(str),0.000267876,0.00041152800000000003,pd.Series.astype,pd.Series.apply
https://www.kaggle.com/cxxacxx/have-a-try-2,"all_data.loc[np.logical_not(all_data['LotFrontage'].isnull()), 'LotArea']","all_data.ix[np.logical_not(all_data['LotFrontage'].isnull()), 'LotArea']",0.000315415,0.001482802,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/daniglezl/main-1-py,"train.loc[train.Age.isnull(), 'Age']","train.ix[train.Age.isnull(), 'Age']",0.000283407,0.0015313710000000001,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/daniglezl/main-5-py,"train.loc[train.Fare > bin_max, 'Fare']","train.ix[train.Fare > bin_max, 'Fare']",0.00036033800000000003,0.0014892420000000002,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/daskoo/titanic-test-python,"train.loc[:, (['Name', 'SibSp', 'Age', 'Parch'])]","train.ix[:, (['Name', 'SibSp', 'Age', 'Parch'])]",0.0014770620000000001,0.001495681,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/daskoo/titanic-test-python,"(train.loc[:,['Name','SibSp','Age','Parch']]).query('Parch > 0 or SibSp > 0')","(train.loc[:,['Name','SibSp','Age','Parch']]).loc[(train.loc[:,['Name','SibSp','Age','Parch']].Parch > 0) | (train.loc[:,['Name','SibSp','Age','Parch']].SibSp > 0)]",0.0028217859999999997,0.003047115,pd.DataFrame.query,pd.DataFrame.loc
https://www.kaggle.com/devinodsa/titanic,"full.loc[full.PassengerId == 280, ['SibSp', 'Parch']]","full.ix[full.PassengerId == 280, ['SibSp', 'Parch']]",0.0010162189999999998,0.001048184,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/dexter22/testing,"train.loc[~train['Title'].isin(['Mr', 'Miss', 'Mrs', 'Master']), 'Title']","train.ix[~train['Title'].isin(['Mr', 'Miss', 'Mrs', 'Master']), 'Title']",0.000858409,0.0044836979999999995,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/dish42/getting-started,"train.loc[train.Age.isnull(), 'AgeFill']","train.ix[train.Age.isnull(), 'AgeFill']",0.000417581,0.001771461,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/dishajindal/script2-py,"train['Sex'].map({'female': 1, 'male': 0})","pd.DataFrame(train['Sex']).replace({'female': 1, 'male': 0})",0.000409364,0.000843969,pd.Series.map,pd.DataFrame.replace
https://www.kaggle.com/dishajindal/script-py,"train['Sex'].map({'female': 1, 'male': 0})","pd.DataFrame(train['Sex']).replace({'female': 1, 'male': 0})",0.000404214,0.0008206330000000001,pd.Series.map,pd.DataFrame.replace
https://www.kaggle.com/dollardollar/importance-of-address-features,"train.loc[:, ('Category')]","train.ix[:, ('Category')]",2.2e-05,3.16e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/dollardollar/importance-of-address-features,np.zeros(merged_data.shape),np.empty(merged_data.shape); r2[:]= 0,0.0009676180000000001,0.0071193919999999996,np.zeros,np.empty
https://www.kaggle.com/dujianjun79/titanic-machine-learing,"titanic.loc[titanic.Sex == 'male', 'Sex']","titanic.ix[titanic.Sex == 'male', 'Sex']",0.000791493,0.0035085859999999997,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/dvasyukova/predict-sales-with-pandas-py,"test.loc[test.Open.isnull(), 'Open']","test.ix[test.Open.isnull(), 'Open']",0.00027884299999999997,0.001385419,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/ekethio/titanic-second,"file.loc[file.Sex == 'male', 'Sex']","file.ix[file.Sex == 'male', 'Sex']",0.0007372619999999999,0.0026551020000000003,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/eponymous/weighted-models-example,np.column_stack([y_preds[k][i] for k in clfs]),np.transpose([y_preds[k][i] for k in clfs]),1.4499999999999998e-05,1.4800000000000002e-05,np.column_stack,np.transpose
https://www.kaggle.com/etherqua/airbnbdemo,df_all.date_account_created.astype(str),df_all.date_account_created.apply(str),0.021564639,0.027170673,pd.Series.astype,pd.Series.apply
https://www.kaggle.com/ezyyyy/silly-silly-data,train['ratio_kitch_sq_life_sq'].ix[train['ratio_kitch_sq_life_sq'] < 0],train['ratio_kitch_sq_life_sq'].loc[train['ratio_kitch_sq_life_sq'] < 0],0.000343415,0.000370372,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/felsiq/some-amateurish-full-titanic-data-process,"data_frame.loc[data_frame['Embarked'] == '', 'Embarked']","data_frame.ix[data_frame['Embarked'] == '', 'Embarked']",0.00034239199999999996,0.001649805,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/fernandocruz/first-test,"train.loc[:, 'margin1':]","train.ix[:, 'margin1':]",0.000830317,0.000846042,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/filatenkova/digit-read,np.transpose(train.as_matrix()),np.column_stack(train.as_matrix()),9.85e-06,0.42958814700000003,np.transpose,np.column_stack
https://www.kaggle.com/francksylla/titanic-machine-learning-from-disaster,"full.loc[:, ('Title')]","full.ix[:, ('Title')]",2.23e-05,2.9999999999999997e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/fzhurd/titanic-suvive20160924v4,combined.ix[891:],combined.iloc[891:],0.00127515,0.001277101,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/ganliu/testwhy,"train.loc[train['TARGET'] == 1, features + ['TARGET']]","train.ix[train['TARGET'] == 1, features + ['TARGET']]",0.018132844,0.018312707,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/garethjns/microsoft-lightgbm-with-parameter-tuning-0-823,"full.loc[full.Age.isnull(), 'Age']","full.ix[full.Age.isnull(), 'Age']",0.000301759,0.001760949,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/ghozlan/traincsv-numonly-py,np.where(predicted < 0),np.nonzero(predicted < 0),1.1e-05,1.1599999999999999e-05,np.where,np.nonzero
https://www.kaggle.com/gilbar/visualizing-data,"X.loc[:, (ranges > 1000)]","X.ix[:, (ranges > 1000)]",0.051307930999999994,0.051833335,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/gilsonfaria/script3-title-dummies,"np.column_stack((test['PassengerId'], test_result))","np.transpose((test['PassengerId'], test_result))",3.15e-05,0.0001326,np.column_stack,np.transpose
https://www.kaggle.com/gilsonfaria/script4-boolsibsp-parch,"np.column_stack((idTest, test_result))","np.transpose((idTest, test_result))",3.27e-05,0.00012541899999999999,np.column_stack,np.transpose
https://www.kaggle.com/gilsonfaria/scriptfinal,"np.column_stack((idTest, test_result))","np.transpose((idTest, test_result))",2.8000000000000003e-05,0.00012916700000000002,np.column_stack,np.transpose
https://www.kaggle.com/gouxute1/xgboost-and-simple-data-cleaning,"df_train.loc[df_train['n0'] == 0, 'n0']","df_train.ix[df_train['n0'] == 0, 'n0']",0.0035295440000000003,0.004817745,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/gshguru/beating-the-benchmark-0-57,"np.array(rater_a, dtype=int)","np.fromiter(rater_a, dtype=int)",2.53e-06,0.000666956,np.array,np.fromiter
https://www.kaggle.com/guillaumegg/titanic-machine-learning,"custom_train.loc[custom_train['Age'] <= 16, 'Age']","custom_train.ix[custom_train['Age'] <= 16, 'Age']",0.000935285,0.0051935720000000005,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/gunjan17/mytitanicsolution,"new_train.loc[new_train['Sex'] == 'male', 'Sex']","new_train.ix[new_train['Sex'] == 'male', 'Sex']",0.001012136,0.006820764,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/gvyshnya/basic-prophet-ts-forecasting-framework,air_visit_data.query('air_store_id ==  + current_store_id + '),air_visit_data.loc[air_visit_data.air_store_id ==  current_store_id ],0.006267084,0.012209946999999999,pd.DataFrame.query,pd.DataFrame.loc
https://www.kaggle.com/gvyshnya/gbm-cv-submission-lb-28,train_df[f2].apply(lambda x: str(x)),train_df[f2].map(lambda x: str(x)),0.205711802,0.208284172,pd.Series.apply,pd.Series.map
https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[df.GarageYrBlt == 2207, 'GarageYrBlt']","df.ix[df.GarageYrBlt == 2207, 'GarageYrBlt']",0.000383882,0.001656105,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/happycube/scirpus-extreme-bayes-faron-36312,"blindtraindata.loc[:, (col)]","blindtraindata.ix[:, (col)]",2.36e-05,3.6700000000000004e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/happycube/simple-cv-example-one-feature-near-rf,"all_data.loc[all_data[key] != na, key]","all_data.ix[all_data[key] != na, key]",0.00339586,0.004728705,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/happycube/simple-cv-example-one-feature-near-rf,"np.full(len(train_bag), 0, dtype=np.float32)","np.zeros(len(train_bag), dtype=np.float32)",1.24e-05,1.3699999999999998e-05,np.full,np.zeros
https://www.kaggle.com/harini5693/data-analysisusingpython,"dataset.loc[(dataset['Age'] > 16) & (dataset['Age'] <= 32), 'Age']","dataset.ix[(dataset['Age'] > 16) & (dataset['Age'] <= 32), 'Age']",0.000829275,0.002573331,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/hawkinsliam/simple-random-forest,"df.loc[df['Family_size'] == 1, 'Is_alone']","df.ix[df['Family_size'] == 1, 'Is_alone']",0.000379082,0.0016050939999999998,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/hawkinsliam/simple-random-forest,"np.column_stack((ids.T, predictions.T))","np.vstack((ids.T, predictions.T)).T",4.82e-06,4.86e-06,np.column_stack,np.vstack
https://www.kaggle.com/hawkinsliam/simple-random-forest,"np.column_stack((ids.T, predictions.T))","np.transpose((ids.T, predictions.T))",5.06e-06,6.28e-06,np.column_stack,np.transpose
https://www.kaggle.com/hideki1234/neural-network,Theta2.dot(A2),"np.tensordot(Theta2,A2,axes=1)",0.002767081,0.0027681309999999996,np.ndarray.dot,np.tensordot
https://www.kaggle.com/hubifeng/jack-japan-s-python-version,date_info.calendar_date.dt.weekday.map(week_dict),date_info.calendar_date.dt.weekday.replace(week_dict),0.001436371,0.0018349829999999999,pd.Series.map,pd.Series.replace
https://www.kaggle.com/ievgenvp/lgbm-custom-randomizedsearchcv-lb-283,"np.c_[actual, pred, np.arange(len(actual))]","np.hstack([np.array(actual).reshape(len(actual),1), np.array(pred).reshape(len(actual),1), np.arange(len(actual)).reshape(len(actual),1)])",0.001713348,0.002525164,np.c_,np.hstack
https://www.kaggle.com/inpefess/xgboost-in-python-with-rmspe,"data.loc[data['StateHoliday'] == 'b', 'StateHoliday']","data.ix[data['StateHoliday'] == 'b', 'StateHoliday']",0.046345498,0.047851155,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/inversion/pls-visualization-2,np.where(y_train == class_ix),np.nonzero(y_train == class_ix),0.00029713,0.000302739,np.where,np.nonzero
https://www.kaggle.com/inversion/visualizing-class-distance,"dist_metric.loc[1000:2000, ('5_10')]","dist_metric.ix[1000:2000, ('5_10')]",0.00015164,0.000172145,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/inversion/visualizing-class-distance,np.where(label == c),np.nonzero(label == c),5.14e-05,5.2300000000000004e-05,np.where,np.nonzero
https://www.kaggle.com/izzul02/age-gender-breed-and-name-vs-outcome,"df.loc[df['AnimalType'] == 'Dog', feature]","df.ix[df['AnimalType'] == 'Dog', feature]",0.00212025,0.0031111,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/jackiezhao/xgboost-v2,"data_set['Embarked'].map({'S': 1, 'C': 2, 'Q': 3})","pd.DataFrame(data_set['Embarked']).replace({'S': 1, 'C': 2, 'Q': 3})",0.00038515699999999996,0.00091811,pd.Series.map,pd.DataFrame.replace
https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",0.0006910789999999999,0.00070024,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",0.000634869,0.000642768,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",0.000613307,0.00062695,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jbuchner/random-forest-97-7-stroke-features-gaps-knots,"data.loc[:, 'pixel0':'pixel783']","data.ix[:, 'pixel0':'pixel783']",0.000201704,0.000205203,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/jbuchner/random-forest-97-7-stroke-features-gaps-knots,numpy.where(mask),numpy.nonzero(mask),2.98e-06,4.04e-06,np.where,np.nonzero
https://www.kaggle.com/jeolas/id-survived,"titanic_test.loc[titanic_test['Embarked'] == 'S', 'Embarked']","titanic_test.ix[titanic_test['Embarked'] == 'S', 'Embarked']",0.0008199969999999999,0.0038033579999999997,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/joanfo/my-first-kernel,"clean.loc[:, (numerical_cols)]","clean.ix[:, (numerical_cols)]",0.000403285,0.000420348,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/jojadud/titanic-exploration-1,"train['Sex'].map({'female': 1, 'male': 0})","train['Sex'].replace({'female': 1, 'male': 0})",0.00043214699999999997,0.0005972369999999999,pd.Series.map,pd.Series.replace
https://www.kaggle.com/journeycheng/script-py,"train_df.loc[train_df.Age.isnull() & (f == train_df.Title), 'Age']","train_df.ix[train_df.Age.isnull() & (f == train_df.Title), 'Age']",0.000985653,0.0020608370000000003,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/jtson1213/titanic-decision-tree-classifier,"dataset.loc[dataset['Age'] <= 9, 'Age']","dataset.ix[dataset['Age'] <= 9, 'Age']",0.000314011,0.0014467879999999999,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/justfor/bench-stacked-generalization,"np.hstack((trainCatVecX, trainNumX))","np.append(trainCatVecX, trainNumX, axis=1)",0.023396235,0.023551901,np.hstack,np.append
https://www.kaggle.com/justfor/bench-stacked-generalization,"np.hstack((trainCatVecX, trainNumX))","np.concatenate((trainCatVecX, trainNumX), axis=1)",0.021754541000000002,0.023911017000000003,np.hstack,np.concatenate
https://www.kaggle.com/justinabel/prud-1,train.ix[train_rows],train.loc[train_rows],0.014986817,0.015037971,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/jvallej/agregaciones-previouse-applications,"data.loc[:, (['SK_ID_PREV', 'SK_ID_CURR'])]","data.ix[:, (['SK_ID_PREV', 'SK_ID_CURR'])]",0.016205023,0.017252711,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/kevins/models-war,"data_cl.loc[data_cl['action_type'].isin(rare_action_types), 'action_type']","data_cl.ix[data_cl['action_type'].isin(rare_action_types), 'action_type']",0.0008505539999999999,0.00207588,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/kingarthurie/titanik-rdf,"data.loc[data['Embarked'] == 'S', 'Embarked']","data.ix[data['Embarked'] == 'S', 'Embarked']",0.000389558,0.001517221,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/knageswara78/my-tatanic-python-solution,"np.array(results['param_C'].data, dtype=float)","np.fromiter(results['param_C'].data, dtype=float)",1.46e-06,2.28e-06,np.array,np.fromiter
https://www.kaggle.com/knageswara78/my-tatanic-python-solution,"np.where(final_test['Age'] <= 16, 1, 0)",(final_test['Age'] <= 16).astype((final_test['Age'] <= 16).dtype),0.000326373,0.00036448,np.where,np.ndarray.astype
https://www.kaggle.com/knageswara78/my-tatanic-python-solution,"np.where(train_data['SibSp'] + train_data['Parch'] > 0, 0, 1)",(train_data['SibSp'] + train_data['Parch']).map(lambda x : 0 if x > 0 else  1).values,0.000320876,0.000596863,np.where,pd.Series.map
https://www.kaggle.com/knageswara78/my-tatanic-python-solution,np.where(tpr > 0.95),np.nonzero(tpr > 0.95),1.64e-06,1.86e-06,np.where,np.nonzero
https://www.kaggle.com/kotaroito/titanic,"train_df.loc[train_df.Embarked.isnull(), 'Embarked']","train_df.ix[train_df.Embarked.isnull(), 'Embarked']",0.0005222,0.002235369,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,np.where(p < 0.5),np.nonzero(p < 0.5),0.000164074,0.000172216,np.where,np.nonzero
https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,np.zeros(input_x.shape[1]),np.empty(input_x.shape[1]); r2[:]= 0,2.35e-06,3.13e-06,np.zeros,np.empty
https://www.kaggle.com/lancerts/combined,np.where(queries[:10158] == q),np.nonzero(queries[:10158] == q),6.7e-05,7.509999999999998e-05,np.where,np.nonzero
https://www.kaggle.com/ldavim/code01,"trainData['Sex'].map({'female': 0, 'male': 1})","trainData['Sex'].replace({'female': 0, 'male': 1})",0.000421681,0.0005673280000000001,pd.Series.map,pd.Series.replace
https://www.kaggle.com/leblondmorgan/titanic-machine-learning,"train_df.loc[train_df['Sex'] == 'male', 'Sex']","train_df.ix[train_df['Sex'] == 'male', 'Sex']",0.00040413300000000004,0.0015442910000000002,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/lesibius/naive-bayes-time-only,"df_train.loc[:, ('Hour')]","df_train.ix[:, ('Hour')]",2.25e-05,2.99e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/lesibius/time-only-sv,"df_test.ix[:, 2:]","df_test.iloc[:, 2:]",0.027019765,0.027212359,pd.DataFrame.ix,pd.DataFrame.iloc
https://www.kaggle.com/lesibius/time-only-sv,"df_train.loc[:, (['Year', 'Hour', 'Month', 'DayOfWeek', 'X', 'Y'])]","df_train.ix[:, (['Year', 'Hour', 'Month', 'DayOfWeek', 'X', 'Y'])]",0.068065844,0.069845472,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/lifengmiao/titanic,"df.loc[df.Age.isnull() & (df.Sex == i) & (df.Pclass == j + 1), 'Age']","df.ix[df.Age.isnull() & (df.Sex == i) & (df.Pclass == j + 1), 'Age']",0.001131209,0.002329373,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/lindenlu/linden-titanic-script,"train_df.loc[:, ('Name')]","train_df.ix[:, ('Name')]",3.289999999999999e-05,4.02e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/lionalio/titanicprediction,"TrainingSet['Embarked'].map({'S': 0, 'C': 1, 'Q': 2})","pd.DataFrame(TrainingSet['Embarked']).replace({'S': 0, 'C': 1, 'Q': 2})",0.000404037,0.0011234819999999999,pd.Series.map,pd.DataFrame.replace
https://www.kaggle.com/lllinger/crimedistribution-temporal-spatial,"train_data.loc[:, ('Dates')]","train_data.ix[:, ('Dates')]",2.65e-05,3.2e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",0.0006195819999999999,0.000713634,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/lostking91/titanic,"train.loc[train['Cabin'] != 'N', 'Cabin']","train.ix[train['Cabin'] != 'N', 'Cabin']",0.000897657,0.003731157,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/lzzzfelipe/titanic-modelling,"combined2.loc[:, ('Title')]","combined2.ix[:, ('Title')]",2.17e-05,2.8000000000000003e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/maheshak04/xgb-with-nan-and-other-cleaning-25052017,"df_train.loc[df_train.full_sq == 0, 'full_sq']","df_train.ix[df_train.full_sq == 0, 'full_sq']",0.000402183,0.001558203,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",0.000308863,0.00037614,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/meeththakkar/perceptron-implementation,"train_data.loc[train_data.Age.isnull(), 'Age']","train_data.ix[train_data.Age.isnull(), 'Age']",0.000257455,0.001416879,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/meeththakkar/perceptron-implementation,"train_data['Sex'].map({'female': 0, 'male': 1})","pd.DataFrame(train_data['Sex']).replace({'female': 0, 'male': 1})",0.00039740800000000003,0.0007866889999999999,pd.Series.map,pd.DataFrame.replace
https://www.kaggle.com/meeththakkar/titanic-randomforest-kfold-python,"df.loc[df.Embarked.isnull(), 'Embarked']","df.ix[df.Embarked.isnull(), 'Embarked']",0.000302633,0.00152661,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/melisbiyikli/titanic-data-sets,"all_datas['Sex'].map({'male': 1, 'female': 0})","pd.DataFrame(all_datas['Sex']).replace({'male': 1, 'female': 0})",0.000400376,0.000915016,pd.Series.map,pd.DataFrame.replace
https://www.kaggle.com/mhooreman/test-new-script,"tmp.loc[tmp[1].isin(('year', 'years')), 'years']","tmp.ix[tmp[1].isin(('year', 'years')), 'years']",0.00130667,0.0023866210000000002,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/mjyang/testw,X.T.dot(Y_pred - T),"np.tensordot(X.T,Y_pred - T,axes=1)",6.12e-05,8.73e-05,np.ndarray.dot,np.tensordot
https://www.kaggle.com/mkurnikov/modified-cos-similarity-python-edition,"np.dot(user_profiles, W)","np.einsum('ij,jm->im',user_profiles, W)",0.045162405999999995,0.49793237100000004,np.dot,np.einsum
https://www.kaggle.com/mldm16fe/mytest051603,"trainData.loc[trainData.Age.isnull(), 'modAge']","trainData.ix[trainData.Age.isnull(), 'modAge']",0.000458943,0.0033381559999999997,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/mnoguchi/titanic-pandas,"df['Sex'].map({'female': 0, 'male': 1})","pd.DataFrame(df['Sex']).replace({'female': 0, 'male': 1})",0.000412905,0.000897875,pd.Series.map,pd.DataFrame.replace
https://www.kaggle.com/moichiaaron/numpynist-py,theta2.T.dot(s3),"np.tensordot(theta2.T,s3,axes=1)",0.00672145,0.006935768,np.ndarray.dot,np.tensordot
https://www.kaggle.com/mosa94/linear-regression-implementations,"np.dot(trainX_.transpose(), trainX_)","np.einsum('ij,jm->im',trainX_.transpose(), trainX_)",5.42e-06,7.92e-06,np.dot,np.einsum
https://www.kaggle.com/mrisdal/starter-kernel-python-script-1,"np.array(row[1:], dtype=np.uint8)","np.fromiter(row[1:], dtype=np.uint8)",8e-05,0.00013482,np.array,np.fromiter
https://www.kaggle.com/mschou/titanic001,"titanic.loc[titanic['Sex'] == 1, 'Age']","titanic.ix[titanic['Sex'] == 1, 'Age']",0.000399948,0.001891235,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/nabilnobel/if-product-exists-in-last-4-order,"orders_all.loc[orders_all['order_number'] > 1, 'n_1']","orders_all.ix[orders_all['order_number'] > 1, 'n_1']",0.057392449000000005,0.082228982,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/nagadomi/nearest-neighbor-search,np.transpose(train_x),np.column_stack(train_x),9.97e-07,0.267204743,np.transpose,np.column_stack
https://www.kaggle.com/naropian/narnar-test,"df_train.ix[:, (df_train.columns != 'SalePrice')]","df_train.loc[:, (df_train.columns != 'SalePrice')]",0.0006612310000000001,0.00080247,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/naumanahm/nauman-attempt3-final,"complete_data.loc[1379, 'Electrical']","complete_data.ix[1379, 'Electrical']",0.000398568,0.000458184,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/navaneeth51089/my-first-script,"train_set['Sex'].map({'female': 2, 'male': 1})","train_set['Sex'].replace({'female': 2, 'male': 1})",0.000503939,0.000628561,pd.Series.map,pd.Series.replace
https://www.kaggle.com/nbose2/tests,"df_train.ix[:, (df_train.columns != 'SalePrice')]","df_train.loc[:, (df_train.columns != 'SalePrice')]",0.000633089,0.0006486469999999999,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/nemethpeter42/osztalyozas,"df_tmp.loc[:, ('tipp')]","df_tmp.ix[:, ('tipp')]",3.43e-05,4.5e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/nemethpeter42/valami,"df.loc[:, ('Demanda_uni_equil')]","df.ix[:, ('Demanda_uni_equil')]",4.1200000000000005e-05,4.6899999999999995e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/newhardwarefound/artificial-neural-network,"np.dot(delta, activations[-2].transpose())","np.einsum('ij,jm->im',delta, activations[-2].transpose())",1.98e-06,3.83e-06,np.dot,np.einsum
https://www.kaggle.com/nicapotato/tf-idf-xgboost,"train.loc[:, (class_names)]","train.ix[:, (class_names)]",0.003708649,0.003722462,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/nightshade7/allstatetest,"np.hstack((catData.T, df[cols[117:nFeat - 1]].as_matrix()))","np.concatenate((catData.T, df[cols[117:nFeat - 1]].as_matrix()), axis=1)",0.143317269,0.144275895,np.hstack,np.concatenate
https://www.kaggle.com/nightshade7/allstatetest,"np.vstack((catData, temp))","np.column_stack((catData.T, temp.T)).T",0.000922003,0.000962105,np.vstack,np.column_stack
https://www.kaggle.com/nikolayburlutskiy/modified-grid-knn,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T",3.9399999999999995e-05,4.11e-05,np.column_stack,np.vstack
https://www.kaggle.com/niladri18/usinng-logistic-regression,"np.vstack((x0, x1, x2, x3))","np.column_stack((x0.T, x1.T, x2.T, x3.T)).T",0.05530237599999999,0.095244044,np.vstack,np.column_stack
https://www.kaggle.com/nilzone/lgbm-with-mean-encodings,"test.loc[:, ('is_test')]","test.ix[:, ('is_test')]",4.61e-05,5.8599999999999995e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/nishadi/breeds,"np.where(breeds_group[:, (0)] == i)","np.nonzero(breeds_group[:, (0)] == i)",3.48e-06,3.77e-06,np.where,np.nonzero
https://www.kaggle.com/ocaudevi/passanger-flow-mapping-properties,"np.ones((1, values_pickup.shape[1]))","np.empty((1, values_pickup.shape[1])); r2.fill(1)",6.25e-06,7.1e-06,np.ones,np.empty
https://www.kaggle.com/ogrellier/xgb-classifier-upsampling-lb-0-283,"np.zeros((len(trn_df.columns), n_splits))","np.empty((len(trn_df.columns), n_splits)); r2[:]= 0",1e-06,1.41e-06,np.zeros,np.empty
https://www.kaggle.com/olttwa/titanic-logistic-regression-v1,X.dot(theta),"np.tensordot(X,theta,axes=1)",3.85e-06,2.0399999999999998e-05,np.ndarray.dot,np.tensordot
https://www.kaggle.com/omijn1/titanic-survivor-prediction,"X_train.loc[:, (['Sex'])]","X_train.ix[:, (['Sex'])]",0.000410082,0.000413387,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/opanichev/pandas-btb,"np.array(products, dtype='int')","np.fromiter(products, dtype='int')",4.36e-06,1.7800000000000002e-05,np.array,np.fromiter
https://www.kaggle.com/opjason/titanicsarita,"dataset['Sex'].map({'female': 1, 'male': 0})","pd.DataFrame(dataset['Sex']).replace({'female': 1, 'male': 0})",0.000421935,0.0008475589999999999,pd.Series.map,pd.DataFrame.replace
https://www.kaggle.com/panpolikarp/housing-submission-0-12695,"data.loc[data.index.isin(missing[c].index.tolist()), c]","data.ix[data.index.isin(missing[c].index.tolist()), c]",0.000602206,0.000851251,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/patrickjordan/random-forest,"frame.loc[frame[feature] == cat, feature + '_E']","frame.ix[frame[feature] == cat, feature + '_E']",0.000376659,0.002247025,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/paullo0106/knn-accelerated-v3,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T",3.87e-05,3.9899999999999994e-05,np.column_stack,np.vstack
https://www.kaggle.com/paulorzp/run-length-encode-and-decode,np.where(pixels[1:] != pixels[:-1]),np.nonzero(pixels[1:] != pixels[:-1]),0.0026567490000000003,0.002703653,np.where,np.nonzero
https://www.kaggle.com/piplimoon/leaderboard-0-8134,"df_combo.loc[:, ('Fam')]","df_combo.ix[:, ('Fam')]",2.27e-05,2.8600000000000004e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/popupsert/titanic-my-first-kaggle,"dataset.loc[:, ('Sex')]","dataset.ix[:, ('Sex')]",2.3800000000000003e-05,2.9199999999999998e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/qvajou/titanic-disaster-first-test,"np.where(full.Sex == 'male', 1, 0)",(full.Sex == 'male').astype((full.Sex == 'male').dtype),0.000245107,0.00046042699999999996,np.where,np.ndarray.astype
https://www.kaggle.com/rakhlin/ultra-fast-grid-knn-model,np.where(d > g.th),np.nonzero(d > g.th),2.3899999999999998e-05,2.61e-05,np.where,np.nonzero
https://www.kaggle.com/ranjith49/home-credit-default-risk-python,"app_train.loc[app_train['TARGET'] == 0, 'DAYS_BIRTH']","app_train.ix[app_train['TARGET'] == 0, 'DAYS_BIRTH']",0.004141398,0.005073569,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/rcasellas/ensemble-stacking-with-et-script,"df.loc[df['Family_size'] == 1, 'isAlone']","df.ix[df['Family_size'] == 1, 'isAlone']",0.00040859699999999996,0.0017439929999999999,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/rchitic17/titanic-r-to-python,"full['Embarked'].map({'S': 0, 'C': 1, 'Q': 2})","pd.DataFrame(full['Embarked']).replace({'S': 0, 'C': 1, 'Q': 2})",0.00041160199999999995,0.001000033,pd.Series.map,pd.DataFrame.replace
https://www.kaggle.com/riteshsinha/single-xgboost-model-public-lb-481,"date_info.loc[wkend_holidays, 'holiday_flg']","date_info.ix[wkend_holidays, 'holiday_flg']",0.00014365,0.001292805,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/robdias/predictfy-titanic-survival,"t_train.loc[t_train['Sex'] == 'male', 'Sex']","t_train.ix[t_train['Sex'] == 'male', 'Sex']",0.00039607199999999997,0.001531945,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/rohitagarwal/attempt-number-1,"total.loc[total['Fare'].isnull() & total['Pclass'] == i + 1, 'Fare']","total.ix[total['Fare'].isnull() & total['Pclass'] == i + 1, 'Fare']",0.0007764289999999999,0.002191143,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/rohitagarwal/attempt-number-1,"total['FamilySizeCategories'].map({(0): 1, (1): 0, (2): 2})","pd.DataFrame(total['FamilySizeCategories']).replace({(0): 1, (1): 0, (2): 2})",0.00037898699999999995,0.0005412290000000001,pd.Series.map,pd.DataFrame.replace
https://www.kaggle.com/rtmink/cs-145-project-2c,"np.hstack((x_num_test, vec_x_cat_test))","np.append(x_num_test, vec_x_cat_test, axis=1)",0.033866089,0.039453177,np.hstack,np.append
https://www.kaggle.com/rtmink/cs-145-project-2c,"np.hstack((x_num_test, vec_x_cat_test))","np.concatenate((x_num_test, vec_x_cat_test), axis=1)",0.030984297999999997,0.032069765,np.hstack,np.concatenate
https://www.kaggle.com/rtmink/test-101,"np.hstack((x_num_data, vec_x_cat_data))","np.append(x_num_data, vec_x_cat_data, axis=1)",0.036532224,0.038685277000000004,np.hstack,np.append
https://www.kaggle.com/rtmink/test-101,"np.hstack((x_num_data, vec_x_cat_data))","np.concatenate((x_num_data, vec_x_cat_data), axis=1)",0.034375705,0.034494081,np.hstack,np.concatenate
https://www.kaggle.com/rtmink/test-1011,"np.hstack((x_num_test, vec_x_cat_test))","np.append(x_num_test, vec_x_cat_test, axis=1)",0.034690151,0.037907146,np.hstack,np.append
https://www.kaggle.com/rtmink/test-1011,"np.hstack((x_num_data, vec_x_cat_data))","np.concatenate((x_num_data, vec_x_cat_data), axis=1)",0.03255889,0.037386157,np.hstack,np.concatenate
https://www.kaggle.com/sachin13/titanic,"data.loc[data['SibSp'] + data['Parch'] == 0, 'isAlone']","data.ix[data['SibSp'] + data['Parch'] == 0, 'isAlone']",0.000478939,0.001836867,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/sachin13/titanic,"data['Embarked'].map({'C': 0, 'Q': 1, 'S': 2})","pd.DataFrame(data['Embarked']).replace({'C': 0, 'Q': 1, 'S': 2})",0.00037035199999999995,0.000933165,pd.Series.map,pd.DataFrame.replace
https://www.kaggle.com/safavieh/median-estimation-by-fibonacci-et-al-lb-44-9,row[1:].nonzero(),np.where(row[1:]),8.9e-05,0.00012168,np.nonzero,np.where
https://www.kaggle.com/sajal0jain/delme-1,"events.loc[:, ('device_id')]","events.ix[:, ('device_id')]",3.52e-05,4.6299999999999994e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/sakenk/random-forest,"ttest.loc[ttest['Sex'] == 'male', 'Sex']","ttest.ix[ttest['Sex'] == 'male', 'Sex']",0.000594363,0.002000753,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/scirpus/3-little-models,a_s.sum(),"np.sum(a_s,)",0.000229842,0.000554452,np.ndarray.sum,np.sum
https://www.kaggle.com/scirpus/genetic-programming-ii-lb-0-662,test.Product_Info_2.str[1:],test.Product_Info_2.map(lambda x: x[1:]),0.002598188,0.0026633309999999997,pd.Series.str,pd.Series.map
https://www.kaggle.com/scirpus/gp-lb-0-984930,"submission.loc[visibletest.outcome__grpdate == 0.0, 'outcome']","submission.ix[visibletest.outcome__grpdate == 0.0, 'outcome']",0.0054210000000000005,0.006510234,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/scirpus/gp-plus-santander-style-heuristics,"submission.loc[test.char_38.values < 40, 'outcome']","submission.ix[test.char_38.values < 40, 'outcome']",0.004533754,0.004575018,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/scirpus/naive-bayes-xgb,"traindata.loc[:, (col)]","traindata.ix[:, (col)]",2.22e-05,3.35e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/scirpus/ordinal-xgb-lb-46190,"train.loc[~train[col].isin(test[col]), col]","train.ix[~train[col].isin(test[col]), col]",0.00313636,0.004177098,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/scirpus/quick-genetic-programme,"blindtrain.loc[:, (col)]","blindtrain.ix[:, (col)]",3.9399999999999995e-05,5.11e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/sergioortiz/titanic-competition-script-1,"Xdf.loc[Xdf['Age'] <= 16, 'Age']","Xdf.ix[Xdf['Age'] <= 16, 'Age']",0.00032770699999999994,0.001533228,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/shabin/titanic-get-started,"np.column_stack((X_initial, train_df_as_dic[key]))","np.vstack((X_initial.T, train_df_as_dic[key].T)).T",9.91e-06,2.7899999999999997e-05,np.column_stack,np.vstack
https://www.kaggle.com/shankarpendse/titanicsurvivortraining,"unprocessedData.loc[:, ('Survived')]","unprocessedData.ix[:, ('Survived')]",2.3100000000000002e-05,3.24e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/shankarpendse/titanicsurvivortraining,np.where(hypothesis >= 0.5),np.nonzero(hypothesis >= 0.5),7.01e-06,7.2e-06,np.where,np.nonzero
https://www.kaggle.com/sharma72/titanic-survival-prediction,"df.loc[df.Fare.isnull() & (df.Pclass == f + 1), 'Fare']","df.ix[df.Fare.isnull() & (df.Pclass == f + 1), 'Fare']",0.0006994330000000001,0.001951876,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/shitalsawant/liner-svm-two-variables-py,"train_df.loc[:, (['Survived'])]","train_df.ix[:, (['Survived'])]",0.000480566,0.000500892,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/silpara/h2o-python-starter,"train_test.loc[(train_test.flag == -1), :]","train_test.ix[(train_test.flag == -1), :]",0.032218179,0.034291672,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/sinanalb/test-titanic,"dataset.loc[dataset['Age'] < 0, 'Age']","dataset.ix[dataset['Age'] < 0, 'Age']",0.000882992,0.004456119000000001,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/sjtreadway/titanic-prediction,"dataset.loc[(dataset['Age'] > 16) & (dataset['Age'] <= 26), 'Age']","dataset.ix[(dataset['Age'] > 16) & (dataset['Age'] <= 26), 'Age']",0.0007825639999999999,0.001942215,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/smartbao/item-recomm2,"y_train.loc[:, (i)]","y_train.ix[:, (i)]",8.170000000000001e-05,0.000103509,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/sodanuo/fork-dataquest,"dataset.loc[dataset['Sex'] == 'male', 'Sex']","dataset.ix[dataset['Sex'] == 'male', 'Sex']",0.001008126,0.004228524,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/soutou/new-model-lb-44-6,row[1:].nonzero(),np.where(row[1:]),0.000125358,0.00017234900000000003,np.nonzero,np.where
https://www.kaggle.com/srinisid/test1,"df_train.loc[df_train['Age'].isnull(), 'Age']","df_train.ix[df_train['Age'].isnull(), 'Age']",0.000402756,0.001693439,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/stacyayaka/cs145,"np.hstack((x_num_data, vec_x_cat_data))","np.concatenate((x_num_data, vec_x_cat_data), axis=1)",0.032626808,0.033587123999999996,np.hstack,np.concatenate
https://www.kaggle.com/steffenritter/test-kernel,"dataset.loc[dataset['FamilySize'] == 1, 'IsAlone']","dataset.ix[dataset['FamilySize'] == 1, 'IsAlone']",0.0011338680000000001,0.006916359,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/sturdydata/titanic-rf,"np.where(test.Embarked == 'Q', 1, 0)",(test.Embarked == 'Q').astype((test.Embarked == 'Q').dtype),0.000264485,0.000468149,np.where,np.ndarray.astype
https://www.kaggle.com/sudalairajkumar/rf-multilabel-framework-lb-0-022475,"np.hstack([test_X, temp_test_X])","np.append(test_X, temp_test_X, axis=1)",0.021342108999999998,0.022012525,np.hstack,np.append
https://www.kaggle.com/suryavan/knn-and-probability-lookup-script,"np.vstack((grid1, grid2, grid3, grid4))","np.column_stack((grid1.T, grid2.T, grid3.T, grid4.T)).T",9.76e-06,1.52e-05,np.vstack,np.column_stack
https://www.kaggle.com/swkim94/test77,"data_p.loc[data_p['Fare'].isnull(), 'Price']","data_p.ix[data_p['Fare'].isnull(), 'Price']",0.000225309,0.0014814720000000002,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/szczepanov/titanic-try-3,"df.loc[df.Age.isnull(), 'Age']","df.ix[df.Age.isnull(), 'Age']",0.000293436,0.001642595,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/szczepanov/titanic-try-3,"df_test['Sex'].map({'female': 0, 'male': 1})","pd.DataFrame(df_test['Sex']).replace({'female': 0, 'male': 1})",0.00036480599999999996,0.000762823,pd.Series.map,pd.DataFrame.replace
https://www.kaggle.com/techaware/quora-1,pd.Series(df_dup['question1'].tolist()).astype(str),pd.Series(df_dup['question1'].tolist()).apply(str),0.00017646,0.00030071599999999997,pd.Series.astype,pd.Series.apply
https://www.kaggle.com/tedspikes/titanic-test,"train.loc[:, ('Survived')]","train.ix[:, ('Survived')]",5.42e-05,6.790000000000001e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/thamagame/titanic-with-learning-curves,"trainCv_temp.ix[:, 'Pclass':]","trainCv_temp.loc[:, 'Pclass':]",0.000245023,0.000246353,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/thamagame/titanic-with-learning-curves,dataFrame['Ticket'].apply(MapTicket),dataFrame['Ticket'].map(MapTicket),0.000411762,0.000460415,pd.Series.apply,pd.Series.map
https://www.kaggle.com/thamagame/titanic-with-learning-curves,"dataFrame['Embarked'].map({'C': 0, 'S': 1, 'Q': 2})","pd.DataFrame(dataFrame['Embarked']).replace({'C': 0, 'S': 1, 'Q': 2})",0.00037587300000000004,0.0009511880000000001,pd.Series.map,pd.DataFrame.replace
https://www.kaggle.com/tilii7/ensemble-weights-minimization-vs-mcmc,np.array(answer),np.concatenate([answer]),3.01e-06,3.66e-06,np.array,np.concatenate
https://www.kaggle.com/timur008/newscript,"dataset.loc[dataset['Survived'] > 1, 'Survived']","dataset.ix[dataset['Survived'] > 1, 'Survived']",0.000368915,0.001540243,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/tobikaggle/stacked-then-averaged-models-0-5697,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.concatenate((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed), axis=1)",0.01573045,0.015844231,np.hstack,np.concatenate
https://www.kaggle.com/tommyttf/try-to-learn,"train.loc[:, ('label')]","train.ix[:, ('label')]",2.1899999999999997e-05,2.8899999999999998e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/tranquangan/my-first-experiment-with-kaggle,"np.where(full.Sex == 'male', 1, 0)",(full.Sex == 'male').astype((full.Sex == 'male').dtype),0.000258529,0.000477794,np.where,np.ndarray.astype
https://www.kaggle.com/tsetsenos/firstpyscript,"train.loc[train_type.isnull(), train_col]","train.ix[train_type.isnull(), train_col]",0.000661063,0.0031791109999999997,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/utsavpatel/titanic-test,"titanic.loc[titanic['Pclass'] == 3, 'Pclass']","titanic.ix[titanic['Pclass'] == 3, 'Pclass']",0.000320759,0.001447814,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/utsavpatel/titanic-test,"np.count_nonzero(titanic.loc[titanic['Pclass'] == 3, 'Pclass'].values)","np.sum(titanic.loc[titanic['Pclass'] == 3, 'Pclass'].values!=0)",0.00033565699999999995,0.00034584599999999997,np.count_nonzero,np.sum
https://www.kaggle.com/utsavpatel/titanic-test,np.where(titanic['Pclass'] == 1),np.nonzero(titanic['Pclass'] == 1),0.000246646,0.000358982,np.where,np.nonzero
https://www.kaggle.com/v81msk/test1,"df.loc[df['product_type'] == 'OwnerOccupier', 'a_pt']","df.ix[df['product_type'] == 'OwnerOccupier', 'a_pt']",0.001932484,0.003065569,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/valadi/mad-scripts-battle-z,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T",3.2500000000000004e-05,3.5e-05,np.column_stack,np.vstack
https://www.kaggle.com/vecxoz/test1,"test_df.loc[:, ('loss')]","test_df.ix[:, ('loss')]",2.13e-05,2.8499999999999998e-05,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/verdecal/epic-titanic-disaster,"np.where(full_data.Sex == 'male', 1, 0)",(full_data.Sex == 'male').astype((full_data.Sex == 'male').dtype),0.000232489,0.000469619,np.where,np.ndarray.astype
https://www.kaggle.com/vgerald/predict-claims-severity-v2,"train.ix[:, 'cat1':'cat116']","train.loc[:, 'cat1':'cat116']",0.002181068,0.002384102,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/vicbap/titanic,"df.loc[df.Age.isnull() & (df.Gender == i) & (df.Pclass == j + 1), 'Age']","df.ix[df.Age.isnull() & (df.Gender == i) & (df.Pclass == j + 1), 'Age']",0.00115707,0.002788686,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/violinbeats/knn-test-run,"test.loc[:99, ('row_id')]","test.ix[:99, ('row_id')]",0.000140898,0.000183567,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/vishreddy/predicting-cuisine,"data.loc[(data['TYPE-LABEL'] == 'TRAIN').tolist(), 'ingredients']","data.ix[(data['TYPE-LABEL'] == 'TRAIN').tolist(), 'ingredients']",0.005781982,0.011590352,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/wawanco/data-ownership-numeric-features,"train.loc[:, (train.dtypes == 'int64')]","train.ix[:, (train.dtypes == 'int64')]",0.094219564,0.09436004,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/willjashford/minst-willjashford,"train_df.loc[(train_df['label'] == digit), :]","train_df.ix[(train_df['label'] == digit), :]",0.003090339,0.0031033690000000004,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/wirehack/fdsfsdfdsfsdfsdf,"df.loc[df['Alley'].isnull(), 'Alley']","df.ix[df['Alley'].isnull(), 'Alley']",0.00032301,0.001693386,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/wirehack/fdsfsdfdsfsdfsdf,"np.zeros((X.shape[0], len(self.base_models)))","np.empty((X.shape[0], len(self.base_models))); r2[:]= 0",1.94e-06,2.28e-06,np.zeros,np.empty
https://www.kaggle.com/wrosinski/boosted-python-xgb-starter-0-0223532-lb,"np.hstack([train_X, temp_train_X])","np.append(train_X, temp_train_X, axis=1)",0.026077759,0.032504318,np.hstack,np.append
https://www.kaggle.com/xcz011/mercedez,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.append(np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed, axis=1)",0.034089853999999996,0.035989271,np.hstack,np.append
https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[0 == df.ps_calc_06, 'ps_calc_06']","df.ix[0 == df.ps_calc_06, 'ps_calc_06']",0.001056664,0.002177576,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,a_s.sum(),"np.count_nonzero(a_s,)",0.00018019900000000003,0.0007864460000000001,np.ndarray.sum,np.count_nonzero
https://www.kaggle.com/yangnanhai/testtest,"np.vstack((test_preds, test_preds, test['Response'].values))","np.column_stack((test_preds.T, test_preds.T, test['Response'].values.T)).T",4.6700000000000003e-05,5.19e-05,np.vstack,np.column_stack
https://www.kaggle.com/yashduvvuru/pytanic,"train.loc[train.FamilySize < 2, 'FamilyId']","train.ix[train.FamilySize < 2, 'FamilyId']",0.000347339,0.0015133929999999998,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/yaxelperez/logistic-regression-thing,"np.dot(X, theta)","np.einsum('ij,jm->im',X, theta)",2.44e-06,5.11e-06,np.dot,np.einsum
https://www.kaggle.com/yaxelperez/logistic-regression-thing,"np.zeros((X.shape[1], 1))","np.empty((X.shape[1], 1)); r2[:]= 0",8.459999999999999e-07,1.83e-06,np.zeros,np.empty
https://www.kaggle.com/yeewii/firstscratchinpy,"np.where(df_train['SibSp'] + df_train['Parch'] + 1 == 1, 1, 0)",(df_train['SibSp'] + df_train['Parch'] + 1 == 1).astype((df_train['SibSp'] + df_train['Parch'] + 1 == 1).dtype),0.000429544,0.000838749,np.where,np.ndarray.astype
https://www.kaggle.com/yeewii/firstscratchinpy,"np.where(df_train['SibSp'] + df_train['Parch'] + 1 == 1, 1, 0)",(df_train['SibSp'] + df_train['Parch'] + 1).map(lambda x : 1 if x == 1 else  0).values,0.00042861699999999995,0.0007709619999999999,np.where,pd.Series.map
https://www.kaggle.com/yekenot/toxic-regression,"np.zeros((test.shape[0], len(col)))","np.empty((test.shape[0], len(col))); r2[:]= 0",0.000105789,0.000422057,np.zeros,np.empty
https://www.kaggle.com/yhzjut/leyutestrun,"dataset['Sex'].map({'female': 1, 'male': 0})","pd.DataFrame(dataset['Sex']).replace({'female': 1, 'male': 0})",0.00038517,0.000825155,pd.Series.map,pd.DataFrame.replace
https://www.kaggle.com/yipcma/catboost-on-a-boat-with-useful-tricks,np.where(X.dtypes != np.float),np.nonzero(X.dtypes != np.float),0.000270798,0.000306227,np.where,np.nonzero
https://www.kaggle.com/ymatioun/hoh-only-scaled,np.zeros([len_train]),np.empty([len_train]); r2[:]= 0,1.85e-06,3.06e-06,np.zeros,np.empty
https://www.kaggle.com/youngseoklee/digit-recognizer-with-machine-learning,X.loc[size:size * 2],X.ix[size:size * 2],0.000146398,0.00015371,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/youngseoklee/house-price-prediction-with-numeric-only-dataset,"df_num.loc[:, (important_index)]","df_num.ix[:, (important_index)]",0.00046626800000000004,0.000668187,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/ypcfirst/titanic-model-using-logistic-regression,"train.loc[:, (['Pclass', 'Age', 'Sex', 'SibSp', 'Parch', 'Fare', 'Embarked'])]","train.ix[:, (['Pclass', 'Age', 'Sex', 'SibSp', 'Parch', 'Fare', 'Embarked'])]",0.000478484,0.000492131,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",0.000644319,0.000684422,pd.DataFrame.ix,pd.DataFrame.loc
https://www.kaggle.com/zeroblue/modified-grid-knn-17-alex2,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T",4.04e-05,4.1700000000000004e-05,np.column_stack,np.vstack
https://www.kaggle.com/zeroblue/modified-grid-knn-17-z,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T",4.5e-05,4.7799999999999996e-05,np.column_stack,np.vstack
https://www.kaggle.com/zeroblue/modified-grid-knn-17-z,np.vstack(preds_list),"np.concatenate(preds_list, axis=0)",0.17543619,0.194752416,np.vstack,np.concatenate
https://www.kaggle.com/zeroblue/xgb-boost-with-event-data,"df_phone.loc[df_phone['device_id'].isin(infrequent), 'phone_brand']","df_phone.ix[df_phone['device_id'].isin(infrequent), 'phone_brand']",0.025783902,0.026750097999999996,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/zfturbo/greedy-children-baseline-v2-0-7455,np.where(wish[child_id] == gift_id),np.nonzero(wish[child_id] == gift_id),2.34e-06,2.55e-06,np.where,np.nonzero
https://www.kaggle.com/zgo2016/titanic-logistic-regression,"train.loc[train['Sex'] == 0, 'Sex']","train.ix[train['Sex'] == 0, 'Sex']",0.000424955,0.001573212,pd.DataFrame.loc,pd.DataFrame.ix
https://www.kaggle.com/zgo2016/titanic-logistic-regression,X.dot(theta),"np.tensordot(X,theta,axes=1)",6.12e-05,8.35e-05,np.ndarray.dot,np.tensordot
https://www.kaggle.com/zusmani/baseline-optimal-mask,"np.array(train_masks, dtype=np.uint8)","np.fromiter(train_masks, dtype=np.uint8)",7.21e-07,1.14e-06,np.array,np.fromiter
https://www.kaggle.com/zygmunt/predict-sales-with-pandas-py,"test2.loc[test2.Open == 0, 'Sales']","test2.ix[test2.Open == 0, 'Sales']",0.001216525,0.0051549379999999995,pd.DataFrame.loc,pd.DataFrame.ix
