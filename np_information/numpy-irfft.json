{
    "overall": {
        "api_name": "irfft",
        "description": "Compute the inverse of the n-point DFT for real input."
    },
    "parameter": {
        "a": {
            "type": "array_like",
            "description": "The input array. "
        },
        "n": {
            "type": "int, optional",
            "description": "Length of the transformed axis of the output. For n output points, n//2+1 input points are necessary.  If the input is longer than this, it is cropped.  If it is shorter than this, it is padded with zeros.  If n is not given, it is taken to be 2*(m-1) where m is the length of the input along the axis specified by axis. "
        },
        "axis": {
            "type": "int, optional",
            "description": "Axis over which to compute the inverse FFT. If not given, the last axis is used. "
        },
        "norm": {
            "type": "{None, \u201cortho\u201d}, optional",
            "description": " New in version 1.10.0.  Normalization mode (see numpy.fft). Default is None. "
        }
    },
    "return": {
        "out": {
            "type": "ndarray",
            "description": "The truncated or zero-padded input, transformed along the axis indicated by axis, or the last one if axis is not specified. The length of the transformed axis is n, or, if n is not given, 2*(m-1) where m is the length of the transformed axis of the input. To get an odd number of output points, n must be specified. "
        }
    }
}