{
    "overall": {
        "api_name": "nanmin",
        "description": null
    },
    "parameter": {
        "a": {
            "type": "array_like",
            "description": "Array containing numbers whose minimum is desired. If a is not an array, a conversion is attempted. "
        },
        "axis": {
            "type": "{int, tuple of int, None}, optional",
            "description": "Axis or axes along which the minimum is computed. The default is to compute the minimum of the flattened array. "
        },
        "out": {
            "type": "ndarray, optional",
            "description": "Alternate output array in which to place the result.  The default is None; if provided, it must have the same shape as the expected output, but the type will be cast if necessary. See ufuncs-output-type for more details.  New in version 1.8.0.  "
        },
        "keepdims": {
            "type": "bool, optional",
            "description": "If this is set to True, the axes which are reduced are left in the result as dimensions with size one. With this option, the result will broadcast correctly against the original a. If the value is anything but the default, then keepdims will be passed through to the min method of sub-classes of ndarray.  If the sub-classes methods does not implement keepdims any exceptions will be raised.  New in version 1.8.0.  "
        }
    },
    "return": {
        "nanmin": {
            "type": "ndarray",
            "description": "An array with the same shape as a, with the specified axis removed.  If a is a 0-d array, or if axis is None, an ndarray scalar is returned.  The same dtype as a is returned. "
        }
    },
    "note": "NumPy uses the IEEE Standard for Binary Floating-Point for Arithmetic (IEEE 754). This means that Not a Number is not equivalent to infinity. Positive infinity is treated as a very large number and negative infinity is treated as a very small (i.e. negative) number. '"
}