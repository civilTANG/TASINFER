{
    "overall": {
        "api_name": "nanstd",
        "description": "Compute the standard deviation along the specified axis, while\nignoring NaNs."
    },
    "parameter": {
        "a": {
            "type": "array_like",
            "description": "Calculate the standard deviation of the non-NaN values. "
        },
        "axis": {
            "type": "{int, tuple of int, None}, optional",
            "description": "Axis or axes along which the standard deviation is computed. The default is to compute the standard deviation of the flattened array. "
        },
        "dtype": {
            "type": "dtype, optional",
            "description": "Type to use in computing the standard deviation. For arrays of integer type the default is float64, for arrays of float types it is the same as the array type. "
        },
        "out": {
            "type": "ndarray, optional",
            "description": "Alternative output array in which to place the result. It must have the same shape as the expected output but the type (of the calculated values) will be cast if necessary. "
        },
        "ddof": {
            "type": "int, optional",
            "description": "Means Delta Degrees of Freedom.  The divisor used in calculations is N - ddof, where N represents the number of non-NaN elements.  By default ddof is zero. "
        },
        "keepdims": {
            "type": "bool, optional",
            "description": "If this is set to True, the axes which are reduced are left in the result as dimensions with size one. With this option, the result will broadcast correctly against the original a. If this value is anything but the default it is passed through as-is to the relevant functions of the sub-classes.  If these functions do not have a keepdims kwarg, a RuntimeError will be raised. "
        }
    },
    "return": {
        "standard_deviation": {
            "type": "ndarray, see dtype parameter above.",
            "description": "If out is None, return a new array containing the standard deviation, otherwise return a reference to the output array. If ddof is &gt;= the number of non-NaN elements in a slice or the slice contains only NaNs, then the result for that slice is NaN. "
        }
    },
    "note": "For all-NaN slices or slices with zero degrees of freedom, NaN is returned and a RuntimeWarning is raised. '"
}