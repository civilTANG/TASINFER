{
    "overall": {
        "api_name": "rfftn",
        "description": "Compute the N-dimensional discrete Fourier Transform for real input."
    },
    "parameter": {
        "a": {
            "type": "array_like",
            "description": "Input array, taken to be real. "
        },
        "s": {
            "type": "sequence of ints, optional",
            "description": "Shape (length along each transformed axis) to use from the input. (s[0] refers to axis 0, s[1] to axis 1, etc.). The final element of s corresponds to n for rfft(x, n), while for the remaining axes, it corresponds to n for fft(x, n). Along any axis, if the given shape is smaller than that of the input, the input is cropped.  If it is larger, the input is padded with zeros. if s is not given, the shape of the input along the axes specified by axes is used. "
        },
        "axes": {
            "type": "sequence of ints, optional",
            "description": "Axes over which to compute the FFT.  If not given, the last len(s) axes are used, or all axes if s is also not specified. "
        },
        "norm": {
            "type": "{None, \u201cortho\u201d}, optional",
            "description": " New in version 1.10.0.  Normalization mode (see numpy.fft). Default is None. "
        }
    },
    "return": {
        "out": {
            "type": "complex ndarray",
            "description": "The truncated or zero-padded input, transformed along the axes indicated by axes, or by a combination of s and a, as explained in the parameters section above. The length of the last axis transformed will be s[-1]//2+1, while the remaining transformed axes will have lengths according to s, or unchanged from the input. "
        }
    }
}