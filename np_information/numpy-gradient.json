{
    "overall": {
        "api_name": "gradient",
        "description": "Return the gradient of an N-dimensional array."
    },
    "parameter": {
        "f": {
            "type": "array_like",
            "description": "An N-dimensional array containing samples of a scalar function. "
        },
        "varargs": {
            "type": "list of scalar or array, optional",
            "description": "Spacing between f values. Default unitary spacing for all dimensions. Spacing can be specified using:  single scalar to specify a sample distance for all dimensions. N scalars to specify a constant sample distance for each dimension. i.e. dx, dy, dz, \u2026 N arrays to specify the coordinates of the values along each dimension of F. The length of the array must match the size of the corresponding dimension Any combination of N scalars/arrays with the meaning of 2. and 3.  If axis is given, the number of varargs must equal the number of axes. Default: 1. "
        },
        "edge_order": {
            "type": "{1, 2}, optional",
            "description": "Gradient is calculated using N-th order accurate differences at the boundaries. Default: 1.  New in version 1.9.1.  "
        },
        "axis": {
            "type": "None or int or tuple of ints, optional",
            "description": "Gradient is calculated only along the given axis or axes The default (axis = None) is to calculate the gradient for all the axes of the input array. axis may be negative, in which case it counts from the last to the first axis.  New in version 1.11.0.  "
        }
    },
    "return": {
        "gradient": {
            "type": "ndarray or list of ndarray",
            "description": "A set of ndarrays (or a single ndarray if there is only one dimension) corresponding to the derivatives of f with respect to each dimension. Each derivative has the same shape as f. "
        }
    },
    "note": "Notes '"
}