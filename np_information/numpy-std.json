{
    "overall": {
        "api_name": "std",
        "description": "Compute the standard deviation along the specified axis."
    },
    "parameter": {
        "a": {
            "type": "array_like",
            "description": "Calculate the standard deviation of these values. "
        },
        "axis": {
            "type": "None or int or tuple of ints, optional",
            "description": "Axis or axes along which the standard deviation is computed. The default is to compute the standard deviation of the flattened array.  New in version 1.7.0.  If this is a tuple of ints, a standard deviation is performed over multiple axes, instead of a single axis or all the axes as before. "
        },
        "dtype": {
            "type": "dtype, optional",
            "description": "Type to use in computing the standard deviation. For arrays of integer type the default is float64, for arrays of float types it is the same as the array type. "
        },
        "out": {
            "type": "ndarray, optional",
            "description": "Alternative output array in which to place the result. It must have the same shape as the expected output but the type (of the calculated values) will be cast if necessary. "
        },
        "ddof": {
            "type": "int, optional",
            "description": "Means Delta Degrees of Freedom.  The divisor used in calculations is N - ddof, where N represents the number of elements. By default ddof is zero. "
        },
        "keepdims": {
            "type": "bool, optional",
            "description": "If this is set to True, the axes which are reduced are left in the result as dimensions with size one. With this option, the result will broadcast correctly against the input array. If the default value is passed, then keepdims will not be passed through to the std method of sub-classes of ndarray, however any non-default value will be.  If the sub-class\u2019 method does not implement keepdims any exceptions will be raised. "
        }
    },
    "return": {
        "standard_deviation": {
            "type": "ndarray, see dtype parameter above.",
            "description": "If out is None, return a new array containing the standard deviation, otherwise return a reference to the output array. "
        }
    },
    "note": "Notes '"
}