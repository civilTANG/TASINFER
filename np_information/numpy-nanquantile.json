{
    "overall": {
        "api_name": "nanquantile",
        "description": "Compute the qth quantile of the data along the specified axis,\nwhile ignoring nan values.\nReturns the qth quantile(s) of the array elements."
    },
    "parameter": {
        "a": {
            "type": "array_like",
            "description": "Input array or object that can be converted to an array, containing nan values to be ignored "
        },
        "q": {
            "type": "array_like of float",
            "description": "Quantile or sequence of quantiles to compute, which must be between 0 and 1 inclusive. "
        },
        "axis": {
            "type": "{int, tuple of int, None}, optional",
            "description": "Axis or axes along which the quantiles are computed. The default is to compute the quantile(s) along a flattened version of the array. "
        },
        "out": {
            "type": "ndarray, optional",
            "description": "Alternative output array in which to place the result. It must have the same shape and buffer length as the expected output, but the type (of the output) will be cast if necessary. "
        },
        "overwrite_input": {
            "type": "bool, optional",
            "description": "If True, then allow the input array a to be modified by intermediate calculations, to save memory. In this case, the contents of the input a after this function completes is undefined. "
        },
        "interpolation": {
            "type": "{\u2018linear\u2019, \u2018lower\u2019, \u2018higher\u2019, \u2018midpoint\u2019, \u2018nearest\u2019}",
            "description": "This optional parameter specifies the interpolation method to use when the desired quantile lies between two data points i &lt; j:  linear: i + (j - i) * fraction, where fraction is the fractional part of the index surrounded by i and j. lower: i. higher: j. nearest: i or j, whichever is nearest. midpoint: (i + j) / 2.  "
        },
        "keepdims": {
            "type": "bool, optional",
            "description": "If this is set to True, the axes which are reduced are left in the result as dimensions with size one. With this option, the result will broadcast correctly against the original array a. If this is anything but the default value it will be passed through (in the special case of an empty array) to the mean function of the underlying array.  If the array is a sub-class and mean does not have the kwarg keepdims this will raise a RuntimeError. "
        }
    },
    "return": {
        "quantile": {
            "type": "scalar or ndarray",
            "description": "If q is a single percentile and axis=None, then the result is a scalar. If multiple quantiles are given, first axis of the result corresponds to the quantiles. The other axes are the axes that remain after the reduction of a. If the input contains integers or floats smaller than float64, the output data-type is float64. Otherwise, the output data-type is the same as that of the input. If out is specified, that array is returned instead. "
        }
    }
}