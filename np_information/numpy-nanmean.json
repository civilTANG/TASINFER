{
    "overall": {
        "api_name": "nanmean",
        "description": "Compute the arithmetic mean along the specified axis, ignoring NaNs."
    },
    "parameter": {
        "a": {
            "type": "array_like",
            "description": "Array containing numbers whose mean is desired. If a is not an array, a conversion is attempted. "
        },
        "axis": {
            "type": "{int, tuple of int, None}, optional",
            "description": "Axis or axes along which the means are computed. The default is to compute the mean of the flattened array. "
        },
        "dtype": {
            "type": "data-type, optional",
            "description": "Type to use in computing the mean.  For integer inputs, the default is float64; for inexact inputs, it is the same as the input dtype. "
        },
        "out": {
            "type": "ndarray, optional",
            "description": "Alternate output array in which to place the result.  The default is None; if provided, it must have the same shape as the expected output, but the type will be cast if necessary. See ufuncs-output-type for more details. "
        },
        "keepdims": {
            "type": "bool, optional",
            "description": "If this is set to True, the axes which are reduced are left in the result as dimensions with size one. With this option, the result will broadcast correctly against the original a. If the value is anything but the default, then keepdims will be passed through to the mean or sum methods of sub-classes of ndarray.  If the sub-classes methods does not implement keepdims any exceptions will be raised. "
        }
    },
    "return": {
        "m": {
            "type": "ndarray, see dtype parameter above",
            "description": "If out=None, returns a new array containing the mean values, otherwise a reference to the output array is returned. Nan is returned for slices that contain only NaNs. "
        }
    },
    "note": "For all-NaN slices, NaN is returned and a RuntimeWarning is raised. '"
}