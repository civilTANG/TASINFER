{
    "overall": {
        "api_name": "prod",
        "description": "Return the product of array elements over a given axis."
    },
    "parameter": {
        "a": {
            "type": "array_like",
            "description": "Input data. "
        },
        "axis": {
            "type": "None or int or tuple of ints, optional",
            "description": "Axis or axes along which a product is performed.  The default, axis=None, will calculate the product of all the elements in the input array. If axis is negative it counts from the last to the first axis.  New in version 1.7.0.  If axis is a tuple of ints, a product is performed on all of the axes specified in the tuple instead of a single axis or all the axes as before. "
        },
        "dtype": {
            "type": "dtype, optional",
            "description": "The type of the returned array, as well as of the accumulator in which the elements are multiplied.  The dtype of a is used by default unless a has an integer dtype of less precision than the default platform integer.  In that case, if a is signed then the platform integer is used while if a is unsigned then an unsigned integer of the same precision as the platform integer is used. "
        },
        "out": {
            "type": "ndarray, optional",
            "description": "Alternative output array in which to place the result. It must have the same shape as the expected output, but the type of the output values will be cast if necessary. "
        },
        "keepdims": {
            "type": "bool, optional",
            "description": "If this is set to True, the axes which are reduced are left in the result as dimensions with size one. With this option, the result will broadcast correctly against the input array. If the default value is passed, then keepdims will not be passed through to the prod method of sub-classes of ndarray, however any non-default value will be.  If the sub-class\u2019 method does not implement keepdims any exceptions will be raised. "
        },
        "initial": {
            "type": "scalar, optional",
            "description": "The starting value for this product. See reduce for details.  New in version 1.15.0.  "
        },
        "where": {
            "type": "array_like of bool, optional",
            "description": "Elements to include in the product. See reduce for details.  New in version 1.17.0.  "
        }
    },
    "return": {
        "product_along_axis": {
            "type": null,
            "description": "An array shaped as a but with the specified axis removed. Returns a reference to out if specified. "
        }
    },
    "note": "Arithmetic is modular when using integer types, and no error is raised on overflow.  That means that, on a 32-bit platform: '"
}