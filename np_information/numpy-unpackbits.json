{
    "overall": {
        "api_name": "unpackbits",
        "description": "Unpacks elements of a uint8 array into a binary-valued output array."
    },
    "parameter": {
        "a": {
            "type": "ndarray, uint8 type",
            "description": "Input array. "
        },
        "axis": {
            "type": "int, optional",
            "description": "The dimension over which bit-unpacking is done. None implies unpacking the flattened array. "
        },
        "count": {
            "type": "int or None, optional",
            "description": "The number of elements to unpack along axis, provided as a way of undoing the effect of packing a size that is not a multiple of eight. A non-negative number means to only unpack count bits. A negative number means to trim off that many bits from the end. None means to unpack the entire array (the default). Counts larger than the available number of bits will add zero padding to the output. Negative counts must not exceed the available number of bits.  New in version 1.17.0.  "
        },
        "bitorder": {
            "type": "{\u2018big\u2019, \u2018little\u2019}, optional",
            "description": "The order of the returned bits. \u2018big\u2019 will mimic bin(val), 3 = 0b00000011 =&gt; [0, 0, 0, 0, 0, 0, 1, 1], \u2018little\u2019 will reverse the order to [1, 1, 0, 0, 0, 0, 0, 0]. Defaults to \u2018big\u2019.  New in version 1.17.0.  "
        }
    },
    "return": {
        "unpacked": {
            "type": "ndarray, uint8 type",
            "description": "The elements are binary-valued (0 or 1). "
        }
    },
    "note": "Examples '"
}