{
    "overall": {
        "api_name": "nanmedian",
        "description": "Compute the median along the specified axis, while ignoring NaNs."
    },
    "parameter": {
        "a": {
            "type": "array_like",
            "description": "Input array or object that can be converted to an array. "
        },
        "axis": {
            "type": "{int, sequence of int, None}, optional",
            "description": "Axis or axes along which the medians are computed. The default is to compute the median along a flattened version of the array. A sequence of axes is supported since version 1.9.0. "
        },
        "out": {
            "type": "ndarray, optional",
            "description": "Alternative output array in which to place the result. It must have the same shape and buffer length as the expected output, but the type (of the output) will be cast if necessary. "
        },
        "overwrite_input": {
            "type": "bool, optional",
            "description": "If True, then allow use of memory of input array a for calculations. The input array will be modified by the call to median. This will save memory when you do not need to preserve the contents of the input array. Treat the input as undefined, but it will probably be fully or partially sorted. Default is False. If overwrite_input is True and a is not already an ndarray, an error will be raised. "
        },
        "keepdims": {
            "type": "bool, optional",
            "description": "If this is set to True, the axes which are reduced are left in the result as dimensions with size one. With this option, the result will broadcast correctly against the original a. If this is anything but the default value it will be passed through (in the special case of an empty array) to the mean function of the underlying array.  If the array is a sub-class and mean does not have the kwarg keepdims this will raise a RuntimeError. "
        }
    },
    "return": {
        "median": {
            "type": "ndarray",
            "description": "A new array holding the result. If the input contains integers or floats smaller than float64, then the output data-type is np.float64.  Otherwise, the data-type of the output is the same as that of the input. If out is specified, that array is returned instead. "
        }
    },
    "note": "Notes '"
}