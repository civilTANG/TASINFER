1,airbnb-recruiting-new-user-bookings,https://www.kaggle.com/etherqua/airbnbdemo,df_all.date_account_created.astype(str),df_all.date_account_created.apply(str),pd.Series.astype,pd.Series.apply
0,allstate-claims-severity,https://www.kaggle.com/mmueller/categorical-embedding-with-xgb,np.array(list(zip(*sorted(val.items())))),np.concatenate([list(zip(*sorted(val.items())))]),np.array,np.concatenate
0,allstate-claims-severity,https://www.kaggle.com/nightshade7/allstatetest,"np.hstack((catData.T, df[cols[117:nFeat - 1]].as_matrix()))","np.append(catData.T, df[cols[117:nFeat - 1]].as_matrix(), axis=1)",np.hstack,np.append
0,allstate-claims-severity,https://www.kaggle.com/scirpus/quick-genetic-programme,"test.loc[:, (col)]","test.ix[:, (col)]",pd.DataFrame.loc,pd.DataFrame.ix
0,allstate-claims-severity,https://www.kaggle.com/silpara/h2o-python-starter,"train_test.loc[(train_test.flag == 1), :]","train_test.ix[(train_test.flag == 1), :]",pd.DataFrame.loc,pd.DataFrame.ix
0,allstate-claims-severity,https://www.kaggle.com/vgerald/predict-claims-severity-v2,"train.ix[:, 'cat1':'cat116']","train.loc[:, 'cat1':'cat116']",pd.DataFrame.ix,pd.DataFrame.loc
0,allstate-claims-severity,https://www.kaggle.com/vgerald/predict-claims-severity-v2,"test.ix[:, 'cont1':'cont14']","test.loc[:, 'cont1':'cont14']",pd.DataFrame.ix,pd.DataFrame.loc
0,allstate-claims-severity,https://www.kaggle.com/vgerald/predict-claims-severity-v2,"test.ix[:, 'cont1':'cont14']","test.loc[:, 'cont1':'cont14']",pd.DataFrame.ix,pd.DataFrame.loc
1,allstate-claims-severity,https://www.kaggle.com/nightshade7/allstatetest,"np.hstack((catData.T, df[cols[117:nFeat - 1]].as_matrix()))","np.concatenate((catData.T, df[cols[117:nFeat - 1]].as_matrix()), axis=1)",np.hstack,np.concatenate
1,allstate-claims-severity,https://www.kaggle.com/nightshade7/allstatetest,"np.vstack((catData, temp))","np.column_stack((catData.T, temp.T)).T",np.vstack,np.column_stack
1,allstate-claims-severity,https://www.kaggle.com/scirpus/naive-bayes-xgb,"traindata.loc[:, (col)]","traindata.ix[:, (col)]",pd.DataFrame.loc,pd.DataFrame.ix
1,allstate-claims-severity,https://www.kaggle.com/scirpus/quick-genetic-programme,"blindtrain.loc[:, (col)]","blindtrain.ix[:, (col)]",pd.DataFrame.loc,pd.DataFrame.ix
1,allstate-claims-severity,https://www.kaggle.com/silpara/h2o-python-starter,"train_test.loc[(train_test.flag == -1), :]","train_test.ix[(train_test.flag == -1), :]",pd.DataFrame.loc,pd.DataFrame.ix
1,allstate-claims-severity,https://www.kaggle.com/tilii7/ensemble-weights-minimization-vs-mcmc,np.array(answer),np.concatenate([answer]),np.array,np.concatenate
1,allstate-claims-severity,https://www.kaggle.com/vecxoz/test1,"test_df.loc[:, ('loss')]","test_df.ix[:, ('loss')]",pd.DataFrame.loc,pd.DataFrame.ix
0,allstate-claims-severity,https://www.kaggle.com/vgerald/predict-claims-severity-v2,"train.ix[:, 'cat1':'cat116']","train.loc[:, 'cat1':'cat116']",pd.DataFrame.ix,pd.DataFrame.loc
0,bnp-paribas-cardif-claims-management,https://www.kaggle.com/anilcs/et-classifier,df[columnName].map(lambda y: 1 if y == x else 0),"np.where( df[columnName] == x , 1 ,0)",pd.Series.map,np.where
0,bnp-paribas-cardif-claims-management,https://www.kaggle.com/scirpus/benouilli-naive-bayes,df[columnName].map(lambda y: 1 if y == x else 0),"np.where( df[columnName] == x , 1 ,0)",pd.Series.map,np.where
1,bnp-paribas-cardif-claims-management,https://www.kaggle.com/anilcs/ectra-with-new-features,"train.loc[train[c].round(5) == 0, c]","train.ix[train[c].round(5) == 0, c]",pd.DataFrame.loc,pd.DataFrame.ix
1,bnp-paribas-cardif-claims-management,https://www.kaggle.com/anilkumarkuppa/extratreesclassifier-score-0-45911,"train.loc[train_series.isnull(), train_name]","train.ix[train_series.isnull(), train_name]",pd.DataFrame.loc,pd.DataFrame.ix
1,bnp-paribas-cardif-claims-management,https://www.kaggle.com/bguberfain/v22-classifier,"train.loc[~train[c].isin(cboth), c]","train.ix[~train[c].isin(cboth), c]",pd.DataFrame.loc,pd.DataFrame.ix
1,bnp-paribas-cardif-claims-management,https://www.kaggle.com/happycube/simple-cv-example-one-feature-near-rf,"all_data.loc[all_data[key] != na, key]","all_data.ix[all_data[key] != na, key]",pd.DataFrame.loc,pd.DataFrame.ix
1,bnp-paribas-cardif-claims-management,https://www.kaggle.com/happycube/simple-cv-example-one-feature-near-rf,"np.full(len(train_bag), 0, dtype=np.float32)","np.zeros(len(train_bag), dtype=np.float32)",np.full,np.zeros
1,bnp-paribas-cardif-claims-management,https://www.kaggle.com/scirpus/ordinal-xgb-lb-46190,"train.loc[~train[col].isin(test[col]), col]","train.ix[~train[col].isin(test[col]), col]",pd.DataFrame.loc,pd.DataFrame.ix
1,bnp-paribas-cardif-claims-management,https://www.kaggle.com/tsetsenos/firstpyscript,"train.loc[train_type.isnull(), train_col]","train.ix[train_type.isnull(), train_col]",pd.DataFrame.loc,pd.DataFrame.ix
0,bosch-production-line-performance,https://www.kaggle.com/cesarboucas/oneclasssvm,np.ones(X_outliers.shape[0]),np.empty(X_outliers.shape[0]); r2.fill(1),np.ones,np.empty
0,bosch-production-line-performance,https://www.kaggle.com/nkdxczh/test-py,np.where(clf.feature_importances_ > 0),np.nonzero(clf.feature_importances_ > 0),np.where,np.nonzero
1,bosch-production-line-performance,https://www.kaggle.com/alexxanderlarko/road-2-0-4-featureset,"train.loc[train.Id.isin(tr.Id), 'StartTime']","train.ix[train.Id.isin(tr.Id), 'StartTime']",pd.DataFrame.loc,pd.DataFrame.ix
1,bosch-production-line-performance,https://www.kaggle.com/happycube/scirpus-extreme-bayes-faron-36312,"blindtraindata.loc[:, (col)]","blindtraindata.ix[:, (col)]",pd.DataFrame.loc,pd.DataFrame.ix
1,carvana-image-masking-challenge,https://www.kaggle.com/paulorzp/run-length-encode-and-decode,np.where(pixels[1:] != pixels[:-1]),np.nonzero(pixels[1:] != pixels[:-1]),np.where,np.nonzero
1,carvana-image-masking-challenge,https://www.kaggle.com/zusmani/baseline-optimal-mask,"np.array(train_masks, dtype=np.uint8)","np.fromiter(train_masks, dtype=np.uint8)",np.array,np.fromiter
0,caterpillar-tube-pricing,https://www.kaggle.com/marbel/keras-dummy-vars,np.array(train_values),np.concatenate([train_values]),np.array,np.concatenate
0,caterpillar-tube-pricing,https://www.kaggle.com/yifanxie/training-set-split-for-cross-validation,np.sum((np.log1p(tr_preds) - np.log1p(tr_test_y)) ** 2),((np.log1p(tr_preds) - np.log1p(tr_test_y)) ** 2).sum(),np.sum,np.ndarray.sum
1,caterpillar-tube-pricing,https://www.kaggle.com/ghozlan/traincsv-numonly-py,np.where(predicted < 0),np.nonzero(predicted < 0),np.where,np.nonzero
1,costa-rican-household-poverty-prediction,https://www.kaggle.com/aleiken/beginner-xgboost,df_train['Target'].replace(mapping),df_train['Target'].map(mapping),pd.Series.replace,pd.Series.map
1,costa-rican-household-poverty-prediction,https://www.kaggle.com/ymatioun/hoh-only-scaled,np.zeros([len_train]),np.empty([len_train]); r2[:]= 0,np.zeros,np.empty
1,coupon-purchase-prediction,https://www.kaggle.com/mkurnikov/modified-cos-similarity-python-edition,"np.dot(user_profiles, W)","np.einsum('ij,jm->im',user_profiles, W)",np.dot,np.einsum
0,crowdflower-search-relevance,https://www.kaggle.com/dlyzer/k-nearest-neighbors,"np.hstack([Z_train, X_pt_q_train])","np.append(Z_train, X_pt_q_train, axis=1)",np.hstack,np.append
0,crowdflower-search-relevance,https://www.kaggle.com/dlyzer/k-nearest-neighbors,"np.hstack([Z_test, X_pt_q_test])","np.append(Z_test, X_pt_q_test, axis=1)",np.hstack,np.append
0,crowdflower-search-relevance,https://www.kaggle.com/dlyzer/k-nearest-neighbors,"np.hstack([Z_train, X_pt_q_train])","np.concatenate([Z_train, X_pt_q_train], axis=1)",np.hstack,np.concatenate
0,crowdflower-search-relevance,https://www.kaggle.com/dlyzer/k-nearest-neighbors,"np.hstack([Z_test, X_pt_q_test])","np.concatenate([Z_test, X_pt_q_test], axis=1)",np.hstack,np.concatenate
0,crowdflower-search-relevance,https://www.kaggle.com/lancerts/combined,np.where(queries[10158:] == q),np.nonzero(queries[10158:] == q),np.where,np.nonzero
1,crowdflower-search-relevance,https://www.kaggle.com/gshguru/beating-the-benchmark-0-57,"np.array(rater_a, dtype=int)","np.fromiter(rater_a, dtype=int)",np.array,np.fromiter
1,crowdflower-search-relevance,https://www.kaggle.com/lancerts/combined,np.where(queries[:10158] == q),np.nonzero(queries[:10158] == q),np.where,np.nonzero
0,digit-recognizer,https://www.kaggle.com/aawadall/deep-neural-net,np.array(train_raw['label']),np.concatenate([train_raw['label']]),np.array,np.concatenate
0,digit-recognizer,https://www.kaggle.com/aawadall/deep-neural-net,"np.sum(t, axis=0)",(t).sum( axis=0),np.sum,np.ndarray.sum
0,digit-recognizer,https://www.kaggle.com/aawadall/deep-neural-net,np.sum(logprobs),(logprobs).sum(),np.sum,np.ndarray.sum
0,digit-recognizer,https://www.kaggle.com/ceyarzam/sssss,"train.ix[:, 1:]","train.iloc[:, 1:]",pd.DataFrame.ix,pd.DataFrame.iloc
0,digit-recognizer,https://www.kaggle.com/ceyarzam/sssss,"train.ix[:, (0)]","train.iloc[:, (0)]",pd.DataFrame.ix,pd.DataFrame.iloc
0,digit-recognizer,https://www.kaggle.com/chenhagn/test-1,"train.ix[:, (0)]","train.iloc[:, (0)]",pd.DataFrame.ix,pd.DataFrame.iloc
0,digit-recognizer,https://www.kaggle.com/drasko/1st-python-try-1,"np.c_[xx.ravel(), yy.ravel()]","np.hstack([xx.ravel().reshape(len(xx.ravel()),1), yy.ravel().reshape(len(xx.ravel()),1)])",np.c_,np.hstack
0,digit-recognizer,https://www.kaggle.com/gravity/testing-1,"train.ix[:, (0)]","train.iloc[:, (0)]",pd.DataFrame.ix,pd.DataFrame.iloc
0,digit-recognizer,https://www.kaggle.com/harshitsaini/clean-character-image,"binary_image.loc[:, (isValid)]","binary_image.ix[:, (isValid)]",pd.DataFrame.loc,pd.DataFrame.ix
0,digit-recognizer,https://www.kaggle.com/harshitsaini/kmeans-kernel,"X.loc[:, (isValid)]","X.ix[:, (isValid)]",pd.DataFrame.loc,pd.DataFrame.ix
0,digit-recognizer,https://www.kaggle.com/heibankeli/pca-knn,"train.ix[:, (0)]","train.iloc[:, (0)]",pd.DataFrame.ix,pd.DataFrame.iloc
0,digit-recognizer,https://www.kaggle.com/heibankeli/pca-svm1,"train.ix[:, (0)]","train.iloc[:, (0)]",pd.DataFrame.ix,pd.DataFrame.iloc
0,digit-recognizer,https://www.kaggle.com/hideki1234/neural-network,"np.hstack((np.zeros((Theta2.shape[0], 1)), Theta2[:, 1:]))","np.append(np.zeros((Theta2.shape[0], 1)), Theta2[:, 1:], axis=1)",np.hstack,np.append
0,digit-recognizer,https://www.kaggle.com/hideki1234/neural-network,"np.hstack((np.zeros((Theta1.shape[0], 1)), Theta1[:, 1:]))","np.append(np.zeros((Theta1.shape[0], 1)), Theta1[:, 1:], axis=1)",np.hstack,np.append
0,digit-recognizer,https://www.kaggle.com/hideki1234/neural-network,"np.hstack((np.zeros((Theta2.shape[0], 1)), Theta2[:, 1:]))","np.concatenate((np.zeros((Theta2.shape[0], 1)), Theta2[:, 1:]), axis=1)",np.hstack,np.concatenate
0,digit-recognizer,https://www.kaggle.com/hideki1234/neural-network,"np.hstack((np.zeros((Theta1.shape[0], 1)), Theta1[:, 1:]))","np.concatenate((np.zeros((Theta1.shape[0], 1)), Theta1[:, 1:]), axis=1)",np.hstack,np.concatenate
0,digit-recognizer,https://www.kaggle.com/hideki1234/neural-network,Theta1.dot(Xt),"np.tensordot(Theta1,Xt,axes=1)",np.ndarray.dot,np.tensordot
0,digit-recognizer,https://www.kaggle.com/hideki1234/neural-network,Delta3.dot(A2.T),"np.tensordot(Delta3,A2.T,axes=1)",np.ndarray.dot,np.tensordot
0,digit-recognizer,https://www.kaggle.com/hideki1234/neural-network,Delta2.dot(Xt.T),"np.tensordot(Delta2,Xt.T,axes=1)",np.ndarray.dot,np.tensordot
0,digit-recognizer,https://www.kaggle.com/hideki1234/neural-network,np.ones(m),np.empty(m); r2.fill(1),np.ones,np.empty
0,digit-recognizer,https://www.kaggle.com/hideki1234/neural-network,"np.vstack((a_0, X.T))","np.column_stack((a_0.T, X.T.T)).T",np.vstack,np.column_stack
0,digit-recognizer,https://www.kaggle.com/iangarland/mnist,"train.ix[:, (0)]","train.iloc[:, (0)]",pd.DataFrame.ix,pd.DataFrame.iloc
0,digit-recognizer,https://www.kaggle.com/isaac7/visualize-mnist,"train.ix[:, 1:]","train.iloc[:, 1:]",pd.DataFrame.ix,pd.DataFrame.iloc
0,digit-recognizer,https://www.kaggle.com/isaac7/visualize-mnist,"train.ix[:, (0)]","train.iloc[:, (0)]",pd.DataFrame.ix,pd.DataFrame.iloc
0,digit-recognizer,https://www.kaggle.com/moichiaaron/numpynist-py,theta2.dot(a2),"np.tensordot(theta2,a2,axes=1)",np.ndarray.dot,np.tensordot
0,digit-recognizer,https://www.kaggle.com/moichiaaron/numpynist-py,theta1.dot(a1.T),"np.tensordot(theta1,a1.T,axes=1)",np.ndarray.dot,np.tensordot
0,digit-recognizer,https://www.kaggle.com/moichiaaron/numpynist-py,s2.dot(a1),"np.tensordot(s2,a1,axes=1)",np.ndarray.dot,np.tensordot
0,digit-recognizer,https://www.kaggle.com/moichiaaron/numpynist-py,"np.ones((np.size(y), nlabels))","np.empty((np.size(y), nlabels)); r2.fill(1)",np.ones,np.empty
0,digit-recognizer,https://www.kaggle.com/mshankarrao/svmpca-0-8-rbf,"train.ix[:, (0)]","train.iloc[:, (0)]",pd.DataFrame.ix,pd.DataFrame.iloc
0,digit-recognizer,https://www.kaggle.com/muthu4all/recognize-the-number,np.array(train),np.concatenate([train]),np.array,np.concatenate
0,digit-recognizer,https://www.kaggle.com/nagadomi/nearest-neighbor-search,"train_x.ix[:, (0)]","train_x.iloc[:, (0)]",pd.DataFrame.ix,pd.DataFrame.iloc
0,digit-recognizer,https://www.kaggle.com/netguyhyun/netguytest,np.nonzero([(i == y) for i in y_train]),np.where([(i == y) for i in y_train]),np.nonzero,np.where
0,digit-recognizer,https://www.kaggle.com/newhardwarefound/artificial-neural-network,"np.dot(w, activation)","np.einsum('ij,jm->im',w, activation)",np.dot,np.einsum
0,digit-recognizer,https://www.kaggle.com/poslegm/pca-svm-97-8-accuracy,"train.ix[:, 'label':'label']","train.loc[:, 'label':'label']",pd.DataFrame.ix,pd.DataFrame.loc
0,digit-recognizer,https://www.kaggle.com/prototype96/mytest6,"data_file.ix[:, 1:]","data_file.iloc[:, 1:]",pd.DataFrame.ix,pd.DataFrame.iloc
0,digit-recognizer,https://www.kaggle.com/seandot7/mnist-test,"train.ix[:, 1:]","train.iloc[:, 1:]",pd.DataFrame.ix,pd.DataFrame.iloc
0,digit-recognizer,https://www.kaggle.com/tommyttf/try-to-learn,"train.loc[:, 'pixel0':]","train.ix[:, 'pixel0':]",pd.DataFrame.loc,pd.DataFrame.ix
0,digit-recognizer,https://www.kaggle.com/tommyttf/try-to-learn,"test.loc[:, 'pixel0':]","test.ix[:, 'pixel0':]",pd.DataFrame.loc,pd.DataFrame.ix
0,digit-recognizer,https://www.kaggle.com/tunguz/pca-svm1,"train.ix[:, (0)]","train.iloc[:, (0)]",pd.DataFrame.ix,pd.DataFrame.iloc
0,digit-recognizer,https://www.kaggle.com/willjashford/minst-willjashford,"verify_df.loc[row, 'label']","verify_df.at[row, 'label']",pd.DataFrame.loc,pd.DataFrame.at
0,digit-recognizer,https://www.kaggle.com/willjashford/minst-willjashford,"verify_df.loc[row, 'label']","verify_df.at[row, 'label']",pd.DataFrame.loc,pd.DataFrame.at
0,digit-recognizer,https://www.kaggle.com/willjashford/minst-willjashford,"verify_df.loc[row, 'label']","verify_df.at[row, 'label']",pd.DataFrame.loc,pd.DataFrame.at
0,digit-recognizer,https://www.kaggle.com/willjashford/minst-willjashford,"verify_df.loc[row, 'label']","verify_df.at[row, 'label']",pd.DataFrame.loc,pd.DataFrame.at
0,digit-recognizer,https://www.kaggle.com/wonjohnchoi/pca-svm,"train.ix[:, 1:]","train.iloc[:, 1:]",pd.DataFrame.ix,pd.DataFrame.iloc
0,digit-recognizer,https://www.kaggle.com/wonjohnchoi/pca-svm,"train.ix[:, (0)]","train.iloc[:, (0)]",pd.DataFrame.ix,pd.DataFrame.iloc
0,digit-recognizer,https://www.kaggle.com/wonjohnchoi/pca-svm,"test.ix[:, :]","test.loc[:, :]",pd.DataFrame.ix,pd.DataFrame.loc
0,digit-recognizer,https://www.kaggle.com/ybping/digits-recognizer,"train_data.ix[:, 1:]","train_data.iloc[:, 1:]",pd.DataFrame.ix,pd.DataFrame.iloc
0,digit-recognizer,https://www.kaggle.com/youngseoklee/digit-recognizer-with-machine-learning,X.loc[:size],X.ix[:size],pd.DataFrame.loc,pd.DataFrame.ix
0,digit-recognizer,https://www.kaggle.com/youngseoklee/digit-recognizer-with-machine-learning,y.loc[:size],y.ix[:size],pd.DataFrame.loc,pd.DataFrame.ix
1,digit-recognizer,https://www.kaggle.com/aawadall/deep-neural-net,np.sum((y_hat == y_star) * y_star * 1),np.count_nonzero((y_hat == y_star) * y_star * 1),np.sum,np.count_nonzero
1,digit-recognizer,https://www.kaggle.com/aawadall/deep-neural-net,"np.sum(t, axis=0)","np.einsum('ij->j',t)",np.sum,np.einsum
1,digit-recognizer,https://www.kaggle.com/bruceokallau/simple-knn-model-93-accurate,np.where(pred_valid != y_weight),np.nonzero(pred_valid != y_weight),np.where,np.nonzero
1,digit-recognizer,https://www.kaggle.com/filatenkova/digit-read,np.transpose(train.as_matrix()),np.column_stack(train.as_matrix()),np.transpose,np.column_stack
1,digit-recognizer,https://www.kaggle.com/hideki1234/neural-network,Theta2.dot(A2),"np.tensordot(Theta2,A2,axes=1)",np.ndarray.dot,np.tensordot
1,digit-recognizer,https://www.kaggle.com/jbuchner/random-forest-97-7-stroke-features-gaps-knots,"data.loc[:, 'pixel0':'pixel783']","data.ix[:, 'pixel0':'pixel783']",pd.DataFrame.loc,pd.DataFrame.ix
1,digit-recognizer,https://www.kaggle.com/jbuchner/random-forest-97-7-stroke-features-gaps-knots,numpy.where(mask),numpy.nonzero(mask),np.where,np.nonzero
1,digit-recognizer,https://www.kaggle.com/moichiaaron/numpynist-py,theta2.T.dot(s3),"np.tensordot(theta2.T,s3,axes=1)",np.ndarray.dot,np.tensordot
1,digit-recognizer,https://www.kaggle.com/mrisdal/starter-kernel-python-script-1,"np.array(row[1:], dtype=np.uint8)","np.fromiter(row[1:], dtype=np.uint8)",np.array,np.fromiter
1,digit-recognizer,https://www.kaggle.com/nagadomi/nearest-neighbor-search,np.transpose(train_x),np.column_stack(train_x),np.transpose,np.column_stack
1,digit-recognizer,https://www.kaggle.com/newhardwarefound/artificial-neural-network,"np.dot(delta, activations[-2].transpose())","np.einsum('ij,jm->im',delta, activations[-2].transpose())",np.dot,np.einsum
1,digit-recognizer,https://www.kaggle.com/tommyttf/try-to-learn,"train.loc[:, ('label')]","train.ix[:, ('label')]",pd.DataFrame.loc,pd.DataFrame.ix
1,digit-recognizer,https://www.kaggle.com/willjashford/minst-willjashford,"train_df.loc[(train_df['label'] == digit), :]","train_df.ix[(train_df['label'] == digit), :]",pd.DataFrame.loc,pd.DataFrame.ix
1,digit-recognizer,https://www.kaggle.com/youngseoklee/digit-recognizer-with-machine-learning,X.loc[size:size * 2],X.ix[size:size * 2],pd.DataFrame.loc,pd.DataFrame.ix
0,expedia-hotel-recommendations,https://www.kaggle.com/niladri18/usinng-logistic-regression,"df.ix[:, ('srch_adults_cnt')]","df.loc[:, ('srch_adults_cnt')]",pd.DataFrame.ix,pd.DataFrame.loc
0,expedia-hotel-recommendations,https://www.kaggle.com/niladri18/usinng-logistic-regression,"df.ix[:, ('srch_destination_id')]","df.loc[:, ('srch_destination_id')]",pd.DataFrame.ix,pd.DataFrame.loc
0,expedia-hotel-recommendations,https://www.kaggle.com/niladri18/usinng-logistic-regression,"df.ix[:, ('srch_ci')]","df.loc[:, ('srch_ci')]",pd.DataFrame.ix,pd.DataFrame.loc
0,expedia-hotel-recommendations,https://www.kaggle.com/niladri18/usinng-logistic-regression,"df.ix[:, ('srch_co')]","df.loc[:, ('srch_co')]",pd.DataFrame.ix,pd.DataFrame.loc
0,expedia-hotel-recommendations,https://www.kaggle.com/uj2295/xgboost-for-compset,df_train[column].astype(str),df_train[column].apply(str),pd.Series.astype,pd.Series.apply
1,expedia-hotel-recommendations,https://www.kaggle.com/niladri18/usinng-logistic-regression,"np.vstack((x0, x1, x2, x3))","np.column_stack((x0.T, x1.T, x2.T, x3.T)).T",np.vstack,np.column_stack
0,facebook-v-predicting-check-ins,https://www.kaggle.com/balajibi/facebook-solution-bi-1,np.vstack(preds_list),"np.concatenate(preds_list, axis=0)",np.vstack,np.concatenate
0,facebook-v-predicting-check-ins,https://www.kaggle.com/chrisgundling/anyone-else-try-using-svm,counts.iloc[0],counts.iat[0],pd.Series.iloc,pd.Series.iat
0,facebook-v-predicting-check-ins,https://www.kaggle.com/drarfc/knn-accelerated-v3,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T",np.column_stack,np.vstack
0,facebook-v-predicting-check-ins,https://www.kaggle.com/drarfc/script-competition-facebook-v-2-1,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T",np.column_stack,np.vstack
0,facebook-v-predicting-check-ins,https://www.kaggle.com/paullo0106/knn-accelerated-v3,np.vstack(preds_list),"np.concatenate(preds_list, axis=0)",np.vstack,np.concatenate
0,facebook-v-predicting-check-ins,https://www.kaggle.com/rakhlin/ultra-fast-grid-knn-model,np.where(d > g.th),np.nonzero(d > g.th),np.where,np.nonzero
0,facebook-v-predicting-check-ins,https://www.kaggle.com/rakhlin/ultra-fast-grid-knn-model,np.where(d > g.th),np.nonzero(d > g.th),np.where,np.nonzero
0,facebook-v-predicting-check-ins,https://www.kaggle.com/rakhlin/ultra-fast-grid-knn-model,np.where(d > g.th),np.nonzero(d > g.th),np.where,np.nonzero
0,facebook-v-predicting-check-ins,https://www.kaggle.com/rakhlin/ultra-fast-grid-knn-model,np.where(d > g.th),np.nonzero(d > g.th),np.where,np.nonzero
0,facebook-v-predicting-check-ins,https://www.kaggle.com/tunguz/script-competition-facebook-v-2-2,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T",np.column_stack,np.vstack
0,facebook-v-predicting-check-ins,https://www.kaggle.com/zeroblue/knn-accelerated-v3,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T",np.column_stack,np.vstack
0,facebook-v-predicting-check-ins,https://www.kaggle.com/zeroblue/testing-knn,np.vstack(preds_list),"np.concatenate(preds_list, axis=0)",np.vstack,np.concatenate
0,facebook-v-predicting-check-ins,https://www.kaggle.com/chrisgundling/anyone-else-try-using-svm,counts.iloc[n],counts.iat[n],pd.Series.iloc,pd.Series.iat
0,facebook-v-predicting-check-ins,https://www.kaggle.com/chrisgundling/anyone-else-try-using-svm,counts.iloc[n + 1],counts.iat[n + 1],pd.Series.iloc,pd.Series.iat
0,facebook-v-predicting-check-ins,https://www.kaggle.com/rakhlin/ultra-fast-grid-knn-model,t.iloc[br],t.iat[br],pd.Series.iloc,pd.Series.iat
1,facebook-v-predicting-check-ins,https://www.kaggle.com/balajibi/facebook-solution-bi-1,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T",np.column_stack,np.vstack
1,facebook-v-predicting-check-ins,https://www.kaggle.com/company/facebook-pci,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T",np.column_stack,np.vstack
1,facebook-v-predicting-check-ins,https://www.kaggle.com/nikolayburlutskiy/modified-grid-knn,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T",np.column_stack,np.vstack
1,facebook-v-predicting-check-ins,https://www.kaggle.com/paullo0106/knn-accelerated-v3,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T",np.column_stack,np.vstack
0,facebook-v-predicting-check-ins,https://www.kaggle.com/rakhlin/ultra-fast-grid-knn-model,np.where(d > g.th),np.nonzero(d > g.th),np.where,np.nonzero
1,facebook-v-predicting-check-ins,https://www.kaggle.com/suryavan/knn-and-probability-lookup-script,"np.vstack((grid1, grid2, grid3, grid4))","np.column_stack((grid1.T, grid2.T, grid3.T, grid4.T)).T",np.vstack,np.column_stack
1,facebook-v-predicting-check-ins,https://www.kaggle.com/valadi/mad-scripts-battle-z,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T",np.column_stack,np.vstack
1,facebook-v-predicting-check-ins,https://www.kaggle.com/violinbeats/knn-test-run,"test.loc[:99, ('row_id')]","test.ix[:99, ('row_id')]",pd.DataFrame.loc,pd.DataFrame.ix
1,facebook-v-predicting-check-ins,https://www.kaggle.com/zeroblue/modified-grid-knn-17-alex2,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T",np.column_stack,np.vstack
1,facebook-v-predicting-check-ins,https://www.kaggle.com/zeroblue/modified-grid-knn-17-z,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T",np.column_stack,np.vstack
1,facebook-v-predicting-check-ins,https://www.kaggle.com/zeroblue/modified-grid-knn-17-z,np.vstack(preds_list),"np.concatenate(preds_list, axis=0)",np.vstack,np.concatenate
1,favorita-grocery-sales-forecasting,https://www.kaggle.com/cbrioso/lightgbm-with-cv,"data['hol']['transferred'].map({'False': 0, 'True': 1})","pd.DataFrame(data['hol']['transferred']).replace({'False': 0, 'True': 1})",pd.Series.map,pd.DataFrame.replace
0,flavours-of-physics,https://www.kaggle.com/rakhlin/abcde,"df.loc[:, (['DOCAone', 'DOCAtwo', 'DOCAthree'])]","df.ix[:, (['DOCAone', 'DOCAtwo', 'DOCAthree'])]",pd.DataFrame.loc,pd.DataFrame.ix
0,flavours-of-physics,https://www.kaggle.com/rakhlin/abcde,"df.loc[:, (['p0_IsoBDT', 'p1_IsoBDT', 'p2_IsoBDT'])]","df.ix[:, (['p0_IsoBDT', 'p1_IsoBDT', 'p2_IsoBDT'])]",pd.DataFrame.loc,pd.DataFrame.ix
0,ghouls-goblins-and-ghosts-boo,https://www.kaggle.com/cttsai/xgb-voting-weighted-goblins,"train[target].replace({'Goblin': 1.15, 'Ghost': 1.0, 'Ghoul': 1.0})","train[target].map({'Goblin': 1.15, 'Ghost': 1.0, 'Ghoul': 1.0})",pd.Series.replace,pd.Series.map
0,grupo-bimbo-inventory-demand,https://www.kaggle.com/kobakhit/xgboost,"train.loc[(train['Demanda_uni_equil'] < 51), :]","train.ix[(train['Demanda_uni_equil'] < 51), :]",pd.DataFrame.loc,pd.DataFrame.ix
0,grupo-bimbo-inventory-demand,https://www.kaggle.com/nemethpeter42/valami,"df_Train.loc[:, (['Cliente_ID', 'Demanda_uni_equil'])]","df_Train.ix[:, (['Cliente_ID', 'Demanda_uni_equil'])]",pd.DataFrame.loc,pd.DataFrame.ix
0,grupo-bimbo-inventory-demand,https://www.kaggle.com/zstuwangrui/start-up,np.ones(df_test.shape[0]),np.empty(df_test.shape[0]); r2.fill(1),np.ones,np.empty
1,grupo-bimbo-inventory-demand,https://www.kaggle.com/nemethpeter42/osztalyozas,"df_tmp.loc[:, ('tipp')]","df_tmp.ix[:, ('tipp')]",pd.DataFrame.loc,pd.DataFrame.ix
1,grupo-bimbo-inventory-demand,https://www.kaggle.com/nemethpeter42/valami,"df.loc[:, ('Demanda_uni_equil')]","df.ix[:, ('Demanda_uni_equil')]",pd.DataFrame.loc,pd.DataFrame.ix
0,home-credit-default-risk,https://www.kaggle.com/jvallej/agregaciones-previouse-applications,"data1.loc[:, (['SK_ID_CURR'])]","data1.ix[:, (['SK_ID_CURR'])]",pd.DataFrame.loc,pd.DataFrame.ix
0,home-credit-default-risk,https://www.kaggle.com/nilzone/lgbm-with-mean-encodings,"alldata.loc[(alldata.is_test), :]","alldata.ix[(alldata.is_test), :]",pd.DataFrame.loc,pd.DataFrame.ix
0,home-credit-default-risk,https://www.kaggle.com/nilzone/lightgbm,"alldata.loc[:, (col)]","alldata.ix[:, (col)]",pd.DataFrame.loc,pd.DataFrame.ix
0,home-credit-default-risk,https://www.kaggle.com/prashantkikani/home-rf-et-xgb-cb-stack-oof1-lb-0-789,"credit_card_df.loc[most_recent_index, cat_feats]","credit_card_df.ix[most_recent_index, cat_feats]",pd.DataFrame.loc,pd.DataFrame.ix
0,home-credit-default-risk,https://www.kaggle.com/prashantkikani/home-rf-et-xgb-cb-stack-oof1-lb-0-789,"bureau_balance_df.loc[(most_recent_index), :]","bureau_balance_df.ix[(most_recent_index), :]",pd.DataFrame.loc,pd.DataFrame.ix
0,home-credit-default-risk,https://www.kaggle.com/prashantkikani/home-rf-et-xgb-cb-stack-oof1-lb-0-789,"pos_cash_df.loc[most_recent_index, cat_feats]","pos_cash_df.ix[most_recent_index, cat_feats]",pd.DataFrame.loc,pd.DataFrame.ix
1,home-credit-default-risk,https://www.kaggle.com/jvallej/agregaciones-previouse-applications,"data.loc[:, (['SK_ID_PREV', 'SK_ID_CURR'])]","data.ix[:, (['SK_ID_PREV', 'SK_ID_CURR'])]",pd.DataFrame.loc,pd.DataFrame.ix
1,home-credit-default-risk,https://www.kaggle.com/nilzone/lgbm-with-mean-encodings,"test.loc[:, ('is_test')]","test.ix[:, ('is_test')]",pd.DataFrame.loc,pd.DataFrame.ix
1,home-credit-default-risk,https://www.kaggle.com/ranjith49/home-credit-default-risk-python,"app_train.loc[app_train['TARGET'] == 0, 'DAYS_BIRTH']","app_train.ix[app_train['TARGET'] == 0, 'DAYS_BIRTH']",pd.DataFrame.loc,pd.DataFrame.ix
0,homesite-quote-conversion,https://www.kaggle.com/alexxanderlarko/extratreesclassifier,train.ix[train_sample],train.loc[train_sample],pd.DataFrame.ix,pd.DataFrame.loc
0,homesite-quote-conversion,https://www.kaggle.com/alexxanderlarko/extratreesclassifier,"train.ix[:, 0:299]","train.iloc[:, 0:299]",pd.DataFrame.ix,pd.DataFrame.iloc
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/alipala/ml-regressors-20-features,"test.loc[:, (test.columns != c)]","test.ix[:, (test.columns != c)]",pd.DataFrame.loc,pd.DataFrame.ix
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/amielsy/second-script,"train.loc[:, 'MSSubClass':'SaleCondition']","train.ix[:, 'MSSubClass':'SaleCondition']",pd.DataFrame.loc,pd.DataFrame.ix
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/antoinekrajnc/house-prices-multiple-linear-regression,"np.ones((1460, 1))","np.empty((1460, 1)); r2.fill(1)",np.ones,np.empty
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/carmnejsu/feature-engineering-different-models,dataset.isnull().values.sum(),"np.count_nonzero(dataset.isnull().values,)",np.ndarray.sum,np.count_nonzero
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/carmnejsu/feature-engineering-different-models,dataset.isnull().values.sum(),"np.sum(dataset.isnull().values,)",np.ndarray.sum,np.sum
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/cttsai/xgb-trial-oct-08,"clustered_train.loc[:, (name)]","clustered_train.ix[:, (name)]",pd.DataFrame.loc,pd.DataFrame.ix
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/cttsai/xgb-trial-oct-08,"train.loc[:, (name)]","train.ix[:, (name)]",pd.DataFrame.loc,pd.DataFrame.ix
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/cttsai/xgb-trial-oct-08,df['MoSold'].astype(str),df['MoSold'].apply(str),pd.Series.astype,pd.Series.apply
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/cxxacxx/have-a-try-2,"test.loc[:, 'MSSubClass':'SaleCondition']","test.ix[:, 'MSSubClass':'SaleCondition']",pd.DataFrame.loc,pd.DataFrame.ix
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/cxxacxx/have-a-try-2,"train.loc[:, (columns_for_pc)]","train.ix[:, (columns_for_pc)]",pd.DataFrame.loc,pd.DataFrame.ix
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/davideng/homeprices,"train_dataset.ix[train_dataset.Alley.notnull(), 'Alley']","train_dataset.loc[train_dataset.Alley.notnull(), 'Alley']",pd.DataFrame.ix,pd.DataFrame.loc
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/davideng/homeprices,"train_dataset.ix[train_dataset.Alley.isnull(), 'Alley']","train_dataset.loc[train_dataset.Alley.isnull(), 'Alley']",pd.DataFrame.ix,pd.DataFrame.loc
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/davideng/homeprices,"train_dataset.ix[train_dataset.MasVnrType.isnull(), 'MasVnrType']","train_dataset.loc[train_dataset.MasVnrType.isnull(), 'MasVnrType']",pd.DataFrame.ix,pd.DataFrame.loc
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/davideng/homeprices,"train_dataset.ix[train_dataset.MasVnrType == 'None', 'MasVnrArea']","train_dataset.loc[train_dataset.MasVnrType == 'None', 'MasVnrArea']",pd.DataFrame.ix,pd.DataFrame.loc
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/davideng/homeprices,"train_dataset.ix[train_dataset.Fireplaces == 0, 'FireplaceQu']","train_dataset.loc[train_dataset.Fireplaces == 0, 'FireplaceQu']",pd.DataFrame.ix,pd.DataFrame.loc
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/davideng/homeprices,"train_dataset.ix[train_dataset.GarageCars.isnull(), 'GarageCars']","train_dataset.loc[train_dataset.GarageCars.isnull(), 'GarageCars']",pd.DataFrame.ix,pd.DataFrame.loc
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/davideng/homeprices,"train_dataset.ix[train_dataset.GarageQual.isnull(), 'GarageQual']","train_dataset.loc[train_dataset.GarageQual.isnull(), 'GarageQual']",pd.DataFrame.ix,pd.DataFrame.loc
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/davideng/homeprices,"train_dataset.ix[train_dataset.GarageCars == 0, 'GarageType']","train_dataset.loc[train_dataset.GarageCars == 0, 'GarageType']",pd.DataFrame.ix,pd.DataFrame.loc
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/eliotbarr/stacking-starter,np.array(all_data[:train.shape[0]]),np.concatenate([all_data[:train.shape[0]]]),np.array,np.concatenate
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/eliotbarr/stacking-starter,np.array(all_data[train.shape[0]:]),np.concatenate([all_data[train.shape[0]:]]),np.array,np.concatenate
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/eponymous/weighted-models-example,"scores.ix[:, (scores.columns != 'split')]","scores.loc[:, (scores.columns != 'split')]",pd.DataFrame.ix,pd.DataFrame.loc
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/mosa94/linear-regression-implementations,np.ones(np.shape(trainX)[0]),np.empty(np.shape(trainX)[0]); r2.fill(1),np.ones,np.empty
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/naropian/narnar-test,"df_train.ix[:, (df_train.columns != 'SalePrice')]","df_train.loc[:, (df_train.columns != 'SalePrice')]",pd.DataFrame.ix,pd.DataFrame.loc
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/nbose2/tests,"df_train.ix[:, (df_train.columns != 'SalePrice')]","df_train.loc[:, (df_train.columns != 'SalePrice')]",pd.DataFrame.ix,pd.DataFrame.loc
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/nolanhoney/nolan-honey-comp-3122-assignment-3,"training_data.loc[:, 'MSSubClass':'SaleCondition']","training_data.ix[:, 'MSSubClass':'SaleCondition']",pd.DataFrame.loc,pd.DataFrame.ix
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/youngseoklee/house-price-prediction-with-numeric-only-dataset,"df_test.loc[:, (important_index_wo_price)]","df_test.ix[:, (important_index_wo_price)]",pd.DataFrame.loc,pd.DataFrame.ix
1,house-prices-advanced-regression-techniques,https://www.kaggle.com/alipala/ml-regressors-20-features,"train.loc[:, (train.columns != c)]","train.ix[:, (train.columns != c)]",pd.DataFrame.loc,pd.DataFrame.ix
1,house-prices-advanced-regression-techniques,https://www.kaggle.com/b0untyhunter/xgboost-lasso,"all_df.loc[idx, 'LotFrontage']","all_df.ix[idx, 'LotFrontage']",pd.DataFrame.loc,pd.DataFrame.ix
1,house-prices-advanced-regression-techniques,https://www.kaggle.com/cttsai/xgb-trial-oct-08,"clustered_test.loc[:, (name)]","clustered_test.ix[:, (name)]",pd.DataFrame.loc,pd.DataFrame.ix
1,house-prices-advanced-regression-techniques,https://www.kaggle.com/cttsai/xgb-trial-oct-08,df[i].astype(str),df[i].apply(str),pd.Series.astype,pd.Series.apply
1,house-prices-advanced-regression-techniques,https://www.kaggle.com/cxxacxx/have-a-try-2,"all_data.loc[np.logical_not(all_data['LotFrontage'].isnull()), 'LotArea']","all_data.ix[np.logical_not(all_data['LotFrontage'].isnull()), 'LotArea']",pd.DataFrame.loc,pd.DataFrame.ix
1,house-prices-advanced-regression-techniques,https://www.kaggle.com/eponymous/weighted-models-example,np.column_stack([y_preds[k][i] for k in clfs]),np.transpose([y_preds[k][i] for k in clfs]),np.column_stack,np.transpose
1,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[df.GarageYrBlt == 2207, 'GarageYrBlt']","df.ix[df.GarageYrBlt == 2207, 'GarageYrBlt']",pd.DataFrame.loc,pd.DataFrame.ix
1,house-prices-advanced-regression-techniques,https://www.kaggle.com/joanfo/my-first-kernel,"clean.loc[:, (numerical_cols)]","clean.ix[:, (numerical_cols)]",pd.DataFrame.loc,pd.DataFrame.ix
1,house-prices-advanced-regression-techniques,https://www.kaggle.com/mosa94/linear-regression-implementations,"np.dot(trainX_.transpose(), trainX_)","np.einsum('ij,jm->im',trainX_.transpose(), trainX_)",np.dot,np.einsum
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/naropian/narnar-test,"df_train.ix[:, (df_train.columns != 'SalePrice')]","df_train.loc[:, (df_train.columns != 'SalePrice')]",pd.DataFrame.ix,pd.DataFrame.loc
1,house-prices-advanced-regression-techniques,https://www.kaggle.com/naumanahm/nauman-attempt3-final,"complete_data.loc[1379, 'Electrical']","complete_data.ix[1379, 'Electrical']",pd.DataFrame.loc,pd.DataFrame.ix
0,house-prices-advanced-regression-techniques,https://www.kaggle.com/nbose2/tests,"df_train.ix[:, (df_train.columns != 'SalePrice')]","df_train.loc[:, (df_train.columns != 'SalePrice')]",pd.DataFrame.ix,pd.DataFrame.loc
1,house-prices-advanced-regression-techniques,https://www.kaggle.com/panpolikarp/housing-submission-0-12695,"data.loc[data.index.isin(missing[c].index.tolist()), c]","data.ix[data.index.isin(missing[c].index.tolist()), c]",pd.DataFrame.loc,pd.DataFrame.ix
1,house-prices-advanced-regression-techniques,https://www.kaggle.com/patrickjordan/random-forest,"frame.loc[frame[feature] == cat, feature + '_E']","frame.ix[frame[feature] == cat, feature + '_E']",pd.DataFrame.loc,pd.DataFrame.ix
1,house-prices-advanced-regression-techniques,https://www.kaggle.com/wirehack/fdsfsdfdsfsdfsdf,"df.loc[df['Alley'].isnull(), 'Alley']","df.ix[df['Alley'].isnull(), 'Alley']",pd.DataFrame.loc,pd.DataFrame.ix
1,house-prices-advanced-regression-techniques,https://www.kaggle.com/wirehack/fdsfsdfdsfsdfsdf,"np.zeros((X.shape[0], len(self.base_models)))","np.empty((X.shape[0], len(self.base_models))); r2[:]= 0",np.zeros,np.empty
1,house-prices-advanced-regression-techniques,https://www.kaggle.com/youngseoklee/house-price-prediction-with-numeric-only-dataset,"df_num.loc[:, (important_index)]","df_num.ix[:, (important_index)]",pd.DataFrame.loc,pd.DataFrame.ix
0,how-much-did-it-rain,https://www.kaggle.com/devinanzelmo/component-cdf-s-and-sample-predictions,train.query('num_scans > 7 and num_scans < 18'),train.loc[(train.num_scans > 7 )& (train.num_scans < 18)],pd.DataFrame.query,pd.DataFrame.loc
0,how-much-did-it-rain,https://www.kaggle.com/devinanzelmo/fiddling-with-xgb,train.query('num_scans > 17'),train.loc[train.num_scans > 17],pd.DataFrame.query,pd.DataFrame.loc
0,instacart-market-basket-analysis,https://www.kaggle.com/bschaefer/frequent-items-per-user-baseline-lb-0-30,"orders.loc[orders.eval_set == 'test', 'user_id']","orders.ix[orders.eval_set == 'test', 'user_id']",pd.DataFrame.loc,pd.DataFrame.ix
0,instacart-market-basket-analysis,https://www.kaggle.com/nabilnobel/if-product-exists-in-last-4-order,"orders_all.loc[orders_all['order_number'] > 3, 'n_3']","orders_all.ix[orders_all['order_number'] > 3, 'n_3']",pd.DataFrame.loc,pd.DataFrame.ix
1,instacart-market-basket-analysis,https://www.kaggle.com/bschaefer/frequent-items-per-user-baseline-lb-0-30,"submission.loc[submission['products'].isnull(), 'products']","submission.ix[submission['products'].isnull(), 'products']",pd.DataFrame.loc,pd.DataFrame.ix
1,instacart-market-basket-analysis,https://www.kaggle.com/bschaefer/frequent-items-per-user-baseline-lb-0-30,orders_test_user.query('eval_set == 'prior''),orders_test_user.loc[orders_test_user.eval_set == 'prior'],pd.DataFrame.query,pd.DataFrame.loc
1,instacart-market-basket-analysis,https://www.kaggle.com/nabilnobel/if-product-exists-in-last-4-order,"orders_all.loc[orders_all['order_number'] > 1, 'n_1']","orders_all.ix[orders_all['order_number'] > 1, 'n_1']",pd.DataFrame.loc,pd.DataFrame.ix
1,instacart-market-basket-analysis,https://www.kaggle.com/opanichev/pandas-btb,"np.array(products, dtype='int')","np.fromiter(products, dtype='int')",np.array,np.fromiter
0,introducing-kaggle-scripts,https://www.kaggle.com/ed25519/code-taken-from-xkcd-examples-showcase-xkcd-html,np.ones(100),np.empty(100); r2.fill(1),np.ones,np.empty
0,introducing-kaggle-scripts,https://www.kaggle.com/khyh00/xkcd-style-test,np.ones(100),np.empty(100); r2.fill(1),np.ones,np.empty
0,introducing-kaggle-scripts,https://www.kaggle.com/sdanaipat/prime,"np.ones(n + 1, dtype=np.bool)","np.empty(n + 1, dtype=np.bool); r2.fill(1)",np.ones,np.empty
0,jigsaw-toxic-comment-classification-challenge,https://www.kaggle.com/pappukrjha/log-reg-auc-98795,"predTest.ix[:, ('id')]","predTest.loc[:, ('id')]",pd.DataFrame.ix,pd.DataFrame.loc
0,jigsaw-toxic-comment-classification-challenge,https://www.kaggle.com/pappukrjha/log-reg-auc-98795,"predValid.ix[:, (col)]","predValid.loc[:, (col)]",pd.DataFrame.ix,pd.DataFrame.loc
0,jigsaw-toxic-comment-classification-challenge,https://www.kaggle.com/pappukrjha/log-reg-auc-98795,"predTest.ix[:, (col)]","predTest.loc[:, (col)]",pd.DataFrame.ix,pd.DataFrame.loc
0,jigsaw-toxic-comment-classification-challenge,https://www.kaggle.com/pappukrjha/rf-tfidf-word-char-lb-945,"predTest.ix[:, ('id')]","predTest.loc[:, ('id')]",pd.DataFrame.ix,pd.DataFrame.loc
0,jigsaw-toxic-comment-classification-challenge,https://www.kaggle.com/pappukrjha/rf-tfidf-word-char-lb-945,"predValid.ix[:, (col)]","predValid.loc[:, (col)]",pd.DataFrame.ix,pd.DataFrame.loc
0,jigsaw-toxic-comment-classification-challenge,https://www.kaggle.com/pappukrjha/rf-tfidf-word-char-lb-945,"predTest.ix[:, (col)]","predTest.loc[:, (col)]",pd.DataFrame.ix,pd.DataFrame.loc
1,jigsaw-toxic-comment-classification-challenge,https://www.kaggle.com/nicapotato/tf-idf-xgboost,"train.loc[:, (class_names)]","train.ix[:, (class_names)]",pd.DataFrame.loc,pd.DataFrame.ix
1,jigsaw-toxic-comment-classification-challenge,https://www.kaggle.com/yekenot/toxic-regression,"np.zeros((test.shape[0], len(col)))","np.empty((test.shape[0], len(col))); r2[:]= 0",np.zeros,np.empty
0,kobe-bryant-shot-selection,https://www.kaggle.com/brandao/test-4,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)","np.where( df['shot_distance'] < 45 , df['shot_distance'] ,    45)",pd.DataFrame.apply,np.where
0,kobe-bryant-shot-selection,https://www.kaggle.com/brandao/test-4,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)","np.where( df['time_remaining'] < 3 , 1 ,0)",pd.DataFrame.apply,np.where
0,kobe-bryant-shot-selection,https://www.kaggle.com/brandao/test-4,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)", df['shot_distance'].apply(lambda row:row if row < 45 else     45),pd.DataFrame.apply,pd.Series.apply
0,kobe-bryant-shot-selection,https://www.kaggle.com/brandao/test-4,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)", df['time_remaining'].apply(lambda row: 1 if row < 3 else 0),pd.DataFrame.apply,pd.Series.apply
0,kobe-bryant-shot-selection,https://www.kaggle.com/brandao/test-6,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)","np.where( df['shot_distance'] < 45 , df['shot_distance'] ,    45)",pd.DataFrame.apply,np.where
0,kobe-bryant-shot-selection,https://www.kaggle.com/brandao/test-6,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)","np.where( df['time_remaining'] < 3 , 1 ,0)",pd.DataFrame.apply,np.where
0,kobe-bryant-shot-selection,https://www.kaggle.com/brandao/test-6,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)", df['shot_distance'].apply(lambda row:row if row < 45 else     45),pd.DataFrame.apply,pd.Series.apply
0,kobe-bryant-shot-selection,https://www.kaggle.com/brandao/test-6,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)", df['time_remaining'].apply(lambda row: 1 if row < 3 else 0),pd.DataFrame.apply,pd.Series.apply
0,kobe-bryant-shot-selection,https://www.kaggle.com/brandao/test-7,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)","np.where( df['shot_distance'] < 45 , df['shot_distance'] ,    45)",pd.DataFrame.apply,np.where
0,kobe-bryant-shot-selection,https://www.kaggle.com/brandao/test-7,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)","np.where( df['time_remaining'] < 3 , 1 ,0)",pd.DataFrame.apply,np.where
0,kobe-bryant-shot-selection,https://www.kaggle.com/brandao/test-7,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)", df['shot_distance'].apply(lambda row:row if row < 45 else     45),pd.DataFrame.apply,pd.Series.apply
0,kobe-bryant-shot-selection,https://www.kaggle.com/brandao/test-7,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)", df['time_remaining'].apply(lambda row: 1 if row < 3 else 0),pd.DataFrame.apply,pd.Series.apply
0,kobe-bryant-shot-selection,https://www.kaggle.com/brandao/teste-5,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)","np.where( df['shot_distance'] < 45 , df['shot_distance'] ,    45)",pd.DataFrame.apply,np.where
0,kobe-bryant-shot-selection,https://www.kaggle.com/brandao/teste-5,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)","np.where( df['time_remaining'] < 3 , 1 ,0)",pd.DataFrame.apply,np.where
0,kobe-bryant-shot-selection,https://www.kaggle.com/brandao/winner-script,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)","np.where( df['shot_distance'] < 45 , df['shot_distance'] ,    45)",pd.DataFrame.apply,np.where
0,kobe-bryant-shot-selection,https://www.kaggle.com/brandao/winner-script,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)","np.where( df['time_remaining'] < 3 , 1 ,0)",pd.DataFrame.apply,np.where
0,kobe-bryant-shot-selection,https://www.kaggle.com/brandao/winner-script,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)", df['shot_distance'].apply(lambda row:row if row < 45 else     45),pd.DataFrame.apply,pd.Series.apply
0,kobe-bryant-shot-selection,https://www.kaggle.com/brandao/winner-script,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)", df['time_remaining'].apply(lambda row: 1 if row < 3 else 0),pd.DataFrame.apply,pd.Series.apply
0,kobe-bryant-shot-selection,https://www.kaggle.com/company/kbss-1,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)","np.where( df['shot_distance'] < 45 , df['shot_distance'] ,    45)",pd.DataFrame.apply,np.where
0,kobe-bryant-shot-selection,https://www.kaggle.com/company/kbss-1,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)","np.where( df['time_remaining'] < 3 , 1 ,0)",pd.DataFrame.apply,np.where
0,kobe-bryant-shot-selection,https://www.kaggle.com/company/kbss-1,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)", df['shot_distance'].apply(lambda row:row if row < 45 else     45),pd.DataFrame.apply,pd.Series.apply
0,kobe-bryant-shot-selection,https://www.kaggle.com/company/kbss-1,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)", df['time_remaining'].apply(lambda row: 1 if row < 3 else 0),pd.DataFrame.apply,pd.Series.apply
0,kobe-bryant-shot-selection,https://www.kaggle.com/huangweijie/kobe-bryant,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)","np.where( df['shot_distance'] < 45 , df['shot_distance'] ,    45)",pd.DataFrame.apply,np.where
0,kobe-bryant-shot-selection,https://www.kaggle.com/huangweijie/kobe-bryant,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)","np.where( df['time_remaining'] < 3 , 1 ,0)",pd.DataFrame.apply,np.where
0,kobe-bryant-shot-selection,https://www.kaggle.com/huangweijie/kobe-bryant,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)", df['shot_distance'].apply(lambda row:row if row < 45 else     45),pd.DataFrame.apply,pd.Series.apply
0,kobe-bryant-shot-selection,https://www.kaggle.com/huangweijie/kobe-bryant,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)", df['time_remaining'].apply(lambda row: 1 if row < 3 else 0),pd.DataFrame.apply,pd.Series.apply
0,kobe-bryant-shot-selection,https://www.kaggle.com/jaycb26/xgbryant,"data.apply(lambda row: 28 if row['shot_distance'] > 28 else row[	    'shot_distance'], axis=1)","np.where( data['shot_distance'] > 28 , 28 ,data[	    'shot_distance'])",pd.DataFrame.apply,np.where
1,kobe-bryant-shot-selection,https://www.kaggle.com/kevins/models-war,"data_cl.loc[data_cl['action_type'].isin(rare_action_types), 'action_type']","data_cl.ix[data_cl['action_type'].isin(rare_action_types), 'action_type']",pd.DataFrame.loc,pd.DataFrame.ix
1,leaf-classification,https://www.kaggle.com/fernandocruz/first-test,"train.loc[:, 'margin1':]","train.ix[:, 'margin1':]",pd.DataFrame.loc,pd.DataFrame.ix
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/aarotang/test-data,"np.hstack((x_num_data, vec_x_cat_data))","np.append(x_num_data, vec_x_cat_data, axis=1)",np.hstack,np.append
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/aarotang/test-data,"np.hstack((x_num_data, vec_x_cat_data))","np.concatenate((x_num_data, vec_x_cat_data), axis=1)",np.hstack,np.concatenate
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/andrewlin1006/cs145-v1,"np.hstack((x_num_data, vec_x_cat_data))","np.concatenate((x_num_data, vec_x_cat_data), axis=1)",np.hstack,np.concatenate
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/andrewlin1006/cs145-v1,"np.hstack((x_num_test, vec_x_cat_test))","np.concatenate((x_num_test, vec_x_cat_test), axis=1)",np.hstack,np.concatenate
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/chriscc/xgb-cv,"np.hstack((trainCatVecX, trainNumX))","np.append(trainCatVecX, trainNumX, axis=1)",np.hstack,np.append
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/chriscc/xgb-cv,"np.hstack((testCatVecX, testNumX))","np.append(testCatVecX, testNumX, axis=1)",np.hstack,np.append
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/chriscc/xgb-cv,"np.hstack((trainCatVecX, trainNumX))","np.concatenate((trainCatVecX, trainNumX), axis=1)",np.hstack,np.concatenate
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/chriscc/xgb-cv,np.sum(true_order),(true_order).sum(),np.sum,np.ndarray.sum
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/chriscc/xgb-cv,np.sum(true_order),(true_order).sum(),np.sum,np.ndarray.sum
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/chriscc/xgb-py,"np.hstack((trainCatVecX, trainNumX))","np.concatenate((trainCatVecX, trainNumX), axis=1)",np.hstack,np.concatenate
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/chriscc/xgb-py,"np.hstack((testCatVecX, testNumX))","np.concatenate((testCatVecX, testNumX), axis=1)",np.hstack,np.concatenate
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/devendramittal/randomforest,"np.column_stack((Idtest, YPred))","np.transpose((Idtest, YPred))",np.column_stack,np.transpose
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/devendramittal/randomforest,"np.column_stack((Idtest, YPred))","np.vstack((Idtest.T, YPred.T)).T",np.column_stack,np.vstack
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/justfor/bench-stacked-generalization,"test.ix[:, ('Id')]","test.loc[:, ('Id')]",pd.DataFrame.ix,pd.DataFrame.loc
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/justfor/bench-stacked-generalization,"train.ix[:, ('Id')]","train.loc[:, ('Id')]",pd.DataFrame.ix,pd.DataFrame.loc
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/justfor/bench-stacked-generalization,"np.hstack((testCatVecX, testNumX))","np.append(testCatVecX, testNumX, axis=1)",np.hstack,np.append
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/justfor/bench-stacked-generalization,"np.hstack((testCatVecX, testNumX))","np.concatenate((testCatVecX, testNumX), axis=1)",np.hstack,np.concatenate
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/kmalev/randomforest-alternative-coding-example,"encoded_column.ix[:, :]","encoded_column.loc[:, :]",pd.DataFrame.ix,pd.DataFrame.loc
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/kmalev/randomforest-alternative-coding-example,"encoded_column.ix[:, :]","encoded_column.loc[:, :]",pd.DataFrame.ix,pd.DataFrame.loc
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/rtmink/cs-145-project-2c,"np.hstack((x_num_data, vec_x_cat_data))","np.append(x_num_data, vec_x_cat_data, axis=1)",np.hstack,np.append
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/rtmink/cs-145-project-2c,"np.hstack((x_num_data, vec_x_cat_data))","np.concatenate((x_num_data, vec_x_cat_data), axis=1)",np.hstack,np.concatenate
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/rtmink/test-101,"np.hstack((x_num_test, vec_x_cat_test))","np.concatenate((x_num_test, vec_x_cat_test), axis=1)",np.hstack,np.concatenate
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/rtmink/test-1011,"np.hstack((x_num_data, vec_x_cat_data))","np.append(x_num_data, vec_x_cat_data, axis=1)",np.hstack,np.append
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/rtmink/test-1011,"np.hstack((x_num_test, vec_x_cat_test))","np.concatenate((x_num_test, vec_x_cat_test), axis=1)",np.hstack,np.concatenate
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/stacyayaka/cs145,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.append(np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed, axis=1)",np.hstack,np.append
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/stacyayaka/cs145,"np.hstack((x_num_data, vec_x_cat_data))","np.append(x_num_data, vec_x_cat_data, axis=1)",np.hstack,np.append
0,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/stacyayaka/cs145,"np.hstack((x_num_test, vec_x_cat_test))","np.append(x_num_test, vec_x_cat_test, axis=1)",np.hstack,np.append
1,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/aarotang/test-data,"np.hstack((x_num_test, vec_x_cat_test))","np.concatenate((x_num_test, vec_x_cat_test), axis=1)",np.hstack,np.concatenate
1,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/andrewlin1006/cs145-v1,"np.hstack((x_num_data, vec_x_cat_data))","np.append(x_num_data, vec_x_cat_data, axis=1)",np.hstack,np.append
1,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/chriscc/xgb-cv,"np.hstack((testCatVecX, testNumX))","np.concatenate((testCatVecX, testNumX), axis=1)",np.hstack,np.concatenate
1,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/chriscc/xgb-py,"np.hstack((trainCatVecX, trainNumX))","np.append(trainCatVecX, trainNumX, axis=1)",np.hstack,np.append
1,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/justfor/bench-stacked-generalization,"np.hstack((trainCatVecX, trainNumX))","np.append(trainCatVecX, trainNumX, axis=1)",np.hstack,np.append
1,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/justfor/bench-stacked-generalization,"np.hstack((trainCatVecX, trainNumX))","np.concatenate((trainCatVecX, trainNumX), axis=1)",np.hstack,np.concatenate
1,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/rtmink/cs-145-project-2c,"np.hstack((x_num_test, vec_x_cat_test))","np.append(x_num_test, vec_x_cat_test, axis=1)",np.hstack,np.append
1,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/rtmink/cs-145-project-2c,"np.hstack((x_num_test, vec_x_cat_test))","np.concatenate((x_num_test, vec_x_cat_test), axis=1)",np.hstack,np.concatenate
1,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/rtmink/test-101,"np.hstack((x_num_data, vec_x_cat_data))","np.append(x_num_data, vec_x_cat_data, axis=1)",np.hstack,np.append
1,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/rtmink/test-101,"np.hstack((x_num_data, vec_x_cat_data))","np.concatenate((x_num_data, vec_x_cat_data), axis=1)",np.hstack,np.concatenate
1,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/rtmink/test-1011,"np.hstack((x_num_test, vec_x_cat_test))","np.append(x_num_test, vec_x_cat_test, axis=1)",np.hstack,np.append
1,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/rtmink/test-1011,"np.hstack((x_num_data, vec_x_cat_data))","np.concatenate((x_num_data, vec_x_cat_data), axis=1)",np.hstack,np.concatenate
1,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/stacyayaka/cs145,"np.hstack((x_num_data, vec_x_cat_data))","np.concatenate((x_num_data, vec_x_cat_data), axis=1)",np.hstack,np.concatenate
0,mercedes-benz-greener-manufacturing,https://www.kaggle.com/alabsinatheer/mercedes-benz-first-model-stacking-1,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.concatenate((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed), axis=1)",np.hstack,np.concatenate
0,mercedes-benz-greener-manufacturing,https://www.kaggle.com/hakeem/stacked-then-averaged-models-0-5697,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.append(np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed, axis=1)",np.hstack,np.append
0,mercedes-benz-greener-manufacturing,https://www.kaggle.com/hakeem/stacked-then-averaged-models-0-5697,"np.hstack((X, out_of_fold_predictions))","np.append(X, out_of_fold_predictions, axis=1)",np.hstack,np.append
0,mercedes-benz-greener-manufacturing,https://www.kaggle.com/hakeem/stacked-then-averaged-models-0-5697,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.append(np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed, axis=1)",np.hstack,np.append
0,mercedes-benz-greener-manufacturing,https://www.kaggle.com/hakeem/stacked-then-averaged-models-0-5697,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.concatenate((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed), axis=1)",np.hstack,np.concatenate
0,mercedes-benz-greener-manufacturing,https://www.kaggle.com/hakeem/stacked-then-averaged-models-0-5697,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.concatenate((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed), axis=1)",np.hstack,np.concatenate
0,mercedes-benz-greener-manufacturing,https://www.kaggle.com/mingruimingrui/top-3-hakeem-s-script-without-outlier-y-250,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.append(np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed, axis=1)",np.hstack,np.append
0,mercedes-benz-greener-manufacturing,https://www.kaggle.com/mingruimingrui/top-3-hakeem-s-script-without-outlier-y-250,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.concatenate((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed), axis=1)",np.hstack,np.concatenate
0,mercedes-benz-greener-manufacturing,https://www.kaggle.com/tilii7/you-want-outliers-we-got-them-outliers,"np.sum((points - median) ** 2, axis=-1)",((points - median) ** 2).sum( axis=-1),np.sum,np.ndarray.sum
0,mercedes-benz-greener-manufacturing,https://www.kaggle.com/tilii7/you-want-outliers-we-got-them-outliers,"np.vstack((target, target_pred))","np.column_stack((target.T, target_pred.T)).T",np.vstack,np.column_stack
0,mercedes-benz-greener-manufacturing,https://www.kaggle.com/tobikaggle/stacked-then-averaged-models-0-5697,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.append(np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed, axis=1)",np.hstack,np.append
0,mercedes-benz-greener-manufacturing,https://www.kaggle.com/xcz011/mercedez,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.concatenate((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed), axis=1)",np.hstack,np.concatenate
1,mercedes-benz-greener-manufacturing,https://www.kaggle.com/adityakumarsinha/stacked-then-averaged-models-private-lb-0-554,"all_data.loc[:, ('lag1')]","all_data.ix[:, ('lag1')]",pd.DataFrame.loc,pd.DataFrame.ix
1,mercedes-benz-greener-manufacturing,https://www.kaggle.com/adityakumarsinha/stacked-then-averaged-models-private-lb-0-554,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.concatenate((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed), axis=1)",np.hstack,np.concatenate
1,mercedes-benz-greener-manufacturing,https://www.kaggle.com/tobikaggle/stacked-then-averaged-models-0-5697,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.concatenate((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed), axis=1)",np.hstack,np.concatenate
1,mercedes-benz-greener-manufacturing,https://www.kaggle.com/xcz011/mercedez,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.append(np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed, axis=1)",np.hstack,np.append
0,new-york-city-taxi-fare-prediction,https://www.kaggle.com/rom1m201363/road-grid-and-backpropagated-dijkstra-with-pytorch,np.where(closest_pickup != closest_dropoff),np.nonzero(closest_pickup != closest_dropoff),np.where,np.nonzero
0,nyc-taxi-trip-duration,https://www.kaggle.com/amazone/lightgbm-regressor,df['pickup_datetime'].apply(lambda x: int(x.split(' ')[0].split('-')[2])),df['pickup_datetime'].map(lambda x: int(x.split(' ')[0].split('-')[2])),pd.Series.apply,pd.Series.map
1,nyc-taxi-trip-duration,https://www.kaggle.com/amazone/lightgbm-regressor,df['pickup_datetime'].apply(lambda x: int(x.split(' ')[0].split('-')[1])),df['pickup_datetime'].map(lambda x: int(x.split(' ')[0].split('-')[1])),pd.Series.apply,pd.Series.map
1,nyc-taxi-trip-duration,https://www.kaggle.com/ocaudevi/passanger-flow-mapping-properties,"np.ones((1, values_pickup.shape[1]))","np.empty((1, values_pickup.shape[1])); r2.fill(1)",np.ones,np.empty
0,otto-group-product-classification-challenge,https://www.kaggle.com/muhammadzaman/knn-argpartition-and-value-of-k,"data.ix[:, 1:-1]","data.iloc[:, 1:-1]",pd.DataFrame.ix,pd.DataFrame.iloc
0,otto-group-product-classification-challenge,https://www.kaggle.com/muhammadzaman/knn-argpartition-and-value-of-k,"data.ix[:, (-1)]","data.iloc[:, (-1)]",pd.DataFrame.ix,pd.DataFrame.iloc
0,otto-group-product-classification-challenge,https://www.kaggle.com/sundancekid/sctryout,np.array(train),np.concatenate([train]),np.array,np.concatenate
0,otto-group-product-classification-challenge,https://www.kaggle.com/sundancekid/sctryout,np.array(labels),np.concatenate([labels]),np.array,np.concatenate
1,otto-group-product-classification-challenge,https://www.kaggle.com/inversion/visualizing-class-distance,"dist_metric.loc[1000:2000, ('5_10')]","dist_metric.ix[1000:2000, ('5_10')]",pd.DataFrame.loc,pd.DataFrame.ix
1,otto-group-product-classification-challenge,https://www.kaggle.com/inversion/visualizing-class-distance,np.where(label == c),np.nonzero(label == c),np.where,np.nonzero
0,PLAsTiCC-2018,https://www.kaggle.com/ogrellier/multi-core-aggregations,np.sum(b_s),"np.einsum('i->',b_s)",np.sum,np.einsum
0,PLAsTiCC-2018,https://www.kaggle.com/ogrellier/multi-core-aggregations,np.sum(a_s),"np.einsum('i->',a_s)",np.sum,np.einsum
0,PLAsTiCC-2018,https://www.kaggle.com/ogrellier/multi-core-aggregations,np.sum(a_s),"np.einsum('i->',a_s)",np.sum,np.einsum
0,PLAsTiCC-2018,https://www.kaggle.com/ogrellier/multi-core-aggregations,np.sum(b_s),(b_s).sum(),np.sum,np.ndarray.sum
0,PLAsTiCC-2018,https://www.kaggle.com/ogrellier/multi-core-aggregations,np.sum(b_s),(b_s).sum(),np.sum,np.ndarray.sum
0,PLAsTiCC-2018,https://www.kaggle.com/ogrellier/multi-core-aggregations,np.sum(b_s),(b_s).sum(),np.sum,np.ndarray.sum
0,PLAsTiCC-2018,https://www.kaggle.com/ogrellier/multi-core-aggregations,np.sum(b_s),(b_s).sum(),np.sum,np.ndarray.sum
0,PLAsTiCC-2018,https://www.kaggle.com/ogrellier/multi-core-aggregations,"np.zeros((len(df), np.unique(y).shape[0]))","np.empty((len(df), np.unique(y).shape[0])); r2[:]= 0",np.zeros,np.empty
0,PLAsTiCC-2018,https://www.kaggle.com/ogrellier/plasticc-in-a-kernel-meta-and-data,"np.sum(y_ohe.values * y_p_log, axis=0)","np.einsum('ij->j',y_ohe.values * y_p_log)",np.sum,np.einsum
0,porto-seguro-safe-driver-prediction,https://www.kaggle.com/numberswithkartik/so-you-think-xgboost-will-work,"np.c_[actual, pred, np.arange(len(actual))]","np.hstack([actual.reshape(len(actual),1),pred.reshape(len(pred),1),np.arange(len(actual)).reshape(len(actual),1)])",np.c_,np.hstack
0,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,a_s.sum(),"np.einsum('i->',a_s)",np.ndarray.sum,np.einsum
1,porto-seguro-safe-driver-prediction,https://www.kaggle.com/gvyshnya/gbm-cv-submission-lb-28,train_df[f2].apply(lambda x: str(x)),train_df[f2].map(lambda x: str(x)),pd.Series.apply,pd.Series.map
1,porto-seguro-safe-driver-prediction,https://www.kaggle.com/ievgenvp/lgbm-custom-randomizedsearchcv-lb-283,"np.c_[actual, pred, np.arange(len(actual))]","np.hstack([np.array(actual).reshape(len(actual),1), np.array(pred).reshape(len(actual),1), np.arange(len(actual)).reshape(len(actual),1)])",np.c_,np.hstack
1,porto-seguro-safe-driver-prediction,https://www.kaggle.com/ogrellier/xgb-classifier-upsampling-lb-0-283,"np.zeros((len(trn_df.columns), n_splits))","np.empty((len(trn_df.columns), n_splits)); r2[:]= 0",np.zeros,np.empty
1,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[0 == df.ps_calc_06, 'ps_calc_06']","df.ix[0 == df.ps_calc_06, 'ps_calc_06']",pd.DataFrame.loc,pd.DataFrame.ix
1,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,a_s.sum(),"np.count_nonzero(a_s,)",np.ndarray.sum,np.count_nonzero
0,predicting-red-hat-business-value,https://www.kaggle.com/happycube/python-ver-of-group-1-and-date-trick,np.where(~g.isnull()),np.nonzero(~g.isnull()),np.where,np.nonzero
1,predicting-red-hat-business-value,https://www.kaggle.com/scirpus/gp-lb-0-984930,"submission.loc[visibletest.outcome__grpdate == 0.0, 'outcome']","submission.ix[visibletest.outcome__grpdate == 0.0, 'outcome']",pd.DataFrame.loc,pd.DataFrame.ix
1,predicting-red-hat-business-value,https://www.kaggle.com/scirpus/gp-plus-santander-style-heuristics,"submission.loc[test.char_38.values < 40, 'outcome']","submission.ix[test.char_38.values < 40, 'outcome']",pd.DataFrame.loc,pd.DataFrame.ix
0,prudential-life-insurance-assessment,https://www.kaggle.com/alexxanderlarko/xgb-offset0501,np.ones(num_classes),np.empty(num_classes); r2.fill(1),np.ones,np.empty
0,prudential-life-insurance-assessment,https://www.kaggle.com/heaviside9/sklearn-linear-regression-benchmark,np.sum(E),(E).sum(),np.sum,np.ndarray.sum
0,prudential-life-insurance-assessment,https://www.kaggle.com/heaviside9/sklearn-linear-regression-benchmark,np.sum(E),(E).sum(),np.sum,np.ndarray.sum
0,prudential-life-insurance-assessment,https://www.kaggle.com/heaviside9/sklearn-linear-regression-benchmark,np.sum(E),(E).sum(),np.sum,np.ndarray.sum
0,prudential-life-insurance-assessment,https://www.kaggle.com/janekk/xgboost-with-optimized-offsets,np.ones(num_classes),np.empty(num_classes); r2.fill(1),np.ones,np.empty
0,prudential-life-insurance-assessment,https://www.kaggle.com/janekk/xgboost-with-optimized-offsets,"np.vstack((train_preds, train_preds, train['Response'].values))","np.column_stack((train_preds.T, train_preds.T, train['Response'].values.T)).T",np.vstack,np.column_stack
0,prudential-life-insurance-assessment,https://www.kaggle.com/justinabel/prud-1,"train_sample.ix[:, ('Response')]","train_sample.loc[:, ('Response')]",pd.DataFrame.ix,pd.DataFrame.loc
0,prudential-life-insurance-assessment,https://www.kaggle.com/justinabel/prud-1,"X.ix[:, (column)]","X.loc[:, (column)]",pd.DataFrame.ix,pd.DataFrame.loc
0,prudential-life-insurance-assessment,https://www.kaggle.com/justinabel/prud-1,"X.ix[:, (column)]","X.loc[:, (column)]",pd.DataFrame.ix,pd.DataFrame.loc
0,prudential-life-insurance-assessment,https://www.kaggle.com/justinabel/prud-1,"X.ix[nans, column]","X.loc[nans, column]",pd.DataFrame.ix,pd.DataFrame.loc
0,prudential-life-insurance-assessment,https://www.kaggle.com/justinabel/prud-1,"test_sample.ix[:, (column)]","test_sample.loc[:, (column)]",pd.DataFrame.ix,pd.DataFrame.loc
0,prudential-life-insurance-assessment,https://www.kaggle.com/justinabel/prud-1,"test_sample.ix[:, (column)]","test_sample.loc[:, (column)]",pd.DataFrame.ix,pd.DataFrame.loc
0,prudential-life-insurance-assessment,https://www.kaggle.com/justinabel/prud-1,"test_sample.ix[nans, column]","test_sample.loc[nans, column]",pd.DataFrame.ix,pd.DataFrame.loc
0,prudential-life-insurance-assessment,https://www.kaggle.com/justinabel/prud-1,"train.ix[10001:10010, ('Response')]","train.loc[10001:10010, ('Response')]",pd.DataFrame.ix,pd.DataFrame.loc
0,prudential-life-insurance-assessment,https://www.kaggle.com/lifepreserver/simple-sklearn-randomforestclassifier,df[col].apply(lambda x: hash(str(x))),df[col].map(lambda x: hash(str(x))),pd.Series.apply,pd.Series.map
0,prudential-life-insurance-assessment,https://www.kaggle.com/michaelpawlus/testing-run-errors,all_data.Product_Info_2.str[0],all_data.Product_Info_2.map(lambda x: x[0]),pd.Series.str,pd.Series.map
0,prudential-life-insurance-assessment,https://www.kaggle.com/michaelpawlus/testing-run-errors,all_data.Product_Info_2.str[1],all_data.Product_Info_2.map(lambda x: x[1]),pd.Series.str,pd.Series.map
0,prudential-life-insurance-assessment,https://www.kaggle.com/scirpus/genetic-programming-ii-lb-0-662,train.Product_Info_2.str[1:],train.Product_Info_2.map(lambda x: x[1:]),pd.Series.str,pd.Series.map
0,prudential-life-insurance-assessment,https://www.kaggle.com/scirpus/genetic-programming-ii-lb-0-662,train.Product_Info_2.str[0],train.Product_Info_2.map(lambda x: x[0]),pd.Series.str,pd.Series.map
0,prudential-life-insurance-assessment,https://www.kaggle.com/scirpus/genetic-programming-ii-lb-0-662,test.Product_Info_2.str[0],test.Product_Info_2.map(lambda x: x[0]),pd.Series.str,pd.Series.map
0,prudential-life-insurance-assessment,https://www.kaggle.com/yangnanhai/testtest,"np.vstack((train_preds, train_preds, train['Response'].values))","np.column_stack((train_preds.T, train_preds.T, train['Response'].values.T)).T",np.vstack,np.column_stack
0,prudential-life-insurance-assessment,https://www.kaggle.com/yangnanhai/testtest,all_data.Product_Info_2.str[0],all_data.Product_Info_2.map(lambda x: x[0]),pd.Series.str,pd.Series.map
0,prudential-life-insurance-assessment,https://www.kaggle.com/yangnanhai/testtest,all_data.Product_Info_2.str[1],all_data.Product_Info_2.map(lambda x: x[1]),pd.Series.str,pd.Series.map
0,prudential-life-insurance-assessment,https://www.kaggle.com/zeroblue/xgboost-with-optimized-offsets,all_data.Product_Info_2.str[0],all_data.Product_Info_2.map(lambda x: x[0]),pd.Series.str,pd.Series.map
0,prudential-life-insurance-assessment,https://www.kaggle.com/zeroblue/xgboost-with-optimized-offsets,all_data.Product_Info_2.str[1],all_data.Product_Info_2.map(lambda x: x[1]),pd.Series.str,pd.Series.map
1,prudential-life-insurance-assessment,https://www.kaggle.com/justinabel/prud-1,train.ix[train_rows],train.loc[train_rows],pd.DataFrame.ix,pd.DataFrame.loc
1,prudential-life-insurance-assessment,https://www.kaggle.com/scirpus/genetic-programming-ii-lb-0-662,test.Product_Info_2.str[1:],test.Product_Info_2.map(lambda x: x[1:]),pd.Series.str,pd.Series.map
1,prudential-life-insurance-assessment,https://www.kaggle.com/yangnanhai/testtest,"np.vstack((test_preds, test_preds, test['Response'].values))","np.column_stack((test_preds.T, test_preds.T, test['Response'].values.T)).T",np.vstack,np.column_stack
0,pubg-finish-placement-prediction,https://www.kaggle.com/albytho/pubg-prediction-ann-implementation,"df_train.loc[:, (['winPlacePerc'])]","df_train.ix[:, (['winPlacePerc'])]",pd.DataFrame.loc,pd.DataFrame.ix
0,pubg-finish-placement-prediction,https://www.kaggle.com/albytho/pubg-prediction-ann-implementation,"df_test.loc[:, :]","df_test.ix[:, :]",pd.DataFrame.loc,pd.DataFrame.ix
0,pubg-finish-placement-prediction,https://www.kaggle.com/iwasred/pubg-finish-placement-prediction-1,"train_data.loc[:, (l)]","train_data.ix[:, (l)]",pd.DataFrame.loc,pd.DataFrame.ix
0,pubg-finish-placement-prediction,https://www.kaggle.com/nithin98/pubg-v5,np.sum(eig_val),(eig_val).sum(),np.sum,np.ndarray.sum
1,pubg-finish-placement-prediction,https://www.kaggle.com/albytho/pubg-prediction-ann-implementation,"df_train.loc[:, :]","df_train.ix[:, :]",pd.DataFrame.loc,pd.DataFrame.ix
1,pubg-finish-placement-prediction,https://www.kaggle.com/ceshine/pytorch-baseline-model,"df.loc[df.rankPoints < 0, 'rankPoints']","df.ix[df.rankPoints < 0, 'rankPoints']",pd.DataFrame.loc,pd.DataFrame.ix
1,pubg-finish-placement-prediction,https://www.kaggle.com/ceshine/pytorch-baseline-model,df[col].astype(np.float64),df[col].apply(np.float64),pd.Series.astype,pd.Series.apply
0,quora-question-pairs,https://www.kaggle.com/chechir/export-feats-kernel,np.sum(shared_weights),"np.einsum('i->',shared_weights)",np.sum,np.einsum
1,quora-question-pairs,https://www.kaggle.com/techaware/quora-1,pd.Series(df_dup['question1'].tolist()).astype(str),pd.Series(df_dup['question1'].tolist()).apply(str),pd.Series.astype,pd.Series.apply
0,recruit-restaurant-visitor-forecasting,https://www.kaggle.com/plantsgo/solution-public-0-471-private-0-505,np.sum(pr * weight),"np.einsum('i->',pr * weight)",np.sum,np.einsum
0,recruit-restaurant-visitor-forecasting,https://www.kaggle.com/tflana/simple-keras-feed-fwd-nn,np.array(full_df[coln]),np.concatenate([full_df[coln]]),np.array,np.concatenate
1,recruit-restaurant-visitor-forecasting,https://www.kaggle.com/gvyshnya/basic-prophet-ts-forecasting-framework,air_visit_data.query('air_store_id ==  + current_store_id + '),air_visit_data.loc[air_visit_data.air_store_id ==  current_store_id ],pd.DataFrame.query,pd.DataFrame.loc
1,recruit-restaurant-visitor-forecasting,https://www.kaggle.com/hubifeng/jack-japan-s-python-version,date_info.calendar_date.dt.weekday.map(week_dict),date_info.calendar_date.dt.weekday.replace(week_dict),pd.Series.map,pd.Series.replace
1,recruit-restaurant-visitor-forecasting,https://www.kaggle.com/riteshsinha/single-xgboost-model-public-lb-481,"date_info.loc[wkend_holidays, 'holiday_flg']","date_info.ix[wkend_holidays, 'holiday_flg']",pd.DataFrame.loc,pd.DataFrame.ix
0,rossmann-store-sales,https://www.kaggle.com/inpefess/xgboost-in-python-with-rmspe,"data.loc[data['StateHoliday'] == 'a', 'StateHoliday']","data.ix[data['StateHoliday'] == 'a', 'StateHoliday']",pd.DataFrame.loc,pd.DataFrame.ix
0,rossmann-store-sales,https://www.kaggle.com/justdoit/xgboost-in-python-with-rmspe,df[featureCol].map(lambda x: 1 if x == val else 0),"np.where( df[featureCol] == val , 1 ,0)",pd.Series.map,np.where
0,rossmann-store-sales,https://www.kaggle.com/justdoit/xgboost-in-python-with-rmspe,data['StoreType'].map(lambda y: 1 if y == x else 0),"np.where( data['StoreType'] == x , 1 ,0)",pd.Series.map,np.where
0,rossmann-store-sales,https://www.kaggle.com/saihttam/understanding-rmspe,"np.ones(shape=(nsamples, 1))","np.empty(shape=(nsamples, 1)); r2.fill(1)",np.ones,np.empty
0,rossmann-store-sales,https://www.kaggle.com/vinhnguyen/evolutionary-algorithms-for-param-tuning,df[featureCol].map(lambda x: 1 if x == val else 0),"np.where( df[featureCol] == val , 1 ,0)",pd.Series.map,np.where
0,rossmann-store-sales,https://www.kaggle.com/vinhnguyen/evolutionary-algorithms-for-param-tuning,data['StoreType'].map(lambda y: 1 if y == x else 0),"np.where( data['StoreType'] == x , 1 ,0)",pd.Series.map,np.where
1,rossmann-store-sales,https://www.kaggle.com/cast42/xgboost-extra-features,"data.loc[data.Open.isnull(), 'Open']","data.ix[data.Open.isnull(), 'Open']",pd.DataFrame.loc,pd.DataFrame.ix
1,rossmann-store-sales,https://www.kaggle.com/dvasyukova/predict-sales-with-pandas-py,"test.loc[test.Open.isnull(), 'Open']","test.ix[test.Open.isnull(), 'Open']",pd.DataFrame.loc,pd.DataFrame.ix
1,rossmann-store-sales,https://www.kaggle.com/inpefess/xgboost-in-python-with-rmspe,"data.loc[data['StateHoliday'] == 'b', 'StateHoliday']","data.ix[data['StateHoliday'] == 'b', 'StateHoliday']",pd.DataFrame.loc,pd.DataFrame.ix
1,rossmann-store-sales,https://www.kaggle.com/zygmunt/predict-sales-with-pandas-py,"test2.loc[test2.Open == 0, 'Sales']","test2.ix[test2.Open == 0, 'Sales']",pd.DataFrame.loc,pd.DataFrame.ix
0,santa-gift-matching,https://www.kaggle.com/batzner/small-dataset-generator,np.where(gift_pref[child_id] == gift_id),np.nonzero(gift_pref[child_id] == gift_id),np.where,np.nonzero
0,santa-gift-matching,https://www.kaggle.com/zeta2191622/how-to-get-a-score-of-0-894-in-two-minutes,"np.full((1000000, 1000), -1, dtype=np.int16)","np.empty((1000000, 1000), dtype=np.int16) ; r2[:] = -1",np.full,np.empty
0,santa-gift-matching,https://www.kaggle.com/zeta2191622/how-to-get-a-score-of-0-894-in-two-minutes,"np.full((1000, 1000000), -1, dtype=np.int16)","np.empty((1000, 1000000), dtype=np.int16) ; r2[:] = -1",np.full,np.empty
1,santa-gift-matching,https://www.kaggle.com/batzner/small-dataset-generator,np.where(child_pref[gift_id] == child_id),np.nonzero(child_pref[gift_id] == child_id),np.where,np.nonzero
1,santa-gift-matching,https://www.kaggle.com/zfturbo/greedy-children-baseline-v2-0-7455,np.where(wish[child_id] == gift_id),np.nonzero(wish[child_id] == gift_id),np.where,np.nonzero
0,santander-customer-satisfaction,https://www.kaggle.com/cast42/calibratedcv-xgboost,np.sum(y == 1),np.count_nonzero(y == 1),np.sum,np.count_nonzero
0,santander-customer-satisfaction,https://www.kaggle.com/cast42/calibratedcv-xgboost,np.sum(y == 0),np.count_nonzero(y == 0),np.sum,np.count_nonzero
0,santander-customer-satisfaction,https://www.kaggle.com/cast42/calibratedcv-xgboost,np.sum(y == 1),(y == 1).sum(),np.sum,np.ndarray.sum
0,santander-customer-satisfaction,https://www.kaggle.com/gilbar/visualizing-data,"train.loc[:, (keep)]","train.ix[:, (keep)]",pd.DataFrame.loc,pd.DataFrame.ix
0,santander-customer-satisfaction,https://www.kaggle.com/tuomastik/pca-visualization,np.where(y_train == class_ix),np.nonzero(y_train == class_ix),np.where,np.nonzero
1,santander-customer-satisfaction,https://www.kaggle.com/brajen259/pca-and-xgb,"test.loc[test[f] < lim, f]","test.ix[test[f] < lim, f]",pd.DataFrame.loc,pd.DataFrame.ix
1,santander-customer-satisfaction,https://www.kaggle.com/ganliu/testwhy,"train.loc[train['TARGET'] == 1, features + ['TARGET']]","train.ix[train['TARGET'] == 1, features + ['TARGET']]",pd.DataFrame.loc,pd.DataFrame.ix
1,santander-customer-satisfaction,https://www.kaggle.com/gilbar/visualizing-data,"X.loc[:, (ranges > 1000)]","X.ix[:, (ranges > 1000)]",pd.DataFrame.loc,pd.DataFrame.ix
1,santander-customer-satisfaction,https://www.kaggle.com/gouxute1/xgboost-and-simple-data-cleaning,"df_train.loc[df_train['n0'] == 0, 'n0']","df_train.ix[df_train['n0'] == 0, 'n0']",pd.DataFrame.loc,pd.DataFrame.ix
1,santander-customer-satisfaction,https://www.kaggle.com/inversion/pls-visualization-2,np.where(y_train == class_ix),np.nonzero(y_train == class_ix),np.where,np.nonzero
1,santander-customer-satisfaction,https://www.kaggle.com/scirpus/3-little-models,a_s.sum(),"np.sum(a_s,)",np.ndarray.sum,np.sum
0,santander-product-recommendation,https://www.kaggle.com/demoonism/rf-multilabel-framework-lb-0-022475,"np.hstack([train_X, temp_train_X])","np.append(train_X, temp_train_X, axis=1)",np.hstack,np.append
0,santander-product-recommendation,https://www.kaggle.com/demoonism/rf-multilabel-framework-lb-0-022475,"np.hstack([test_X, temp_test_X])","np.append(test_X, temp_test_X, axis=1)",np.hstack,np.append
0,santander-product-recommendation,https://www.kaggle.com/demoonism/rf-multilabel-framework-lb-0-022475,"np.hstack([train_X, temp_train_X])","np.concatenate([train_X, temp_train_X], axis=1)",np.hstack,np.concatenate
0,santander-product-recommendation,https://www.kaggle.com/demoonism/rf-multilabel-framework-lb-0-022475,"np.hstack([test_X, temp_test_X])","np.concatenate([test_X, temp_test_X], axis=1)",np.hstack,np.concatenate
0,santander-product-recommendation,https://www.kaggle.com/sudalairajkumar/rf-multilabel-framework-lb-0-022475,"np.hstack([train_X, temp_train_X])","np.append(train_X, temp_train_X, axis=1)",np.hstack,np.append
0,santander-product-recommendation,https://www.kaggle.com/sudalairajkumar/rf-multilabel-framework-lb-0-022475,"np.hstack([train_X, temp_train_X])","np.concatenate([train_X, temp_train_X], axis=1)",np.hstack,np.concatenate
0,santander-product-recommendation,https://www.kaggle.com/sudalairajkumar/rf-multilabel-framework-lb-0-022475,"np.hstack([test_X, temp_test_X])","np.concatenate([test_X, temp_test_X], axis=1)",np.hstack,np.concatenate
0,santander-product-recommendation,https://www.kaggle.com/wrosinski/boosted-python-xgb-starter-0-0223532-lb,"np.hstack([test_X, temp_test_X])","np.append(test_X, temp_test_X, axis=1)",np.hstack,np.append
0,santander-product-recommendation,https://www.kaggle.com/wrosinski/boosted-python-xgb-starter-0-0223532-lb,"np.hstack([train_X, temp_train_X])","np.concatenate([train_X, temp_train_X], axis=1)",np.hstack,np.concatenate
1,santander-product-recommendation,https://www.kaggle.com/amznit/rf-multilabel-framework-lb-0-022475,"np.hstack([train_X, temp_train_X])","np.append(train_X, temp_train_X, axis=1)",np.hstack,np.append
1,santander-product-recommendation,https://www.kaggle.com/amznit/rf-multilabel-framework-lb-0-022475,"np.hstack([train_X, temp_train_X])","np.concatenate([train_X, temp_train_X], axis=1)",np.hstack,np.concatenate
1,santander-product-recommendation,https://www.kaggle.com/smartbao/item-recomm2,"y_train.loc[:, (i)]","y_train.ix[:, (i)]",pd.DataFrame.loc,pd.DataFrame.ix
1,santander-product-recommendation,https://www.kaggle.com/sudalairajkumar/rf-multilabel-framework-lb-0-022475,"np.hstack([test_X, temp_test_X])","np.append(test_X, temp_test_X, axis=1)",np.hstack,np.append
1,santander-product-recommendation,https://www.kaggle.com/wrosinski/boosted-python-xgb-starter-0-0223532-lb,"np.hstack([train_X, temp_train_X])","np.append(train_X, temp_train_X, axis=1)",np.hstack,np.append
0,santander-value-prediction-challenge,https://www.kaggle.com/prashantkikani/ensembling-has-always-been-the-answer,"df.loc[(testdex), :]","df.ix[(testdex), :]",pd.DataFrame.loc,pd.DataFrame.ix
0,santander-value-prediction-challenge,https://www.kaggle.com/prashantkikani/ensembling-has-always-been-the-answer,"df.loc[traindex, vocab]","df.ix[traindex, vocab]",pd.DataFrame.loc,pd.DataFrame.ix
0,santander-value-prediction-challenge,https://www.kaggle.com/prashantkikani/ensembling-has-always-been-the-answer,train.ix[trn_idx],train.loc[trn_idx],pd.DataFrame.ix,pd.DataFrame.loc
0,santander-value-prediction-challenge,https://www.kaggle.com/prashantkikani/ensembling-has-always-been-the-answer,train.ix[val_idx],train.loc[val_idx],pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/jiwon-small-improvements-for-magic-number-results,"test.loc[equal_index, 'full_sq']","test.ix[equal_index, 'full_sq']",pd.DataFrame.loc,pd.DataFrame.ix
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/jiwon-small-improvements-for-magic-number-results,"train.loc[kitch_is_build_year, 'build_year']","train.ix[kitch_is_build_year, 'build_year']",pd.DataFrame.loc,pd.DataFrame.ix
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/azuralrainbow/summer,np.sum(probs ** 2),"np.einsum('i->',probs ** 2)",np.sum,np.einsum
0,sberbank-russian-housing-market,https://www.kaggle.com/azuralrainbow/summer,np.sum(probs ** 2),(probs ** 2).sum(),np.sum,np.ndarray.sum
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/cjansen/magic-numbers-private-lb-0-31647,"train.loc[bad_index, ['max_floor', 'floor']]","train.ix[bad_index, ['max_floor', 'floor']]",pd.DataFrame.loc,pd.DataFrame.ix
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,train['ratio_life_sq_full_sq'].ix[train['ratio_life_sq_full_sq'] < 0],train['ratio_life_sq_full_sq'].loc[train['ratio_life_sq_full_sq'] < 0],pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,train['ratio_life_sq_full_sq'].ix[train['ratio_life_sq_full_sq'] > 1],train['ratio_life_sq_full_sq'].loc[train['ratio_life_sq_full_sq'] > 1],pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,test['ratio_life_sq_full_sq'].ix[test['ratio_life_sq_full_sq'] < 0],test['ratio_life_sq_full_sq'].loc[test['ratio_life_sq_full_sq'] < 0],pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,test['ratio_life_sq_full_sq'].ix[test['ratio_life_sq_full_sq'] > 1],test['ratio_life_sq_full_sq'].loc[test['ratio_life_sq_full_sq'] > 1],pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,test['ratio_kitch_sq_life_sq'].ix[test['ratio_kitch_sq_life_sq'] < 0],test['ratio_kitch_sq_life_sq'].loc[test['ratio_kitch_sq_life_sq'] < 0],pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,test['ratio_kitch_sq_life_sq'].ix[test['ratio_kitch_sq_life_sq'] > 1],test['ratio_kitch_sq_life_sq'].loc[test['ratio_kitch_sq_life_sq'] > 1],pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,train['ratio_kitch_sq_full_sq'].ix[train['ratio_kitch_sq_full_sq'] < 0],train['ratio_kitch_sq_full_sq'].loc[train['ratio_kitch_sq_full_sq'] < 0],pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,train['ratio_kitch_sq_full_sq'].ix[train['ratio_kitch_sq_full_sq'] > 1],train['ratio_kitch_sq_full_sq'].loc[train['ratio_kitch_sq_full_sq'] > 1],pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,test['ratio_kitch_sq_full_sq'].ix[test['ratio_kitch_sq_full_sq'] < 0],test['ratio_kitch_sq_full_sq'].loc[test['ratio_kitch_sq_full_sq'] < 0],pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,train['price_doc'].ix[train['price_doc'] > int(2.5 * np.exp(supbdd))],train['price_doc'].loc[train['price_doc'] > int(2.5 * np.exp(supbdd))],pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,train['price_doc'].ix[train['price_doc'] < int(np.exp(13.5))],train['price_doc'].loc[train['price_doc'] < int(np.exp(13.5))],pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/v81msk/test1,"df.loc[df['ecology'] == 'no data', ['ecology', 'industrial_km']]","df.ix[df['ecology'] == 'no data', ['ecology', 'industrial_km']]",pd.DataFrame.loc,pd.DataFrame.ix
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,train['price_doc'].ix[train['price_doc'] > int(2.5 * np.exp(supbdd))],train['price_doc'].loc[train['price_doc'] > int(2.5 * np.exp(supbdd))],pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,train['price_doc'].ix[train['price_doc'] < int(np.exp(13.5))],train['price_doc'].loc[train['price_doc'] < int(np.exp(13.5))],pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']",pd.DataFrame.ix,pd.DataFrame.loc
0,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']",pd.DataFrame.ix,pd.DataFrame.loc
1,sberbank-russian-housing-market,https://www.kaggle.com/aharless/jiwon-small-improvements-for-magic-number-results,"train.loc[bad_index, 'life_sq']","train.ix[bad_index, 'life_sq']",pd.DataFrame.loc,pd.DataFrame.ix
1,sberbank-russian-housing-market,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.loc[train.full_sq == 0, 'full_sq']","train.ix[train.full_sq == 0, 'full_sq']",pd.DataFrame.loc,pd.DataFrame.ix
1,sberbank-russian-housing-market,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']",pd.DataFrame.ix,pd.DataFrame.loc
1,sberbank-russian-housing-market,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
1,sberbank-russian-housing-market,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
1,sberbank-russian-housing-market,https://www.kaggle.com/cjansen/magic-numbers-private-lb-0-31647,"train.loc[bad_index, 'num_room']","train.ix[bad_index, 'num_room']",pd.DataFrame.loc,pd.DataFrame.ix
1,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,train['ratio_kitch_sq_life_sq'].ix[train['ratio_kitch_sq_life_sq'] < 0],train['ratio_kitch_sq_life_sq'].loc[train['ratio_kitch_sq_life_sq'] < 0],pd.DataFrame.ix,pd.DataFrame.loc
1,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
1,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
1,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
1,sberbank-russian-housing-market,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
1,sberbank-russian-housing-market,https://www.kaggle.com/maheshak04/xgb-with-nan-and-other-cleaning-25052017,"df_train.loc[df_train.full_sq == 0, 'full_sq']","df_train.ix[df_train.full_sq == 0, 'full_sq']",pd.DataFrame.loc,pd.DataFrame.ix
1,sberbank-russian-housing-market,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']",pd.DataFrame.ix,pd.DataFrame.loc
1,sberbank-russian-housing-market,https://www.kaggle.com/v81msk/test1,"df.loc[df['product_type'] == 'OwnerOccupier', 'a_pt']","df.ix[df['product_type'] == 'OwnerOccupier', 'a_pt']",pd.DataFrame.loc,pd.DataFrame.ix
1,sberbank-russian-housing-market,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.ix,pd.DataFrame.loc
0,sf-crime,https://www.kaggle.com/lesibius/naive-bayes-time-only,"df_train_pred.ix[df_train_pred.Year == 2003, 'Category']","df_train_pred.loc[df_train_pred.Year == 2003, 'Category']",pd.DataFrame.ix,pd.DataFrame.loc
0,sf-crime,https://www.kaggle.com/lesibius/naive-bayes-time-only,"df_test.ix[df_test.Year == y, 'Id']","df_test.loc[df_test.Year == y, 'Id']",pd.DataFrame.ix,pd.DataFrame.loc
0,sf-crime,https://www.kaggle.com/lesibius/naive-bayes-time-only,"df_train_pred.ix[df_train_pred.Year == y1, 'Category']","df_train_pred.loc[df_train_pred.Year == y1, 'Category']",pd.DataFrame.ix,pd.DataFrame.loc
0,sf-crime,https://www.kaggle.com/lesibius/naive-bayes-time-only,"df_test.ix[df_test.Year == y2, 'Id']","df_test.loc[df_test.Year == y2, 'Id']",pd.DataFrame.ix,pd.DataFrame.loc
0,sf-crime,https://www.kaggle.com/lesibius/naive-bayes-time-only,"df_train.loc[:, (['Year', 'Category'])]","df_train.ix[:, (['Year', 'Category'])]",pd.DataFrame.loc,pd.DataFrame.ix
0,sf-crime,https://www.kaggle.com/lesibius/naive-bayes-time-only,"df_test.loc[:, (['Id', 'Year', 'Hour', 'Month', 'DayOfWeek'])]","df_test.ix[:, (['Id', 'Year', 'Hour', 'Month', 'DayOfWeek'])]",pd.DataFrame.loc,pd.DataFrame.ix
0,sf-crime,https://www.kaggle.com/lesibius/time-only-sv,"df_train.ix[:, 1:]","df_train.iloc[:, 1:]",pd.DataFrame.ix,pd.DataFrame.iloc
0,sf-crime,https://www.kaggle.com/lesibius/time-only-sv,"df_train_pred.ix[:, ('Category')]","df_train_pred.loc[:, ('Category')]",pd.DataFrame.ix,pd.DataFrame.loc
0,sf-crime,https://www.kaggle.com/lesibius/time-only-sv,"df_test.loc[:, (['Id', 'Year', 'Hour', 'Month', 'DayOfWeek', 'X', 'Y'])]","df_test.ix[:, (['Id', 'Year', 'Hour', 'Month', 'DayOfWeek', 'X', 'Y'])]",pd.DataFrame.loc,pd.DataFrame.ix
0,sf-crime,https://www.kaggle.com/papadopc/neural-nets-and-address-featurization,"address_features.ix[:, :]","address_features.loc[:, :]",pd.DataFrame.ix,pd.DataFrame.loc
0,sf-crime,https://www.kaggle.com/papadopc/neural-nets-and-address-featurization,"dummy_ranks_DAY.ix[:, :]","dummy_ranks_DAY.loc[:, :]",pd.DataFrame.ix,pd.DataFrame.loc
0,sf-crime,https://www.kaggle.com/papadopc/neural-nets-and-address-featurization,"dummy_ranks_PD.ix[:, :]","dummy_ranks_PD.loc[:, :]",pd.DataFrame.ix,pd.DataFrame.loc
1,sf-crime,https://www.kaggle.com/careyai/san-fran-crime,"train.loc[train.X < -122.51093037786198, 'X']","train.ix[train.X < -122.51093037786198, 'X']",pd.DataFrame.loc,pd.DataFrame.ix
1,sf-crime,https://www.kaggle.com/dollardollar/importance-of-address-features,"train.loc[:, ('Category')]","train.ix[:, ('Category')]",pd.DataFrame.loc,pd.DataFrame.ix
1,sf-crime,https://www.kaggle.com/dollardollar/importance-of-address-features,np.zeros(merged_data.shape),np.empty(merged_data.shape); r2[:]= 0,np.zeros,np.empty
1,sf-crime,https://www.kaggle.com/lesibius/naive-bayes-time-only,"df_train.loc[:, ('Hour')]","df_train.ix[:, ('Hour')]",pd.DataFrame.loc,pd.DataFrame.ix
1,sf-crime,https://www.kaggle.com/lesibius/time-only-sv,"df_test.ix[:, 2:]","df_test.iloc[:, 2:]",pd.DataFrame.ix,pd.DataFrame.iloc
1,sf-crime,https://www.kaggle.com/lesibius/time-only-sv,"df_train.loc[:, (['Year', 'Hour', 'Month', 'DayOfWeek', 'X', 'Y'])]","df_train.ix[:, (['Year', 'Hour', 'Month', 'DayOfWeek', 'X', 'Y'])]",pd.DataFrame.loc,pd.DataFrame.ix
1,sf-crime,https://www.kaggle.com/lllinger/crimedistribution-temporal-spatial,"train_data.loc[:, ('Dates')]","train_data.ix[:, ('Dates')]",pd.DataFrame.loc,pd.DataFrame.ix
0,shelter-animal-outcomes,https://www.kaggle.com/izzul02/age-gender-breed-and-name-vs-outcome,np.sum(feature_values_cat[outcome_cat == unique_outcomes[i]].isnull()),np.count_nonzero(feature_values_cat[outcome_cat == unique_outcomes[i]].isnull()),np.sum,np.count_nonzero
0,shelter-animal-outcomes,https://www.kaggle.com/izzul02/age-gender-breed-and-name-vs-outcome,np.sum(feature_values_cat[outcome_cat == unique_outcomes[i]].notnull()),np.count_nonzero(feature_values_cat[outcome_cat == unique_outcomes[i]].notnull()),np.sum,np.count_nonzero
0,shelter-animal-outcomes,https://www.kaggle.com/izzul02/age-gender-breed-and-name-vs-outcome,np.sum(feature_values_dog[outcome_dog == unique_outcomes[i]].isnull()),np.count_nonzero(feature_values_dog[outcome_dog == unique_outcomes[i]].isnull()),np.sum,np.count_nonzero
0,shelter-animal-outcomes,https://www.kaggle.com/izzul02/age-gender-breed-and-name-vs-outcome,np.sum(feature_values_dog[outcome_dog == unique_outcomes[i]].notnull()),np.count_nonzero(feature_values_dog[outcome_dog == unique_outcomes[i]].notnull()),np.sum,np.count_nonzero
0,shelter-animal-outcomes,https://www.kaggle.com/izzul02/age-gender-breed-and-name-vs-outcome,"np.sum(fractions_dog[1:, :1], axis=1)","np.einsum('ij->i',fractions_dog[1:, :1])",np.sum,np.einsum
0,shelter-animal-outcomes,https://www.kaggle.com/mhooreman/test-new-script,"tmp.loc[:, ([c for c in range(nBreedsMax)])]","tmp.ix[:, ([c for c in range(nBreedsMax)])]",pd.DataFrame.loc,pd.DataFrame.ix
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Aggressive', 'Aggressive']","train.loc[train.OutcomeSubtype == 'Aggressive', 'Aggressive']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'At Vet', 'At Vet']","train.loc[train.OutcomeSubtype == 'At Vet', 'At Vet']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Barn', 'Barn']","train.loc[train.OutcomeSubtype == 'Barn', 'Barn']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Behavior', 'Behavior']","train.loc[train.OutcomeSubtype == 'Behavior', 'Behavior']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Court/Investigation', 'Court/Investigation']","train.loc[train.OutcomeSubtype == 'Court/Investigation', 'Court/Investigation']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Enroute', 'Enroute']","train.loc[train.OutcomeSubtype == 'Enroute', 'Enroute']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Foster', 'Foster']","train.loc[train.OutcomeSubtype == 'Foster', 'Foster']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'In Foster', 'In Foster']","train.loc[train.OutcomeSubtype == 'In Foster', 'In Foster']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'In Kennel', 'In Kennel']","train.loc[train.OutcomeSubtype == 'In Kennel', 'In Kennel']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'In Surgery', 'In Surgery']","train.loc[train.OutcomeSubtype == 'In Surgery', 'In Surgery']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Medical', 'Medical']","train.loc[train.OutcomeSubtype == 'Medical', 'Medical']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Offsite', 'Offsite']","train.loc[train.OutcomeSubtype == 'Offsite', 'Offsite']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Partner', 'Partner']","train.loc[train.OutcomeSubtype == 'Partner', 'Partner']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Rabies Risk', 'Rabies Risk']","train.loc[train.OutcomeSubtype == 'Rabies Risk', 'Rabies Risk']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'SCRP', 'SCRP']","train.loc[train.OutcomeSubtype == 'SCRP', 'SCRP']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Suffering', 'Suffering']","train.loc[train.OutcomeSubtype == 'Suffering', 'Suffering']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeType == 'Return_to_owner', 'Target']","train.loc[train.OutcomeType == 'Return_to_owner', 'Target']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeType == 'Euthanasia', 'Target']","train.loc[train.OutcomeType == 'Euthanasia', 'Target']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeType == 'Adoption', 'Target']","train.loc[train.OutcomeType == 'Adoption', 'Target']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeType == 'Transfer', 'Target']","train.loc[train.OutcomeType == 'Transfer', 'Target']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeType == 'Died', 'Target']","train.loc[train.OutcomeType == 'Died', 'Target']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.AnimalType == 'Dog', 'AnimalType_cat']","train.loc[train.AnimalType == 'Dog', 'AnimalType_cat']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.AnimalType == 'Cat', 'AnimalType_cat']","train.loc[train.AnimalType == 'Cat', 'AnimalType_cat']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.AnimalType == 'Dog', 'AnimalType_cat']","test.loc[test.AnimalType == 'Dog', 'AnimalType_cat']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.AnimalType == 'Cat', 'AnimalType_cat']","test.loc[test.AnimalType == 'Cat', 'AnimalType_cat']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Intact Female', 'SexuponOutcome_cat']","train.loc[train.SexuponOutcome == 'Intact Female', 'SexuponOutcome_cat']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Spayed Female', 'SexuponOutcome_cat']","train.loc[train.SexuponOutcome == 'Spayed Female', 'SexuponOutcome_cat']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Neutered Male', 'SexuponOutcome_cat']","train.loc[train.SexuponOutcome == 'Neutered Male', 'SexuponOutcome_cat']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Intact Male', 'SexuponOutcome_cat']","train.loc[train.SexuponOutcome == 'Intact Male', 'SexuponOutcome_cat']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Unknown', 'SexuponOutcome_cat']","train.loc[train.SexuponOutcome == 'Unknown', 'SexuponOutcome_cat']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Intact Female', 'SexuponOutcome_cat']","test.loc[test.SexuponOutcome == 'Intact Female', 'SexuponOutcome_cat']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Spayed Female', 'SexuponOutcome_cat']","test.loc[test.SexuponOutcome == 'Spayed Female', 'SexuponOutcome_cat']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Neutered Male', 'SexuponOutcome_cat']","test.loc[test.SexuponOutcome == 'Neutered Male', 'SexuponOutcome_cat']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Intact Male', 'SexuponOutcome_cat']","test.loc[test.SexuponOutcome == 'Intact Male', 'SexuponOutcome_cat']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Unknown', 'SexuponOutcome_cat']","test.loc[test.SexuponOutcome == 'Unknown', 'SexuponOutcome_cat']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Intact Female', 'Type_sex']","train.loc[train.SexuponOutcome == 'Intact Female', 'Type_sex']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Spayed Female', 'Type_sex']","train.loc[train.SexuponOutcome == 'Spayed Female', 'Type_sex']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Neutered Male', 'Type_sex']","train.loc[train.SexuponOutcome == 'Neutered Male', 'Type_sex']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Intact Male', 'Type_sex']","train.loc[train.SexuponOutcome == 'Intact Male', 'Type_sex']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Unknown', 'Type_sex']","train.loc[train.SexuponOutcome == 'Unknown', 'Type_sex']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Intact Female', 'Type_sex']","test.loc[test.SexuponOutcome == 'Intact Female', 'Type_sex']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Spayed Female', 'Type_sex']","test.loc[test.SexuponOutcome == 'Spayed Female', 'Type_sex']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Neutered Male', 'Type_sex']","test.loc[test.SexuponOutcome == 'Neutered Male', 'Type_sex']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Intact Male', 'Type_sex']","test.loc[test.SexuponOutcome == 'Intact Male', 'Type_sex']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Unknown', 'Type_sex']","test.loc[test.SexuponOutcome == 'Unknown', 'Type_sex']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Intact Female', 'sprayed']","train.loc[train.SexuponOutcome == 'Intact Female', 'sprayed']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Spayed Female', 'sprayed']","train.loc[train.SexuponOutcome == 'Spayed Female', 'sprayed']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Neutered Male', 'sprayed']","train.loc[train.SexuponOutcome == 'Neutered Male', 'sprayed']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Intact Male', 'sprayed']","train.loc[train.SexuponOutcome == 'Intact Male', 'sprayed']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Unknown', 'sprayed']","train.loc[train.SexuponOutcome == 'Unknown', 'sprayed']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Intact Female', 'sprayed']","test.loc[test.SexuponOutcome == 'Intact Female', 'sprayed']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Spayed Female', 'sprayed']","test.loc[test.SexuponOutcome == 'Spayed Female', 'sprayed']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Neutered Male', 'sprayed']","test.loc[test.SexuponOutcome == 'Neutered Male', 'sprayed']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Intact Male', 'sprayed']","test.loc[test.SexuponOutcome == 'Intact Male', 'sprayed']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Unknown', 'sprayed']","test.loc[test.SexuponOutcome == 'Unknown', 'sprayed']",pd.DataFrame.ix,pd.DataFrame.loc
0,shelter-animal-outcomes,https://www.kaggle.com/xiziling/deal-with,"np.hstack((pro_data, XL1))","np.append(pro_data, XL1, axis=1)",np.hstack,np.append
0,shelter-animal-outcomes,https://www.kaggle.com/xiziling/deal-with,"np.hstack((pro_data, XL1))","np.concatenate((pro_data, XL1), axis=1)",np.hstack,np.concatenate
1,shelter-animal-outcomes,https://www.kaggle.com/izzul02/age-gender-breed-and-name-vs-outcome,"df.loc[df['AnimalType'] == 'Dog', feature]","df.ix[df['AnimalType'] == 'Dog', feature]",pd.DataFrame.loc,pd.DataFrame.ix
1,shelter-animal-outcomes,https://www.kaggle.com/mhooreman/test-new-script,"tmp.loc[tmp[1].isin(('year', 'years')), 'years']","tmp.ix[tmp[1].isin(('year', 'years')), 'years']",pd.DataFrame.loc,pd.DataFrame.ix
1,shelter-animal-outcomes,https://www.kaggle.com/nishadi/breeds,"np.where(breeds_group[:, (0)] == i)","np.nonzero(breeds_group[:, (0)] == i)",np.where,np.nonzero
1,springleaf-marketing-response,https://www.kaggle.com/wawanco/data-ownership-numeric-features,"train.loc[:, (train.dtypes == 'int64')]","train.ix[:, (train.dtypes == 'int64')]",pd.DataFrame.loc,pd.DataFrame.ix
0,talkingdata-adtracking-fraud-detection,https://www.kaggle.com/judata/talkingdata-xgb-param-tuning-rdm-sampling,"np.sum(np.logical_and(y_pred == 1, y_test == 0))","np.count_nonzero(np.logical_and(y_pred == 1, y_test == 0))",np.sum,np.count_nonzero
0,talkingdata-mobile-user-demographics,https://www.kaggle.com/acyouzi/test-frist,np.ones(len(FLS)),np.empty(len(FLS)); r2.fill(1),np.ones,np.empty
0,talkingdata-mobile-user-demographics,https://www.kaggle.com/isaac7/talking-script1,np.ones(len(FLS)),np.empty(len(FLS)); r2.fill(1),np.ones,np.empty
0,talkingdata-mobile-user-demographics,https://www.kaggle.com/kumareshd/chicken-momos-plate-1,"e1.loc[e1.isnull()['appcounts'] == True, 'appcounts']","e1.ix[e1.isnull()['appcounts'] == True, 'appcounts']",pd.DataFrame.loc,pd.DataFrame.ix
0,talkingdata-mobile-user-demographics,https://www.kaggle.com/madraziw/mad-0721-1245,"np.c_[xx.ravel(), yy.ravel()]"," np.hstack([xx.ravel().reshape(len(xx.ravel()),1), yy.ravel().reshape(len(yy.ravel()),1)])",np.c_,np.hstack
0,talkingdata-mobile-user-demographics,https://www.kaggle.com/xiaoml/bag-of-app-id-python-2-27392,np.ones(len(FLS)),np.empty(len(FLS)); r2.fill(1),np.ones,np.empty
0,talkingdata-mobile-user-demographics,https://www.kaggle.com/zeroblue/xgb-boost-with-event-data,"df_train_event.loc[fold_mask, ['M', 'F']]","df_train_event.ix[fold_mask, ['M', 'F']]",pd.DataFrame.loc,pd.DataFrame.ix
0,talkingdata-mobile-user-demographics,https://www.kaggle.com/zhoulaiqing/feature-starter,np.ones(gatrain.shape[0]),np.empty(gatrain.shape[0]); r2.fill(1),np.ones,np.empty
0,talkingdata-mobile-user-demographics,https://www.kaggle.com/zhoulaiqing/feature-starter,np.ones(gatrain.shape[0]),np.empty(gatrain.shape[0]); r2.fill(1),np.ones,np.empty
1,talkingdata-mobile-user-demographics,https://www.kaggle.com/sajal0jain/delme-1,"events.loc[:, ('device_id')]","events.ix[:, ('device_id')]",pd.DataFrame.loc,pd.DataFrame.ix
1,talkingdata-mobile-user-demographics,https://www.kaggle.com/zeroblue/xgb-boost-with-event-data,"df_phone.loc[df_phone['device_id'].isin(infrequent), 'phone_brand']","df_phone.ix[df_phone['device_id'].isin(infrequent), 'phone_brand']",pd.DataFrame.loc,pd.DataFrame.ix
0,tap30challenge,https://www.kaggle.com/soroushj/tap30-challenge-random-forest-regressor,"np.array((hse, row, col, hod), dtype=np.int32)","np.fromiter((hse, row, col, hod), dtype=np.int32)",np.array,np.fromiter
0,titanic,https://www.kaggle.com/abrierly/nn-approach,"np.ones((1, m), dtype=np.float)","np.empty((1, m), dtype=np.float); r2.fill(1)",np.ones,np.empty
0,titanic,https://www.kaggle.com/adrianbureu/another-test,data.ix[891:],data.iloc[891:],pd.DataFrame.ix,pd.DataFrame.iloc
0,titanic,https://www.kaggle.com/alexai/competition1,combined.ix[train_rows + 1:],combined.iloc[train_rows + 1:],pd.DataFrame.ix,pd.DataFrame.iloc
0,titanic,https://www.kaggle.com/alexai/competition2,combined.ix[train_rows + 1:],combined.iloc[train_rows + 1:],pd.DataFrame.ix,pd.DataFrame.iloc
0,titanic,https://www.kaggle.com/alexai/competition3,combined.ix[train_rows + 1:],combined.iloc[train_rows + 1:],pd.DataFrame.ix,pd.DataFrame.iloc
0,titanic,https://www.kaggle.com/alexai/competition4,combined.ix[train_rows + 1:],combined.iloc[train_rows + 1:],pd.DataFrame.ix,pd.DataFrame.iloc
0,titanic,https://www.kaggle.com/alexai/competition5,combined.ix[train_rows + 1:],combined.iloc[train_rows + 1:],pd.DataFrame.ix,pd.DataFrame.iloc
0,titanic,https://www.kaggle.com/andywan/data-import,np.ones(len(age_col['Age'])),np.empty(len(age_col['Age'])); r2.fill(1),np.ones,np.empty
0,titanic,https://www.kaggle.com/anirban00727/titanic-survival-chances-prediction,combined.FamilySize.map(lambda s: 1 if s == 1 else 0),"np.where( combined.FamilySize == 1 , 1 ,0)",pd.Series.map,np.where
0,titanic,https://www.kaggle.com/anirban00727/titanic-survival-chances-prediction,combined.FamilySize.map(lambda s: 1 if s > 4 else 0),"np.where( combined.FamilySize > 4 , 1 ,0)",pd.Series.map,np.where
0,titanic,https://www.kaggle.com/arthurlpgc/first-tests,train.dot(Theta),"np.tensordot(train,Theta,axes=1)",np.ndarray.dot,np.tensordot
0,titanic,https://www.kaggle.com/arthurlpgc/first-tests,(anstrain - Pred).transpose().dot(train),"np.tensordot((anstrain - Pred).transpose(),train,axes=1)",np.ndarray.dot,np.tensordot
0,titanic,https://www.kaggle.com/arthurlpgc/first-tests,train.dot(Theta),"np.tensordot(train,Theta,axes=1)",np.ndarray.dot,np.tensordot
0,titanic,https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"df.ix[:, 'Sex':]","df.loc[:, 'Sex':]",pd.DataFrame.ix,pd.DataFrame.loc
0,titanic,https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"df1.ix[:, ('PassengerId')]","df1.loc[:, ('PassengerId')]",pd.DataFrame.ix,pd.DataFrame.loc
0,titanic,https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.hstack([X, bias])","np.append(X, bias, axis=1)",np.hstack,np.append
0,titanic,https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.hstack([X_test, bias1])","np.append(X_test, bias1, axis=1)",np.hstack,np.append
0,titanic,https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.hstack([Submit, Yhat])","np.append(Submit, Yhat, axis=1)",np.hstack,np.append
0,titanic,https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.hstack([X, bias])","np.concatenate([X, bias], axis=1)",np.hstack,np.concatenate
0,titanic,https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.hstack([X_test, bias1])","np.concatenate([X_test, bias1], axis=1)",np.hstack,np.concatenate
0,titanic,https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.hstack([Submit, Yhat])","np.concatenate([Submit, Yhat], axis=1)",np.hstack,np.concatenate
0,titanic,https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.ones((100, 1))","np.empty((100, 1)); r2.fill(1)",np.ones,np.empty
0,titanic,https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.vstack([X_train, X_class1])","np.concatenate([X_train, X_class1], axis=0)",np.vstack,np.concatenate
0,titanic,https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.vstack([Y_train, Y_class1])","np.concatenate([Y_train, Y_class1], axis=0)",np.vstack,np.concatenate
0,titanic,https://www.kaggle.com/bibhuti93/titanic-analysis-v1-0,"train_data.ix[:, 1:6]","train_data.iloc[:, 1:6]",pd.DataFrame.ix,pd.DataFrame.iloc
0,titanic,https://www.kaggle.com/bibhuti93/titanic-analysis-v1-0,"train_data.ix[:, (0)]","train_data.iloc[:, (0)]",pd.DataFrame.ix,pd.DataFrame.iloc
0,titanic,https://www.kaggle.com/bibhuti93/titanic-analysis-v1-0,"test_data.ix[:, 0:5]","test_data.iloc[:, 0:5]",pd.DataFrame.ix,pd.DataFrame.iloc
0,titanic,https://www.kaggle.com/bigdit/test00000,"test_df.ix[0:, 1:]","test_df.iloc[0:, 1:]",pd.DataFrame.ix,pd.DataFrame.iloc
0,titanic,https://www.kaggle.com/bigdit/test00000,"test_df.ix[:, (0)]","test_df.iloc[:, (0)]",pd.DataFrame.ix,pd.DataFrame.iloc
0,titanic,https://www.kaggle.com/bigdit/test00000,"np.c_[passengers, y0.astype(int)]","np.hstack([np.array(passengers).reshape(len(passengers),1), np.array(y0.astype(int)).reshape(len(passengers),1)])",np.c_,np.hstack
0,titanic,https://www.kaggle.com/canran/titanic-rf,"X_df.loc[:, ('Age')]","X_df.ix[:, ('Age')]",pd.DataFrame.loc,pd.DataFrame.ix
0,titanic,https://www.kaggle.com/computermage/test-titanic-survival-script,family['FamilySize'].map(lambda s: 1 if 5 <= s else 0),"np.where( 5 <= family['FamilySize'] , 1 ,0)",pd.Series.map,np.where
0,titanic,https://www.kaggle.com/cooleel/a-quick-try-of-h2o-automl-on-titanic-dataset,np.ones(data.shape[0]),np.empty(data.shape[0]); r2.fill(1),np.ones,np.empty
0,titanic,https://www.kaggle.com/corgicoffee/kernelb4bd873fab,"train_data.loc[:, (['Fare'])]","train_data.ix[:, (['Fare'])]",pd.DataFrame.loc,pd.DataFrame.ix
0,titanic,https://www.kaggle.com/corgicoffee/kernelb4bd873fab,"test_data.loc[:, (['Fare'])]","test_data.ix[:, (['Fare'])]",pd.DataFrame.loc,pd.DataFrame.ix
0,titanic,https://www.kaggle.com/davideng/titanic-attempt-1-random-forest,"np.where(y_pred[:] > 0.95, 1, 0)",(y_pred[:] > 0.95).astype((y_pred[:] > 0.95).dtype),np.where,np.ndarray.astype
0,titanic,https://www.kaggle.com/dexter22/testing,"train.loc[train['Age'].isnull(), ['Age']]","train.ix[train['Age'].isnull(), ['Age']]",pd.DataFrame.loc,pd.DataFrame.ix
0,titanic,https://www.kaggle.com/ekethio/titanic-second,"file.ix[file['Embarked'] == 'S', 'Embarked']","file.loc[file['Embarked'] == 'S', 'Embarked']",pd.DataFrame.ix,pd.DataFrame.loc
0,titanic,https://www.kaggle.com/ekethio/titanic-second,"file.ix[file['Embarked'] == 'C', 'Embarked']","file.loc[file['Embarked'] == 'C', 'Embarked']",pd.DataFrame.ix,pd.DataFrame.loc
0,titanic,https://www.kaggle.com/ekethio/titanic-second,"file.ix[file['Embarked'] == 'Q', 'Embarked']","file.loc[file['Embarked'] == 'Q', 'Embarked']",pd.DataFrame.ix,pd.DataFrame.loc
0,titanic,https://www.kaggle.com/ekethio/titanic-second,"file.ix[file.Age > 60, 'Above_50']","file.loc[file.Age > 60, 'Above_50']",pd.DataFrame.ix,pd.DataFrame.loc
0,titanic,https://www.kaggle.com/fzhurd/titanic-suvive20160924v4,combined['FamilySize'].map(lambda s: 1 if 5 <= s else 0),"np.where( 5 <= combined['FamilySize'] , 1 ,0)",pd.Series.map,np.where
0,titanic,https://www.kaggle.com/iviglious/teamysi-titanic-rf-a,"main_all_df.ix[main_all_df.Survived.isnull() == False, 'Survived']","main_all_df.loc[main_all_df.Survived.isnull() == False, 'Survived']",pd.DataFrame.ix,pd.DataFrame.loc
0,titanic,https://www.kaggle.com/jeshugames2/classification-using-svm,"np.hstack((p_id, y_pred))","np.append(p_id, y_pred, axis=1)",np.hstack,np.append
0,titanic,https://www.kaggle.com/jeshugames2/classification-using-svm,"np.hstack((p_id, y_pred))","np.concatenate((p_id, y_pred), axis=1)",np.hstack,np.concatenate
0,titanic,https://www.kaggle.com/knageswara78/my-tatanic-python-solution,np.nonzero(results['rank_test_%s' % scorer] == 1),np.where(results['rank_test_%s' % scorer] == 1),np.nonzero,np.where
0,titanic,https://www.kaggle.com/knageswara78/my-tatanic-python-solution,np.nonzero(results['rank_test_%s' % scorer] == 1),np.where(results['rank_test_%s' % scorer] == 1),np.nonzero,np.where
0,titanic,https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,np.transpose(1 - true_output_y).dot(np.log(1 - h)),"np.tensordot(np.transpose(1 - true_output_y),np.log(1 - h),axes=1)",np.ndarray.dot,np.tensordot
0,titanic,https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,np.transpose(-true_output_y).dot(np.log(h)),"np.tensordot(np.transpose(-true_output_y),np.log(h),axes=1)",np.ndarray.dot,np.tensordot
0,titanic,https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,input_x.dot(theta),"np.tensordot(input_x,theta,axes=1)",np.ndarray.dot,np.tensordot
0,titanic,https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,input_x.dot(theta),"np.tensordot(input_x,theta,axes=1)",np.ndarray.dot,np.tensordot
0,titanic,https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,"np.ones((train_x.shape[0], 1))","np.empty((train_x.shape[0], 1)); r2.fill(1)",np.ones,np.empty
0,titanic,https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,np.where(p >= 0.5),np.nonzero(p >= 0.5),np.where,np.nonzero
0,titanic,https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,np.where(p != true_output_y),np.nonzero(p != true_output_y),np.where,np.nonzero
0,titanic,https://www.kaggle.com/kyleingraham/titanic-survivor-prediction-scikit-learn,"X.loc[:, (X.columns[X.columns.isin(self.columns)])]","X.ix[:, (X.columns[X.columns.isin(self.columns)])]",pd.DataFrame.loc,pd.DataFrame.ix
0,titanic,https://www.kaggle.com/laparrala/first,data.ix[891:],data.iloc[891:],pd.DataFrame.ix,pd.DataFrame.iloc
0,titanic,https://www.kaggle.com/lindenlu/linden-titanic-script,train_df.query('Survived==1'),train_df.loc[train_df.Survived==1],pd.DataFrame.query,pd.DataFrame.loc
0,titanic,https://www.kaggle.com/luistangui/titanicpy,s.query('(Pclass == 1 or Pclass == 2) and Sex == 'female),"s.loc[s.Pclass.isin([1, 2]) & (s.Sex =='female')]",pd.DataFrame.query,pd.DataFrame.loc
0,titanic,https://www.kaggle.com/luistangui/titanicpy,s.query('Pclass == 3 and Sex == 'female' and (Embarked == 'C' or Embarked == 'Q')'),"s.loc[(s.Pclass == 3) & (s.Sex == 'female') & (s.Embarked.isin(['C','Q']))]",pd.DataFrame.query,pd.DataFrame.loc
0,titanic,https://www.kaggle.com/luistangui/titanicpy, s.query('Pclass == 3 and Sex == 'male' and Embarked == 'C' and Family > 0'), s.loc[(s.Pclass == 3 )&( s.Sex == 'male') &(s.Embarked == 'C') &( s.Family > 0)],pd.DataFrame.query,pd.DataFrame.loc
0,titanic,https://www.kaggle.com/melisbiyikli/titanic-data-sets,all_datas.ix[891:],all_datas.iloc[891:],pd.DataFrame.ix,pd.DataFrame.iloc
0,titanic,https://www.kaggle.com/melisbiyikli/titanic-data-sets,all_datas['FamilySize'].map(lambda s: 1 if 5 <= s else 0),"np.where( 5 <= all_datas['FamilySize'] , 1 ,0)",pd.Series.map,np.where
0,titanic,https://www.kaggle.com/mjyang/testw,"np.hstack([X, bias])","np.append(X, bias, axis=1)",np.hstack,np.append
0,titanic,https://www.kaggle.com/mjyang/testw,"np.hstack([X_test, bias1])","np.append(X_test, bias1, axis=1)",np.hstack,np.append
0,titanic,https://www.kaggle.com/mjyang/testw,"np.hstack([Submit, Yhat])","np.append(Submit, Yhat, axis=1)",np.hstack,np.append
0,titanic,https://www.kaggle.com/mjyang/testw,"np.hstack([X, bias])","np.concatenate([X, bias], axis=1)",np.hstack,np.concatenate
0,titanic,https://www.kaggle.com/mjyang/testw,"np.hstack([X_test, bias1])","np.concatenate([X_test, bias1], axis=1)",np.hstack,np.concatenate
0,titanic,https://www.kaggle.com/mjyang/testw,"np.hstack([Submit, Yhat])","np.concatenate([Submit, Yhat], axis=1)",np.hstack,np.concatenate
0,titanic,https://www.kaggle.com/mjyang/testw,"np.ones((100, 1))","np.empty((100, 1)); r2.fill(1)",np.ones,np.empty
0,titanic,https://www.kaggle.com/mjyang/testw,"np.vstack([X_train, X_class1])","np.column_stack((X_train.T, X_class1.T)).T",np.vstack,np.column_stack
0,titanic,https://www.kaggle.com/mjyang/testw,"np.vstack([Y_train, Y_class1])","np.column_stack((Y_train.T, Y_class1.T)).T",np.vstack,np.column_stack
0,titanic,https://www.kaggle.com/mjyang/testw,"np.vstack([X_train, X_class1])","np.concatenate([X_train, X_class1], axis=0)",np.vstack,np.concatenate
0,titanic,https://www.kaggle.com/mjyang/testw,"np.vstack([Y_train, Y_class1])","np.concatenate([Y_train, Y_class1], axis=0)",np.vstack,np.concatenate
0,titanic,https://www.kaggle.com/olttwa/titanic-logistic-regression-v1,"np.ones((m, n + 1))","np.empty((m, n + 1)); r2.fill(1)",np.ones,np.empty
0,titanic,https://www.kaggle.com/omijn1/titanic-survivor-prediction,"X_test.loc[:, (['Fare'])]","X_test.ix[:, (['Fare'])]",pd.DataFrame.loc,pd.DataFrame.ix
0,titanic,https://www.kaggle.com/piplimoon/leaderboard-0-8134,"df_combo.loc[:, (['Cabin'])]","df_combo.ix[:, (['Cabin'])]",pd.DataFrame.loc,pd.DataFrame.ix
0,titanic,https://www.kaggle.com/piplimoon/leaderboard-0-8134,"df_combo.loc[mask_Age, ['Title', 'Sex', 'Pclass']]","df_combo.ix[mask_Age, ['Title', 'Sex', 'Pclass']]",pd.DataFrame.loc,pd.DataFrame.ix
0,titanic,https://www.kaggle.com/rchitic17/titanic-r-to-python,"full.loc[[61, 829], 'Embarked']","full.ix[[61, 829], 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
0,titanic,https://www.kaggle.com/reyhaneh/titanic-s,np.where(bb['Embarked'] != train_df['Embarked']),np.nonzero(bb['Embarked'] != train_df['Embarked']),np.where,np.nonzero
0,titanic,https://www.kaggle.com/saurabhp75/titanicexcercise1,combined['FamilySize'].map(lambda s: 1 if 5 <= s else 0),"np.where( 5 <= combined['FamilySize'] , 1 ,0)",pd.Series.map,np.where
0,titanic,https://www.kaggle.com/shankarpendse/titanicsurvivortraining,np.ones(X.shape[0]),np.empty(X.shape[0]); r2.fill(1),np.ones,np.empty
0,titanic,https://www.kaggle.com/shitalsawant/liner-svm-two-variables-py,"train_df.loc[:, (selected_features)]","train_df.ix[:, (selected_features)]",pd.DataFrame.loc,pd.DataFrame.ix
0,titanic,https://www.kaggle.com/shitalsawant/liner-svm-two-variables-py,"test_df.loc[:, (selected_features)]","test_df.ix[:, (selected_features)]",pd.DataFrame.loc,pd.DataFrame.ix
0,titanic,https://www.kaggle.com/shyamspr/backward-elimination,"np.ones((891, 1))","np.empty((891, 1)); r2.fill(1)",np.ones,np.empty
0,titanic,https://www.kaggle.com/swkim94/test77,"np.c_[xx.ravel(), yy.ravel(), zz.ravel()]","np.hstack([xx.ravel().reshape(len(xx.ravel()),1), yy.ravel().reshape(len(xx.ravel()),1), zz.ravel().reshape(len(xx.ravel()),1)])",np.c_,np.hstack
0,titanic,https://www.kaggle.com/tedspikes/titanic-test,"train.loc[:, (['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare'])]","train.ix[:, (['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare'])]",pd.DataFrame.loc,pd.DataFrame.ix
0,titanic,https://www.kaggle.com/thamagame/titanic-with-learning-curves,"train.ix[:, 'Pclass':]","train.loc[:, 'Pclass':]",pd.DataFrame.ix,pd.DataFrame.loc
0,titanic,https://www.kaggle.com/thamagame/titanic-with-learning-curves,"test.ix[:, 'Pclass':]","test.loc[:, 'Pclass':]",pd.DataFrame.ix,pd.DataFrame.loc
0,titanic,https://www.kaggle.com/thamagame/titanic-with-learning-curves,"train_temp.ix[:, 'Pclass':]","train_temp.loc[:, 'Pclass':]",pd.DataFrame.ix,pd.DataFrame.loc
0,titanic,https://www.kaggle.com/toadtoadtoad/newwwww,data.ix[891:],data.iloc[891:],pd.DataFrame.ix,pd.DataFrame.iloc
0,titanic,https://www.kaggle.com/tranquangan/my-first-experiment-with-kaggle,family['FamilySize'].map(lambda s: 1 if 5 <= s else 0),"np.where( 5 <= family['FamilySize'] , 1 ,0)",pd.Series.map,np.where
0,titanic,https://www.kaggle.com/unlikelybutpossible/scratch1,"alldata.ix[kids_no_age, 'Age2']","alldata.loc[kids_no_age, 'Age2']",pd.DataFrame.ix,pd.DataFrame.loc
0,titanic,https://www.kaggle.com/unlikelybutpossible/scratch1,"alldata.ix[dr_no_age, 'Age2']","alldata.loc[dr_no_age, 'Age2']",pd.DataFrame.ix,pd.DataFrame.loc
0,titanic,https://www.kaggle.com/unlikelybutpossible/scratch1,"alldata.ix[ms_no_age, 'Age2']","alldata.loc[ms_no_age, 'Age2']",pd.DataFrame.ix,pd.DataFrame.loc
0,titanic,https://www.kaggle.com/unlikelybutpossible/scratch1,"alldata.ix[mr_no_age, 'Age2']","alldata.loc[mr_no_age, 'Age2']",pd.DataFrame.ix,pd.DataFrame.loc
0,titanic,https://www.kaggle.com/unlikelybutpossible/scratch1,"alldata.ix[miss_no_age, 'Age2']","alldata.loc[miss_no_age, 'Age2']",pd.DataFrame.ix,pd.DataFrame.loc
0,titanic,https://www.kaggle.com/unlikelybutpossible/scratch1,"alldata.ix[mrs_no_age, 'Age2']","alldata.loc[mrs_no_age, 'Age2']",pd.DataFrame.ix,pd.DataFrame.loc
0,titanic,https://www.kaggle.com/utsavpatel/titanic-test,"np.count_nonzero(titanic.loc[titanic['Pclass'] == 3, 'Survived'].values)","np.sum(titanic.loc[titanic['Pclass'] == 3, 'Survived'].values!=0)",np.count_nonzero,np.sum
0,titanic,https://www.kaggle.com/utsavpatel/titanic-test,"np.count_nonzero(titanic.loc[titanic['Pclass'] == 2, 'Pclass'].values)","np.sum(titanic.loc[titanic['Pclass'] == 2, 'Pclass'].values!=0)",np.count_nonzero,np.sum
0,titanic,https://www.kaggle.com/utsavpatel/titanic-test,"np.count_nonzero(titanic.loc[titanic['Pclass'] == 2, 'Survived'].values)","np.sum(titanic.loc[titanic['Pclass'] == 2, 'Survived'].values!=0)",np.count_nonzero,np.sum
0,titanic,https://www.kaggle.com/utsavpatel/titanic-test,np.where(titanic['Pclass'] == 2),np.nonzero(titanic['Pclass'] == 2),np.where,np.nonzero
0,titanic,https://www.kaggle.com/weishyi/titanic,"train.loc[:, (feat_colums)]","train.ix[:, (feat_colums)]",pd.DataFrame.loc,pd.DataFrame.ix
0,titanic,https://www.kaggle.com/weishyi/titanic,"test.loc[:, (feat_colums)]","test.ix[:, (feat_colums)]",pd.DataFrame.loc,pd.DataFrame.ix
0,titanic,https://www.kaggle.com/yashduvvuru/pytanic,"test.loc[:, (['Cader', 'FamilyId'])]","test.ix[:, (['Cader', 'FamilyId'])]",pd.DataFrame.loc,pd.DataFrame.ix
0,titanic,https://www.kaggle.com/yashduvvuru/pytanic,"test.loc[:, (['PassengerId', 'Survived'])]","test.ix[:, (['PassengerId', 'Survived'])]",pd.DataFrame.loc,pd.DataFrame.ix
0,titanic,https://www.kaggle.com/ypcfirst/titanic-model-using-logistic-regression,"test.loc[:, (['Pclass', 'Age', 'Sex', 'SibSp', 'Parch', 'Fare', 'Embarked'])]","test.ix[:, (['Pclass', 'Age', 'Sex', 'SibSp', 'Parch', 'Fare', 'Embarked'])]",pd.DataFrame.loc,pd.DataFrame.ix
0,titanic,https://www.kaggle.com/zgo2016/titanic-logistic-regression,"np.ones((m, n + 1))","np.empty((m, n + 1)); r2.fill(1)",np.ones,np.empty
1,titanic,https://www.kaggle.com/abrierly/explore-titanic-python,"train2.loc[train['Sex'] == 'male', 'Sex']","train2.ix[train['Sex'] == 'male', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/abrierly/nn-approach,"np.dot(t0, x.T)","np.einsum('ij,jm->im',t0, x.T)",np.dot,np.einsum
1,titanic,https://www.kaggle.com/adiamb/titanic-survival-my-way,"train.loc[:, 'Pclass':'Embarked']","train.ix[:, 'Pclass':'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/adrianbureu/another-test,"data.loc[data.Fare.isnull() & (data.Pclass == f + 1), 'Fare']","data.ix[data.Fare.isnull() & (data.Pclass == f + 1), 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/adrianspataru/first-submission,"train.loc[train['Sex'] == 'male', 'Sex']","train.ix[train['Sex'] == 'male', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/agarwalsneha/linear-svm-with-feature-engineering,"train.loc[train['Fare'] == 0, 'Fare_norm']","train.ix[train['Fare'] == 0, 'Fare_norm']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/agarwalsneha/linear-svm-with-feature-engineering,"test['Sex'].map({'female': 0, 'male': 1})","pd.DataFrame(test['Sex']).replace({'female': 0, 'male': 1})",pd.Series.map,pd.DataFrame.replace
1,titanic,https://www.kaggle.com/alpoza/test-titanic,"titanic.loc[titanic['Sex'] == 'male', 'Sex']","titanic.ix[titanic['Sex'] == 'male', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/andywan/data-import,"np.vstack([age_col['Age'], np.ones(len(age_col['Age']))])","np.column_stack((age_col['Age'].T, np.ones(len(age_col['Age'])).T)).T",np.vstack,np.column_stack
1,titanic,https://www.kaggle.com/andyxie/titanic-xgboost,"data['train'].loc[:, (col)]","data['train'].ix[:, (col)]",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/angadp/trying-for-top-10,"dataset.loc[dataset['Family_Size'] == 1, 'isAlone']","dataset.ix[dataset['Family_Size'] == 1, 'isAlone']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/anirban00727/titanic-survival-chances-prediction,"combined.Sex.map({'male': 1, 'female': 0})","pd.DataFrame(combined.Sex).replace({'male': 1, 'female': 0})",pd.Series.map,pd.DataFrame.replace
1,titanic,https://www.kaggle.com/anishanalytics/oscar-wala-actor-leo,"data.loc[data.Sex != 'male', 'Sex']","data.ix[data.Sex != 'male', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/anjuram25/titanic-ramanujamallam,"dataset.loc[dataset['FamilySize'] == 0, 'Family']","dataset.ix[dataset['FamilySize'] == 0, 'Family']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/ankurbhartiya/titanicpy2,"df.loc[df.Age.isnull() & (df.Gender == i) & (df.Pclass == j + 1), 'AgeFill']","df.ix[df.Age.isnull() & (df.Gender == i) & (df.Pclass == j + 1), 'AgeFill']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/ankurbhartiya/titanicpy2,"df['Embarked'].map({'C': 1, 'Q': 2, 'S': 3, '0': 3})","pd.DataFrame(df['Embarked']).replace({'C': 1, 'Q': 2, 'S': 3, '0': 3})",pd.Series.map,pd.DataFrame.replace
1,titanic,https://www.kaggle.com/azeembootwala/titanic-logistic-regression,X.T.dot(Y_pred - T),"np.tensordot(X.T,Y_pred - T,axes=1)",np.ndarray.dot,np.tensordot
1,titanic,https://www.kaggle.com/bhavesh09/onemoremodel,"c.loc[c.Age.isnull() & (c.Title == i), 'Age']","c.ix[c.Age.isnull() & (c.Title == i), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/bhavesh09/titanicsurvivalprediction,"train.loc[train['Age'] <= 14, 'Age']","train.ix[train['Age'] <= 14, 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/bigdit/test00000,"Df['Embarked'].map({'C': 1, 'S': 2, 'Q': 3})","pd.DataFrame(Df['Embarked']).replace({'C': 1, 'S': 2, 'Q': 3})",pd.Series.map,pd.DataFrame.replace
1,titanic,https://www.kaggle.com/bineetranjan/gbt-classification,"df.loc[df['Sex'] == 'male', 'Sex']","df.ix[df['Sex'] == 'male', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/bluepoplar/try-1,"df.loc[df.FareFill > fare_ceiling - 1.0, 'FareFill']","df.ix[df.FareFill > fare_ceiling - 1.0, 'FareFill']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/brandymat/titanic-kernel-test,"data.loc[data['Title'] == 'Dr', 'Age']","data.ix[data['Title'] == 'Dr', 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/brandymat/titanic-kernel-test,"np.where(data['Sex'] == 'male', 1, 0)",(data['Sex'] == 'male').astype((data['Sex'] == 'male').dtype),np.where,np.ndarray.astype
1,titanic,https://www.kaggle.com/buzzolord/kappavoid-testing,"dataset.loc[dataset['Age'] <= 5, 'Age']","dataset.ix[dataset['Age'] <= 5, 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/bwboerman/a-quick-dive-into-h2o-with-python,"fullData.loc[fullData.TicketDiffFares == 1, 'TicketFare']","fullData.ix[fullData.TicketDiffFares == 1, 'TicketFare']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/bwboerman/a-quick-dive-into-h2o-with-python,"np.where((fullData.Age <= 12) & (fullData.Sex == 'male'), 1, 0)",((fullData.Age <= 12) & (fullData.Sex == 'male')).astype(((fullData.Age <= 12) & (fullData.Sex == 'male')).dtype),np.where,np.ndarray.astype
1,titanic,https://www.kaggle.com/canran/titanic-rf,"X_df.loc[:, ('Sex')]","X_df.ix[:, ('Sex')]",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/cast42/xgboost-example-python,"train_df.loc[train_df['Embarked'] == 'S', 'Embarked']","train_df.ix[train_df['Embarked'] == 'S', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/chappy19910723/tutrial20180702-2,np.array(L),np.concatenate([L]),np.array,np.concatenate
1,titanic,https://www.kaggle.com/chesters99/titanic-using-svm-classifierx,"df.loc[df['Age'].isnull() & (df['Title'] == atitle), 'Age']","df.ix[df['Age'].isnull() & (df['Title'] == atitle), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/clararnoux/titanic-not-failing,"titanic_test.loc[titanic_test['Sex'] == 'female', 'Sex']","titanic_test.ix[titanic_test['Sex'] == 'female', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/code1110/titanic-model-prediction-submission,"test_df['Sex'].map({'female': 1, 'male': 0})","pd.DataFrame(test_df['Sex']).replace({'female': 1, 'male': 0})",pd.Series.map,pd.DataFrame.replace
1,titanic,https://www.kaggle.com/coltonpaul/lost-in-a-forest-titanic,"data.loc[data['Sex'] == 'male', 'Sex']","data.ix[data['Sex'] == 'male', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/computermage/test-titanic-survival-script,"np.where(full.Sex == 'male', 1, 0)",(full.Sex == 'male').astype((full.Sex == 'male').dtype),np.where,np.ndarray.astype
1,titanic,https://www.kaggle.com/cooleel/a-quick-try-of-h2o-automl-on-titanic-dataset,"data.loc[data.Name.str.contains('Miss.', regex=False), 'Prefix']","data.ix[data.Name.str.contains('Miss.', regex=False), 'Prefix']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/corgicoffee/kernelb4bd873fab,"train_data.loc[:, (['Pclass', 'Sex', 'Age'])]","train_data.ix[:, (['Pclass', 'Sex', 'Age'])]",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/daniglezl/main-1-py,"train.loc[train.Age.isnull(), 'Age']","train.ix[train.Age.isnull(), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/daniglezl/main-5-py,"train.loc[train.Fare > bin_max, 'Fare']","train.ix[train.Fare > bin_max, 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/daskoo/titanic-test-python,"train.loc[:, (['Name', 'SibSp', 'Age', 'Parch'])]","train.ix[:, (['Name', 'SibSp', 'Age', 'Parch'])]",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/daskoo/titanic-test-python,"(train.loc[:,['Name','SibSp','Age','Parch']]).query('Parch > 0 or SibSp > 0')","(train.loc[:,['Name','SibSp','Age','Parch']]).loc[(train.loc[:,['Name','SibSp','Age','Parch']].Parch > 0) | (train.loc[:,['Name','SibSp','Age','Parch']].SibSp > 0)]",pd.DataFrame.query,pd.DataFrame.loc
1,titanic,https://www.kaggle.com/devinodsa/titanic,"full.loc[full.PassengerId == 280, ['SibSp', 'Parch']]","full.ix[full.PassengerId == 280, ['SibSp', 'Parch']]",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/dexter22/testing,"train.loc[~train['Title'].isin(['Mr', 'Miss', 'Mrs', 'Master']), 'Title']","train.ix[~train['Title'].isin(['Mr', 'Miss', 'Mrs', 'Master']), 'Title']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/dish42/getting-started,"train.loc[train.Age.isnull(), 'AgeFill']","train.ix[train.Age.isnull(), 'AgeFill']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/dishajindal/script2-py,"train['Sex'].map({'female': 1, 'male': 0})","pd.DataFrame(train['Sex']).replace({'female': 1, 'male': 0})",pd.Series.map,pd.DataFrame.replace
1,titanic,https://www.kaggle.com/dishajindal/script-py,"train['Sex'].map({'female': 1, 'male': 0})","pd.DataFrame(train['Sex']).replace({'female': 1, 'male': 0})",pd.Series.map,pd.DataFrame.replace
1,titanic,https://www.kaggle.com/dujianjun79/titanic-machine-learing,"titanic.loc[titanic.Sex == 'male', 'Sex']","titanic.ix[titanic.Sex == 'male', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/ekethio/titanic-second,"file.loc[file.Sex == 'male', 'Sex']","file.ix[file.Sex == 'male', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/felsiq/some-amateurish-full-titanic-data-process,"data_frame.loc[data_frame['Embarked'] == '', 'Embarked']","data_frame.ix[data_frame['Embarked'] == '', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/francksylla/titanic-machine-learning-from-disaster,"full.loc[:, ('Title')]","full.ix[:, ('Title')]",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/fzhurd/titanic-suvive20160924v4,combined.ix[891:],combined.iloc[891:],pd.DataFrame.ix,pd.DataFrame.iloc
1,titanic,https://www.kaggle.com/garethjns/microsoft-lightgbm-with-parameter-tuning-0-823,"full.loc[full.Age.isnull(), 'Age']","full.ix[full.Age.isnull(), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/gilsonfaria/script3-title-dummies,"np.column_stack((test['PassengerId'], test_result))","np.transpose((test['PassengerId'], test_result))",np.column_stack,np.transpose
1,titanic,https://www.kaggle.com/gilsonfaria/script4-boolsibsp-parch,"np.column_stack((idTest, test_result))","np.transpose((idTest, test_result))",np.column_stack,np.transpose
1,titanic,https://www.kaggle.com/gilsonfaria/scriptfinal,"np.column_stack((idTest, test_result))","np.transpose((idTest, test_result))",np.column_stack,np.transpose
1,titanic,https://www.kaggle.com/guillaumegg/titanic-machine-learning,"custom_train.loc[custom_train['Age'] <= 16, 'Age']","custom_train.ix[custom_train['Age'] <= 16, 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/gunjan17/mytitanicsolution,"new_train.loc[new_train['Sex'] == 'male', 'Sex']","new_train.ix[new_train['Sex'] == 'male', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/harini5693/data-analysisusingpython,"dataset.loc[(dataset['Age'] > 16) & (dataset['Age'] <= 32), 'Age']","dataset.ix[(dataset['Age'] > 16) & (dataset['Age'] <= 32), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/hawkinsliam/simple-random-forest,"df.loc[df['Family_size'] == 1, 'Is_alone']","df.ix[df['Family_size'] == 1, 'Is_alone']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/hawkinsliam/simple-random-forest,"np.column_stack((ids.T, predictions.T))","np.vstack((ids.T, predictions.T)).T",np.column_stack,np.vstack
1,titanic,https://www.kaggle.com/hawkinsliam/simple-random-forest,"np.column_stack((ids.T, predictions.T))","np.transpose((ids.T, predictions.T))",np.column_stack,np.transpose
1,titanic,https://www.kaggle.com/jackiezhao/xgboost-v2,"data_set['Embarked'].map({'S': 1, 'C': 2, 'Q': 3})","pd.DataFrame(data_set['Embarked']).replace({'S': 1, 'C': 2, 'Q': 3})",pd.Series.map,pd.DataFrame.replace
1,titanic,https://www.kaggle.com/jeolas/id-survived,"titanic_test.loc[titanic_test['Embarked'] == 'S', 'Embarked']","titanic_test.ix[titanic_test['Embarked'] == 'S', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/jojadud/titanic-exploration-1,"train['Sex'].map({'female': 1, 'male': 0})","train['Sex'].replace({'female': 1, 'male': 0})",pd.Series.map,pd.Series.replace
1,titanic,https://www.kaggle.com/journeycheng/script-py,"train_df.loc[train_df.Age.isnull() & (f == train_df.Title), 'Age']","train_df.ix[train_df.Age.isnull() & (f == train_df.Title), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/jtson1213/titanic-decision-tree-classifier,"dataset.loc[dataset['Age'] <= 9, 'Age']","dataset.ix[dataset['Age'] <= 9, 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/kingarthurie/titanik-rdf,"data.loc[data['Embarked'] == 'S', 'Embarked']","data.ix[data['Embarked'] == 'S', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/knageswara78/my-tatanic-python-solution,"np.array(results['param_C'].data, dtype=float)","np.fromiter(results['param_C'].data, dtype=float)",np.array,np.fromiter
1,titanic,https://www.kaggle.com/knageswara78/my-tatanic-python-solution,"np.where(final_test['Age'] <= 16, 1, 0)",(final_test['Age'] <= 16).astype((final_test['Age'] <= 16).dtype),np.where,np.ndarray.astype
1,titanic,https://www.kaggle.com/knageswara78/my-tatanic-python-solution,"np.where(train_data['SibSp'] + train_data['Parch'] > 0, 0, 1)",(train_data['SibSp'] + train_data['Parch']).map(lambda x : 0 if x > 0 else  1).values,np.where,pd.Series.map
1,titanic,https://www.kaggle.com/knageswara78/my-tatanic-python-solution,np.where(tpr > 0.95),np.nonzero(tpr > 0.95),np.where,np.nonzero
1,titanic,https://www.kaggle.com/kotaroito/titanic,"train_df.loc[train_df.Embarked.isnull(), 'Embarked']","train_df.ix[train_df.Embarked.isnull(), 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,np.where(p < 0.5),np.nonzero(p < 0.5),np.where,np.nonzero
1,titanic,https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,np.zeros(input_x.shape[1]),np.empty(input_x.shape[1]); r2[:]= 0,np.zeros,np.empty
1,titanic,https://www.kaggle.com/ldavim/code01,"trainData['Sex'].map({'female': 0, 'male': 1})","trainData['Sex'].replace({'female': 0, 'male': 1})",pd.Series.map,pd.Series.replace
1,titanic,https://www.kaggle.com/leblondmorgan/titanic-machine-learning,"train_df.loc[train_df['Sex'] == 'male', 'Sex']","train_df.ix[train_df['Sex'] == 'male', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/lifengmiao/titanic,"df.loc[df.Age.isnull() & (df.Sex == i) & (df.Pclass == j + 1), 'Age']","df.ix[df.Age.isnull() & (df.Sex == i) & (df.Pclass == j + 1), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/lindenlu/linden-titanic-script,"train_df.loc[:, ('Name')]","train_df.ix[:, ('Name')]",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/lionalio/titanicprediction,"TrainingSet['Embarked'].map({'S': 0, 'C': 1, 'Q': 2})","pd.DataFrame(TrainingSet['Embarked']).replace({'S': 0, 'C': 1, 'Q': 2})",pd.Series.map,pd.DataFrame.replace
1,titanic,https://www.kaggle.com/lostking91/titanic,"train.loc[train['Cabin'] != 'N', 'Cabin']","train.ix[train['Cabin'] != 'N', 'Cabin']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/lzzzfelipe/titanic-modelling,"combined2.loc[:, ('Title')]","combined2.ix[:, ('Title')]",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/meeththakkar/perceptron-implementation,"train_data.loc[train_data.Age.isnull(), 'Age']","train_data.ix[train_data.Age.isnull(), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/meeththakkar/perceptron-implementation,"train_data['Sex'].map({'female': 0, 'male': 1})","pd.DataFrame(train_data['Sex']).replace({'female': 0, 'male': 1})",pd.Series.map,pd.DataFrame.replace
1,titanic,https://www.kaggle.com/meeththakkar/titanic-randomforest-kfold-python,"df.loc[df.Embarked.isnull(), 'Embarked']","df.ix[df.Embarked.isnull(), 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/melisbiyikli/titanic-data-sets,"all_datas['Sex'].map({'male': 1, 'female': 0})","pd.DataFrame(all_datas['Sex']).replace({'male': 1, 'female': 0})",pd.Series.map,pd.DataFrame.replace
1,titanic,https://www.kaggle.com/mjyang/testw,X.T.dot(Y_pred - T),"np.tensordot(X.T,Y_pred - T,axes=1)",np.ndarray.dot,np.tensordot
1,titanic,https://www.kaggle.com/mldm16fe/mytest051603,"trainData.loc[trainData.Age.isnull(), 'modAge']","trainData.ix[trainData.Age.isnull(), 'modAge']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/mnoguchi/titanic-pandas,"df['Sex'].map({'female': 0, 'male': 1})","pd.DataFrame(df['Sex']).replace({'female': 0, 'male': 1})",pd.Series.map,pd.DataFrame.replace
1,titanic,https://www.kaggle.com/mschou/titanic001,"titanic.loc[titanic['Sex'] == 1, 'Age']","titanic.ix[titanic['Sex'] == 1, 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/navaneeth51089/my-first-script,"train_set['Sex'].map({'female': 2, 'male': 1})","train_set['Sex'].replace({'female': 2, 'male': 1})",pd.Series.map,pd.Series.replace
1,titanic,https://www.kaggle.com/olttwa/titanic-logistic-regression-v1,X.dot(theta),"np.tensordot(X,theta,axes=1)",np.ndarray.dot,np.tensordot
1,titanic,https://www.kaggle.com/omijn1/titanic-survivor-prediction,"X_train.loc[:, (['Sex'])]","X_train.ix[:, (['Sex'])]",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/opjason/titanicsarita,"dataset['Sex'].map({'female': 1, 'male': 0})","pd.DataFrame(dataset['Sex']).replace({'female': 1, 'male': 0})",pd.Series.map,pd.DataFrame.replace
1,titanic,https://www.kaggle.com/piplimoon/leaderboard-0-8134,"df_combo.loc[:, ('Fam')]","df_combo.ix[:, ('Fam')]",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/popupsert/titanic-my-first-kaggle,"dataset.loc[:, ('Sex')]","dataset.ix[:, ('Sex')]",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/qvajou/titanic-disaster-first-test,"np.where(full.Sex == 'male', 1, 0)",(full.Sex == 'male').astype((full.Sex == 'male').dtype),np.where,np.ndarray.astype
1,titanic,https://www.kaggle.com/rcasellas/ensemble-stacking-with-et-script,"df.loc[df['Family_size'] == 1, 'isAlone']","df.ix[df['Family_size'] == 1, 'isAlone']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/rchitic17/titanic-r-to-python,"full['Embarked'].map({'S': 0, 'C': 1, 'Q': 2})","pd.DataFrame(full['Embarked']).replace({'S': 0, 'C': 1, 'Q': 2})",pd.Series.map,pd.DataFrame.replace
1,titanic,https://www.kaggle.com/robdias/predictfy-titanic-survival,"t_train.loc[t_train['Sex'] == 'male', 'Sex']","t_train.ix[t_train['Sex'] == 'male', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/rohitagarwal/attempt-number-1,"total.loc[total['Fare'].isnull() & total['Pclass'] == i + 1, 'Fare']","total.ix[total['Fare'].isnull() & total['Pclass'] == i + 1, 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/rohitagarwal/attempt-number-1,"total['FamilySizeCategories'].map({(0): 1, (1): 0, (2): 2})","pd.DataFrame(total['FamilySizeCategories']).replace({(0): 1, (1): 0, (2): 2})",pd.Series.map,pd.DataFrame.replace
1,titanic,https://www.kaggle.com/sachin13/titanic,"data.loc[data['SibSp'] + data['Parch'] == 0, 'isAlone']","data.ix[data['SibSp'] + data['Parch'] == 0, 'isAlone']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/sachin13/titanic,"data['Embarked'].map({'C': 0, 'Q': 1, 'S': 2})","pd.DataFrame(data['Embarked']).replace({'C': 0, 'Q': 1, 'S': 2})",pd.Series.map,pd.DataFrame.replace
1,titanic,https://www.kaggle.com/sakenk/random-forest,"ttest.loc[ttest['Sex'] == 'male', 'Sex']","ttest.ix[ttest['Sex'] == 'male', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/sergioortiz/titanic-competition-script-1,"Xdf.loc[Xdf['Age'] <= 16, 'Age']","Xdf.ix[Xdf['Age'] <= 16, 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/shabin/titanic-get-started,"np.column_stack((X_initial, train_df_as_dic[key]))","np.vstack((X_initial.T, train_df_as_dic[key].T)).T",np.column_stack,np.vstack
1,titanic,https://www.kaggle.com/shankarpendse/titanicsurvivortraining,"unprocessedData.loc[:, ('Survived')]","unprocessedData.ix[:, ('Survived')]",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/shankarpendse/titanicsurvivortraining,np.where(hypothesis >= 0.5),np.nonzero(hypothesis >= 0.5),np.where,np.nonzero
1,titanic,https://www.kaggle.com/sharma72/titanic-survival-prediction,"df.loc[df.Fare.isnull() & (df.Pclass == f + 1), 'Fare']","df.ix[df.Fare.isnull() & (df.Pclass == f + 1), 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/shitalsawant/liner-svm-two-variables-py,"train_df.loc[:, (['Survived'])]","train_df.ix[:, (['Survived'])]",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/sinanalb/test-titanic,"dataset.loc[dataset['Age'] < 0, 'Age']","dataset.ix[dataset['Age'] < 0, 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/sjtreadway/titanic-prediction,"dataset.loc[(dataset['Age'] > 16) & (dataset['Age'] <= 26), 'Age']","dataset.ix[(dataset['Age'] > 16) & (dataset['Age'] <= 26), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/sodanuo/fork-dataquest,"dataset.loc[dataset['Sex'] == 'male', 'Sex']","dataset.ix[dataset['Sex'] == 'male', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/srinisid/test1,"df_train.loc[df_train['Age'].isnull(), 'Age']","df_train.ix[df_train['Age'].isnull(), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/steffenritter/test-kernel,"dataset.loc[dataset['FamilySize'] == 1, 'IsAlone']","dataset.ix[dataset['FamilySize'] == 1, 'IsAlone']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/sturdydata/titanic-rf,"np.where(test.Embarked == 'Q', 1, 0)",(test.Embarked == 'Q').astype((test.Embarked == 'Q').dtype),np.where,np.ndarray.astype
1,titanic,https://www.kaggle.com/swkim94/test77,"data_p.loc[data_p['Fare'].isnull(), 'Price']","data_p.ix[data_p['Fare'].isnull(), 'Price']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/szczepanov/titanic-try-3,"df.loc[df.Age.isnull(), 'Age']","df.ix[df.Age.isnull(), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/szczepanov/titanic-try-3,"df_test['Sex'].map({'female': 0, 'male': 1})","pd.DataFrame(df_test['Sex']).replace({'female': 0, 'male': 1})",pd.Series.map,pd.DataFrame.replace
1,titanic,https://www.kaggle.com/tedspikes/titanic-test,"train.loc[:, ('Survived')]","train.ix[:, ('Survived')]",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/thamagame/titanic-with-learning-curves,"trainCv_temp.ix[:, 'Pclass':]","trainCv_temp.loc[:, 'Pclass':]",pd.DataFrame.ix,pd.DataFrame.loc
1,titanic,https://www.kaggle.com/thamagame/titanic-with-learning-curves,dataFrame['Ticket'].apply(MapTicket),dataFrame['Ticket'].map(MapTicket),pd.Series.apply,pd.Series.map
1,titanic,https://www.kaggle.com/thamagame/titanic-with-learning-curves,"dataFrame['Embarked'].map({'C': 0, 'S': 1, 'Q': 2})","pd.DataFrame(dataFrame['Embarked']).replace({'C': 0, 'S': 1, 'Q': 2})",pd.Series.map,pd.DataFrame.replace
1,titanic,https://www.kaggle.com/timur008/newscript,"dataset.loc[dataset['Survived'] > 1, 'Survived']","dataset.ix[dataset['Survived'] > 1, 'Survived']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/tranquangan/my-first-experiment-with-kaggle,"np.where(full.Sex == 'male', 1, 0)",(full.Sex == 'male').astype((full.Sex == 'male').dtype),np.where,np.ndarray.astype
1,titanic,https://www.kaggle.com/utsavpatel/titanic-test,"titanic.loc[titanic['Pclass'] == 3, 'Pclass']","titanic.ix[titanic['Pclass'] == 3, 'Pclass']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/utsavpatel/titanic-test,"np.count_nonzero(titanic.loc[titanic['Pclass'] == 3, 'Pclass'].values)","np.sum(titanic.loc[titanic['Pclass'] == 3, 'Pclass'].values!=0)",np.count_nonzero,np.sum
1,titanic,https://www.kaggle.com/utsavpatel/titanic-test,np.where(titanic['Pclass'] == 1),np.nonzero(titanic['Pclass'] == 1),np.where,np.nonzero
1,titanic,https://www.kaggle.com/verdecal/epic-titanic-disaster,"np.where(full_data.Sex == 'male', 1, 0)",(full_data.Sex == 'male').astype((full_data.Sex == 'male').dtype),np.where,np.ndarray.astype
1,titanic,https://www.kaggle.com/vicbap/titanic,"df.loc[df.Age.isnull() & (df.Gender == i) & (df.Pclass == j + 1), 'Age']","df.ix[df.Age.isnull() & (df.Gender == i) & (df.Pclass == j + 1), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/yashduvvuru/pytanic,"train.loc[train.FamilySize < 2, 'FamilyId']","train.ix[train.FamilySize < 2, 'FamilyId']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/yaxelperez/logistic-regression-thing,"np.dot(X, theta)","np.einsum('ij,jm->im',X, theta)",np.dot,np.einsum
1,titanic,https://www.kaggle.com/yaxelperez/logistic-regression-thing,"np.zeros((X.shape[1], 1))","np.empty((X.shape[1], 1)); r2[:]= 0",np.zeros,np.empty
1,titanic,https://www.kaggle.com/yeewii/firstscratchinpy,"np.where(df_train['SibSp'] + df_train['Parch'] + 1 == 1, 1, 0)",(df_train['SibSp'] + df_train['Parch'] + 1 == 1).astype((df_train['SibSp'] + df_train['Parch'] + 1 == 1).dtype),np.where,np.ndarray.astype
1,titanic,https://www.kaggle.com/yeewii/firstscratchinpy,"np.where(df_train['SibSp'] + df_train['Parch'] + 1 == 1, 1, 0)",(df_train['SibSp'] + df_train['Parch'] + 1).map(lambda x : 1 if x == 1 else  0).values,np.where,pd.Series.map
1,titanic,https://www.kaggle.com/yhzjut/leyutestrun,"dataset['Sex'].map({'female': 1, 'male': 0})","pd.DataFrame(dataset['Sex']).replace({'female': 1, 'male': 0})",pd.Series.map,pd.DataFrame.replace
1,titanic,https://www.kaggle.com/yipcma/catboost-on-a-boat-with-useful-tricks,np.where(X.dtypes != np.float),np.nonzero(X.dtypes != np.float),np.where,np.nonzero
1,titanic,https://www.kaggle.com/ypcfirst/titanic-model-using-logistic-regression,"train.loc[:, (['Pclass', 'Age', 'Sex', 'SibSp', 'Parch', 'Fare', 'Embarked'])]","train.ix[:, (['Pclass', 'Age', 'Sex', 'SibSp', 'Parch', 'Fare', 'Embarked'])]",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/zgo2016/titanic-logistic-regression,"train.loc[train['Sex'] == 0, 'Sex']","train.ix[train['Sex'] == 0, 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
1,titanic,https://www.kaggle.com/zgo2016/titanic-logistic-regression,X.dot(theta),"np.tensordot(X,theta,axes=1)",np.ndarray.dot,np.tensordot
0,web-traffic-time-series-forecasting,https://www.kaggle.com/safavieh/median-estimation-by-fibonacci-et-al-lb-44-9,np.where(Visits < 1),np.nonzero(Visits < 1),np.where,np.nonzero
0,web-traffic-time-series-forecasting,https://www.kaggle.com/soutou/new-model-lb-44-6,np.where(Visits < 1),np.nonzero(Visits < 1),np.where,np.nonzero
1,web-traffic-time-series-forecasting,https://www.kaggle.com/clustifier/7-weeks-mode-lb-51-5,"test.loc[test.Visits.isnull(), 'Visits']","test.ix[test.Visits.isnull(), 'Visits']",pd.DataFrame.loc,pd.DataFrame.ix
1,web-traffic-time-series-forecasting,https://www.kaggle.com/safavieh/median-estimation-by-fibonacci-et-al-lb-44-9,row[1:].nonzero(),np.where(row[1:]),np.nonzero,np.where
1,web-traffic-time-series-forecasting,https://www.kaggle.com/soutou/new-model-lb-44-6,row[1:].nonzero(),np.where(row[1:]),np.nonzero,np.where
0,whats-cooking-kernels-only,https://www.kaggle.com/ymatioun/lightgbm-v1,np.zeros([len_train]),np.empty([len_train]); r2[:]= 0,np.zeros,np.empty
0,whats-cooking-kernels-only,https://www.kaggle.com/ymatioun/lightgbm-v1,"merged_df['ingredients'].apply(','.join)","merged_df['ingredients'].map(','.join)",pd.Series.apply,pd.Series.map
1,whats-cooking-kernels-only,https://www.kaggle.com/vishreddy/predicting-cuisine,"data.loc[(data['TYPE-LABEL'] == 'TRAIN').tolist(), 'ingredients']","data.ix[(data['TYPE-LABEL'] == 'TRAIN').tolist(), 'ingredients']",pd.DataFrame.loc,pd.DataFrame.ix
2,whats-cooking,https://www.kaggle.com/klooonal/three,"np.arange(0.0, 5.0, 0.01)","np.array(range(0.0, 5.0, 0.01))",np.arange,np.array
2,titanic,https://www.kaggle.com/nimz911/titanic-logisticregression,"np.arange(0.046, 0.051, 1e-07)","np.array(range(0.046, 0.051, 1e-07))",np.arange,np.array
2,facebook-v-predicting-check-ins,https://www.kaggle.com/justfor/grid-knn,"np.arange(predictions.shape[1], dtype=np.float32)","np.array(range(predictions.shape[1], dtype=np.float32))",np.arange,np.array
2,digit-recognizer,https://www.kaggle.com/ahujack/code-for-love,"arange(0.0, math.pi * 4, 0.01)","array(range(0.0, math.pi * 4, 0.01))",np.arange,np.array
2,digit-recognizer,https://www.kaggle.com/ahujack/code-for-love,"np.arange(-5.0, 5.0, 0.1)","np.array(range(-5.0, 5.0, 0.1))",np.arange,np.array
2,instacart-market-basket-analysis,https://www.kaggle.com/mmueller/f1-score-expectation-maximization-in-o-n,"np.arange(0, len(P) + 1, 1.0)","np.array(range(0, len(P) + 1, 1.0))",np.arange,np.array
2,talkingdata-mobile-user-demographics,https://www.kaggle.com/madraziw/mad-0721-1245,"np.arange(x_min, x_max, h)","np.array(range(x_min, x_max, h))",np.arange,np.array
2,digit-recognizer,https://www.kaggle.com/drasko/1st-python-try-1,"np.arange(y_min, y_max, h)","np.array(range(y_min, y_max, h))",np.arange,np.array
2,facebook-v-predicting-check-ins,https://www.kaggle.com/carloshuertas/randomforest-x3,"np.arange(0, size, x_step)","np.array(range(0, size, x_step))",np.arange,np.array
2,facebook-v-predicting-check-ins,https://www.kaggle.com/carloshuertas/randomforest-x3,"np.arange(x_step, size + x_step, x_step)","np.array(range(x_step, size + x_step, x_step))",np.arange,np.array
2,facebook-v-predicting-check-ins,https://www.kaggle.com/carloshuertas/randomforest-x3,"np.arange(0, size, y_step)","np.array(range(0, size, y_step))",np.arange,np.array
2,facebook-v-predicting-check-ins,https://www.kaggle.com/carloshuertas/randomforest-x3,"np.arange(y_step, size + y_step, y_step)","np.array(range(y_step, size + y_step, y_step))",np.arange,np.array
2,grupo-bimbo-inventory-demand,https://www.kaggle.com/zachmayer/floating-point-test,"np.arange(3.915, 3.917, 0.0001)","np.array(range(3.915, 3.917, 0.0001))",np.arange,np.array
2,grupo-bimbo-inventory-demand,https://www.kaggle.com/anokas/floating-point-test,"np.arange(3, 5, 0.1)","np.array(range(3, 5, 0.1))",np.arange,np.array
2,grupo-bimbo-inventory-demand,https://www.kaggle.com/anokas/optimised-beat-the-benchmark,"np.arange(min_float, max_float, 0.1)","np.array(range(min_float, max_float, 0.1))",np.arange,np.array
2,titanic,https://www.kaggle.com/circledan/kernelbedf88cfa3,"np.arange(-10, 10, 0.1)","np.array(range(-10, 10, 0.1))",np.arange,np.array
2,digit-recognizer,https://www.kaggle.com/emre40/98-with-image-preprocessing-pca-and-svm,"np.array(data, dtype='uint8')","np.fromiter(data, dtype='uint8')",np.array,np.fromiter
2,ghouls-goblins-and-ghosts-boo,https://www.kaggle.com/wangquan/test1,"np.array(X_train, dtype=np.float32)","np.fromiter(X_train, dtype=np.float32)",np.array,np.fromiter
2,bnp-paribas-cardif-claims-management,https://www.kaggle.com/andriatrigeorgi/firsttesting,"np.array(train[i], dtype=str)","np.fromiter(train[i], dtype=str)",np.array,np.fromiter
2,digit-recognizer,https://www.kaggle.com/emre40/98-with-image-preprocessing-pca-and-svm,"np.array(test, dtype='uint8')","np.fromiter(test, dtype='uint8')",np.array,np.fromiter
2,ghouls-goblins-and-ghosts-boo,https://www.kaggle.com/wangquan/test1,"np.array(y_train, dtype=np.float32)","np.fromiter(y_train, dtype=np.float32)",np.array,np.fromiter
2,tap30challenge,https://www.kaggle.com/soroushj/tap30-challenge-random-forest-regressor,"np.array(x_train, dtype=np.int32)","np.fromiter(x_train, dtype=np.int32)",np.array,np.fromiter
2,bnp-paribas-cardif-claims-management,https://www.kaggle.com/andriatrigeorgi/firsttesting,"np.array(test[i], dtype=str)","np.fromiter(test[i], dtype=str)",np.array,np.fromiter
2,titanic,https://www.kaggle.com/shankarpendse/titanicsurvivortraining,"np.array(X, dtype=float)","np.fromiter(X, dtype=float)",np.array,np.fromiter
2,titanic,https://www.kaggle.com/shankarpendse/titanicsurvivortraining,"np.c_[np.ones(hiddenLayerOutput.shape[0]), hiddenLayerOutput]","np.hstack([np.ones(hiddenLayerOutput.shape[0]), hiddenLayerOutput])",np.c_,np.hstack
2,digit-recognizer,https://www.kaggle.com/zgo2016/digit-recognizer-one-vs-all,"np.c_[range(1, m_test + 1), p2.reshape(len(p2), 1)]","np.hstack([range(1, m_test + 1), p2.reshape(len(p2), 1)])",np.c_,np.hstack
2,airbnb-recruiting-new-user-bookings,https://www.kaggle.com/kevinwu06/feature-importance-w-xgboost,"np.column_stack((ids, cts))","np.vstack((ids.T, cts.T)).T",np.column_stack,np.vstack
2,titanic,https://www.kaggle.com/shabin/titanic-get-started,"np.column_stack((X_initial, train_df_as_dic[key]))","np.transpose((X_initial, train_df_as_dic[key]))",np.column_stack,np.transpose
2,allstate-claims-severity,https://www.kaggle.com/leonardocardoso/braga-alg-tests,np.column_stack(features),np.transpose(features),np.column_stack,np.transpose
2,facebook-v-predicting-check-ins,https://www.kaggle.com/drarfc/script-competition-facebook-v-2-1,"np.column_stack((row_ids, pred_labels))","np.transpose((row_ids, pred_labels))",np.column_stack,np.transpose
2,house-prices-advanced-regression-techniques,https://www.kaggle.com/eponymous/weighted-models-example,np.column_stack([y_preds[k][i] for k in clfs]),np.vstack((y_preds[k][i] for k in clfs.T)).T,np.column_stack,np.vstack
2,titanic,https://www.kaggle.com/shabin/titanic-get-started,"np.column_stack((X_initial, test_df_as_dic[key]))","np.transpose((X_initial, test_df_as_dic[key]))",np.column_stack,np.transpose
2,titanic,https://www.kaggle.com/shabin/titanic-get-started,"np.column_stack((passenger, y_pred_test))","np.transpose((passenger, y_pred_test))",np.column_stack,np.transpose
2,titanic,https://www.kaggle.com/dkurtaev/default-example,"np.count_nonzero(data[:, (1)] == '1')","np.sum(data[:, (1)] == '1'!=0)",np.count_nonzero,np.sum
2,house-prices-advanced-regression-techniques,https://www.kaggle.com/eponymous/weighted-models-example,"np.dot(weights_mean, y_model_preds)","np.einsum('ij,jm->im',weights_mean, y_model_preds)",np.dot,np.einsum
2,titanic,https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,"np.dot(input_x.transpose().iloc[1:], h - true_output_y)","np.einsum('ij,jm->im',input_x.transpose().iloc[1:], h - true_output_y)",np.dot,np.einsum
2,titanic,https://www.kaggle.com/abrierly/nn-approach,"np.dot((one_y - y).T, np.log(one_H - H))","np.einsum('ij,jm->im',(one_y - y).T, np.log(one_H - H))",np.dot,np.einsum
2,titanic,https://www.kaggle.com/abrierly/nn-approach,"np.dot(-y.T, np.log(H))","np.einsum('ij,jm->im',-y.T, np.log(H))",np.dot,np.einsum
2,zillow-prize-1,https://www.kaggle.com/aharless/kamil-kaczmarek-s-lgbm,"np.hstack([X_train, month_model.predict(month_values.reshape(-1, 1))])","np.append(X_train, month_model.predict(month_values.reshape(-1, 1)), axis=1)",np.hstack,np.append
2,zillow-prize-1,https://www.kaggle.com/kamilkk/no-stacking-no-lb-overfitting-0-064337,"np.hstack([X_train, month_avg_values])","np.append(X_train, month_avg_values, axis=1)",np.hstack,np.append
2,zillow-prize-1,https://www.kaggle.com/aharless/kamil-kaczmarek-s-lgbm,"np.hstack([X_train, month_model.predict(month_values.reshape(-1, 1))])","np.concatenate([X_train, month_model.predict(month_values.reshape(-1, 1))], axis=1)",np.hstack,np.concatenate
2,zillow-prize-1,https://www.kaggle.com/kamilkk/no-stacking-no-lb-overfitting-0-064337,"np.hstack([X_train, month_avg_values])","np.concatenate([X_train, month_avg_values], axis=1)",np.hstack,np.concatenate
2,digit-recognizer,https://www.kaggle.com/aawadall/deep-neural-net,np.linalg.norm(grads['dW' + str(L)]),np.sqrt(np.square(grads['dW' + str(L)]).sum()),np.linalg.norm,np.sqrt_sum
2,traveling-santa-2018-prime-paths,https://www.kaggle.com/ekreutz/scoring-function-short-vectorized,"np.linalg.norm(c[1:] - c[:-1], axis=1)","np.sqrt(np.square(c[1:] - c[:-1], axis=1).sum())",np.linalg.norm,np.sqrt_sum
2,titanic,https://www.kaggle.com/arthurlpgc/first-tests,test.dot(Theta),"np.tensordot(test,Theta,axes=1)",np.ndarray.dot,np.tensordot
2,digit-recognizer,https://www.kaggle.com/aawadall/deep-neural-net,"np.sum(t, axis=0)","np.einsum('ij->j',np)",np.ndarray.sum,np.einsum
2,house-prices-advanced-regression-techniques,https://www.kaggle.com/carmnejsu/feature-engineering-different-models,dataset.isnull().values.sum(),"np.einsum('i->',dataset.isnull().values)",np.ndarray.sum,np.einsum
2,sberbank-russian-housing-market,https://www.kaggle.com/azuralrainbow/summer,np.sum(probs ** 2),"np.einsum('i->',np)",np.ndarray.sum,np.einsum
2,rossmann-store-sales,https://www.kaggle.com/lkirch/testingrossmanndata-ipynb,test_df.isnull().sum(),"np.einsum('i->',test_df.isnull())",np.ndarray.sum,np.einsum
2,santander-value-prediction-challenge,https://www.kaggle.com/gcshekar08/testing-without-correcting-the-data-leakage,"df.iloc[:, a:b].sum(1)","np.einsum('i->',df.iloc[:, a:b])",np.ndarray.sum,np.einsum
2,whats-cooking-kernels-only,https://www.kaggle.com/ymatioun/lightgbm-v1,df.sum(axis=0),"np.einsum('ij->j',df)",np.ndarray.sum,np.einsum
2,PLAsTiCC-2018,https://www.kaggle.com/ogrellier/multi-core-aggregations,np.sum(b_s),"np.einsum('i->',np)",np.ndarray.sum,np.einsum
2,costa-rican-household-poverty-prediction,https://www.kaggle.com/aleiken/beginner-xgboost,df_train.groupby('idhogar')['parentesco1'].sum(),"np.einsum('i->',df_train.groupby('idhogar')['parentesco1'])",np.ndarray.sum,np.einsum
2,shelter-animal-outcomes,https://www.kaggle.com/izzul02/age-gender-breed-and-name-vs-outcome,"np.sum(fractions_dog[1:, :1], axis=1)","np.einsum('ij->i',np)",np.ndarray.sum,np.einsum
2,the-nature-conservancy-fisheries-monitoring,https://www.kaggle.com/xingyang/show-me-the-fishes-object-localization-with-cnn,np.sum(train_unique_counts),"np.einsum('i->',np)",np.ndarray.sum,np.einsum
2,prudential-life-insurance-assessment,https://www.kaggle.com/heaviside9/sklearn-linear-regression-benchmark,sa.sum(axis=0),"np.einsum('ij->j',sa)",np.ndarray.sum,np.einsum
2,tap30challenge,https://www.kaggle.com/alishir/iterative-random-forest,"np.sum(np.sqrt(np.power(y_test - y_pre, 2)))","np.einsum('i->',np)",np.ndarray.sum,np.einsum
2,caterpillar-tube-pricing,https://www.kaggle.com/yifanxie/training-set-split-for-cross-validation,np.sum((np.log1p(tr_preds) - np.log1p(tr_test_y)) ** 2),"np.einsum('i->',np)",np.ndarray.sum,np.einsum
2,home-depot-product-search-relevance,https://www.kaggle.com/olest1980/clustering-of-product-descriptions,svd.explained_variance_ratio_.sum(),"np.einsum('i->',svd.explained_variance_ratio_)",np.ndarray.sum,np.einsum
2,digit-recognizer,https://www.kaggle.com/aawadall/deep-neural-net,np.sum(logprobs),"np.einsum('i->',np)",np.ndarray.sum,np.einsum
2,house-prices-advanced-regression-techniques,https://www.kaggle.com/carmnejsu/feature-engineering-different-models,dataset.isnull().sum(),"np.einsum('i->',dataset.isnull())",np.ndarray.sum,np.einsum
2,pubg-finish-placement-prediction,https://www.kaggle.com/ceshine/pytorch-baseline-model,df.memory_usage().sum(),"np.count_nonzero(df.memory_usage(),)",np.ndarray.sum,np.count_nonzero
2,whats-cooking-kernels-only,https://www.kaggle.com/ymatioun/lightgbm-v1,df.sum(axis=0),"np.count_nonzero(df,axis=0)",np.ndarray.sum,np.count_nonzero
2,talkingdata-mobile-user-demographics,https://www.kaggle.com/dollardollar/xgb-with-class-probabilities,row.sum(),"np.count_nonzero(row,)",np.ndarray.sum,np.count_nonzero
2,costa-rican-household-poverty-prediction,https://www.kaggle.com/aleiken/beginner-xgboost,df_train.groupby('idhogar')['parentesco1'].sum(),"np.count_nonzero(df_train.groupby('idhogar')['parentesco1'],)",np.ndarray.sum,np.count_nonzero
2,prudential-life-insurance-assessment,https://www.kaggle.com/heaviside9/sklearn-linear-regression-benchmark,sa.sum(axis=0),"np.count_nonzero(sa,axis=0)",np.ndarray.sum,np.count_nonzero
2,facebook-v-predicting-check-ins,https://www.kaggle.com/larryfreeman/python-starter-0-55,preds.score.sum(),"np.count_nonzero(preds.score,)",np.ndarray.sum,np.count_nonzero
2,expedia-hotel-recommendations,https://www.kaggle.com/qqgeogor/logodds-encoding,temp[features].sum(axis=1),"np.count_nonzero(temp[features],axis=1)",np.ndarray.sum,np.count_nonzero
2,ghouls-goblins-and-ghosts-boo,https://www.kaggle.com/wangquan/test1,np.exp(X).sum(),"np.count_nonzero(np.exp(X),)",np.ndarray.sum,np.count_nonzero
2,airbnb-recruiting-new-user-bookings,https://www.kaggle.com/foutik/script-cleaning-data,df_all.isnull().sum(),"np.count_nonzero(df_all.isnull(),)",np.ndarray.sum,np.count_nonzero
2,santander-value-prediction-challenge,https://www.kaggle.com/upitersoft/test-common-rows,row.nonzero(),np.where(row),np.nonzero,np.where
2,titanic,https://www.kaggle.com/swkim94/test77,np.sum(data_p[data_p['Pclass'] == 3]['Fare']),np.count_nonzero(data_p[data_p['Pclass'] == 3]['Fare']),np.sum,np.count_nonzero
2,quora-question-pairs,https://www.kaggle.com/chechir/export-feats-kernel,np.sum(total_weights),"np.einsum('i->',total_weights)",np.sum,np.einsum
2,digit-recognizer,https://www.kaggle.com/aawadall/deep-neural-net,np.sum(logprobs),"np.einsum('i->',logprobs)",np.sum,np.einsum
2,recruit-restaurant-visitor-forecasting,https://www.kaggle.com/plantsgo/solution-public-0-471-private-0-505,np.sum(yyy),"np.einsum('i->',yyy)",np.sum,np.einsum
2,tap30challenge,https://www.kaggle.com/alishir/iterative-random-forest,"np.sum(np.sqrt(np.power(y_test - y_pre, 2)))",(np.sqrt(np.power(y_test - y_pre).sum( 2))),np.sum,np.ndarray.sum
2,talkingdata-adtracking-fraud-detection,https://www.kaggle.com/judata/talkingdata-xgb-param-tuning-rdm-sampling,"np.sum(np.logical_and(y_pred == 1, y_test == 1))",(np.logical_and(y_pred == 1).sum( y_test == 1)),np.sum,np.ndarray.sum
2,titanic,https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,input_x.transpose(),input_x.column_stack(),np.transpose,np.column_stack
2,introducing-kaggle-scripts,https://www.kaggle.com/liubenyuan/time-series-and-anomaly-detection,D.transpose(),D.column_stack(),np.transpose,np.column_stack
2,digit-recognizer,https://www.kaggle.com/newhardwarefound/artificial-neural-network,activations[-2].transpose(),activations[-2].column_stack(),np.transpose,np.column_stack
2,digit-recognizer,https://www.kaggle.com/newhardwarefound/artificial-neural-network,self.weights[-l + 1].transpose(),self.weights[-l + 1].column_stack(),np.transpose,np.column_stack
2,digit-recognizer,https://www.kaggle.com/newhardwarefound/artificial-neural-network,activations[-l - 1].transpose(),activations[-l - 1].column_stack(),np.transpose,np.column_stack
2,shelter-animal-outcomes,https://www.kaggle.com/xiziling/deal-with,pro_data.transpose(),pro_data.column_stack(),np.transpose,np.column_stack
2,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/chriscc/xgb-cv,"np.array([y_true, y_pred]).transpose()","np.array([y_true, y_pred]).column_stack()",np.transpose,np.column_stack
2,titanic,https://www.kaggle.com/hassanksalim/testing,np.array(test_validate[target_name]).transpose(),np.array(test_validate[target_name]).column_stack(),np.transpose,np.column_stack
2,house-prices-advanced-regression-techniques,https://www.kaggle.com/mosa94/linear-regression-implementations,"np.stack((trainX, np.ones(np.shape(trainX)[0])), axis=0).transpose()","np.stack((trainX, np.ones(np.shape(trainX)[0])), axis=0).column_stack()",np.transpose,np.column_stack
2,house-prices-advanced-regression-techniques,https://www.kaggle.com/mosa94/linear-regression-implementations,trainX_.transpose(),trainX_.column_stack(),np.transpose,np.column_stack
2,house-prices-advanced-regression-techniques,https://www.kaggle.com/mosa94/linear-regression-implementations,q.transpose(),q.column_stack(),np.transpose,np.column_stack
2,house-prices-advanced-regression-techniques,https://www.kaggle.com/mosa94/linear-regression-implementations,V.transpose(),V.column_stack(),np.transpose,np.column_stack
2,house-prices-advanced-regression-techniques,https://www.kaggle.com/mosa94/linear-regression-implementations,U.transpose(),U.column_stack(),np.transpose,np.column_stack
2,titanic,https://www.kaggle.com/shankarpendse/titanicsurvivortraining,Theta1.transpose(),Theta1.column_stack(),np.transpose,np.column_stack
2,titanic,https://www.kaggle.com/shankarpendse/titanicsurvivortraining,Theta2.transpose(),Theta2.column_stack(),np.transpose,np.column_stack
2,titanic,https://www.kaggle.com/shankarpendse/titanicsurvivortraining,delta2.transpose(),delta2.column_stack(),np.transpose,np.column_stack
2,titanic,https://www.kaggle.com/shankarpendse/titanicsurvivortraining,delta3.transpose(),delta3.column_stack(),np.transpose,np.column_stack
2,mercedes-benz-greener-manufacturing,https://www.kaggle.com/tilii7/you-want-outliers-we-got-them-outliers,"np.vstack((target, target_pred)).transpose()","np.vstack((target, target_pred)).column_stack()",np.transpose,np.column_stack
2,titanic,https://www.kaggle.com/bwboerman/a-quick-dive-into-h2o-with-python,trainData.describe().transpose(),trainData.describe().column_stack(),np.transpose,np.column_stack
2,titanic,https://www.kaggle.com/arthurlpgc/first-tests,(anstrain - Pred).transpose(),(anstrain - Pred).column_stack(),np.transpose,np.column_stack
2,digit-recognizer,https://www.kaggle.com/hideki1234/neural-network,"np.vstack((a_0, X.T))","np.concatenate((a_0, X.T), axis=0)",np.vstack,np.concatenate
2,digit-recognizer,https://www.kaggle.com/hideki1234/neural-network,"np.vstack((a_0, A2))","np.concatenate((a_0, A2), axis=0)",np.vstack,np.concatenate
2,titanic,https://www.kaggle.com/abrierly/nn-approach,"np.vstack((1.0, a_1))","np.concatenate((1.0, a_1), axis=0)",np.vstack,np.concatenate
2,titanic,https://www.kaggle.com/abrierly/nn-approach,"np.vstack((1.0, np.dot(theta_0, a_0)))","np.concatenate((1.0, np.dot(theta_0, a_0)), axis=0)",np.vstack,np.concatenate
2,allstate-claims-severity,https://www.kaggle.com/nightshade7/allstatetest,"np.vstack((catData, temp))","np.concatenate((catData, temp), axis=0)",np.vstack,np.concatenate
2,airbnb-recruiting-new-user-bookings,https://www.kaggle.com/justfor/just-air-play,"np.where(np.logical_or(av < 14, av > 90), -1, av)",(av).map(lambda x : 2015 - av if x >= 1900 else  av).values,np.where,pd.Series.map
2,airbnb-recruiting-new-user-bookings,https://www.kaggle.com/etherqua/airbnbdemo,"np.where(np.logical_or(av < 14, av > 100), -1, av)","pd.DataFrame(df.y.values).apply(lambda x : x < eps).replace({True: 0,False: df.y.values - eps}).values.flatten()",np.where,pd.DataFrame.apply
2,traveling-santa-2018-prime-paths,https://www.kaggle.com/scottclowe/scoring-function-vectorised,"np.where(p, 1.0, 1.1)","pd.DataFrame(df.y.values).apply(lambda x : x < eps).replace({True: 0,False: df.y.values - eps}).values.flatten()",np.where,pd.DataFrame.apply
2,traveling-santa-2018-prime-paths,https://www.kaggle.com/ekreutz/scoring-function-short-vectorized,"np.where(np.isin(path[9:-1:10], primes, True, True))","pd.DataFrame(mask).apply(lambda x : x > 128).replace({True: True,False: False}).values.flatten()",np.where,pd.DataFrame.apply
2,sberbank-russian-housing-market,https://www.kaggle.com/timhenry/xgb-7,"np.where(df_macro.cpi.isnull(), 1, df_macro.cpi)","pd.DataFrame(pred_test_y).apply(lambda x : x > 0.5).replace({True: 1,False: 0}).values.flatten()",np.where,pd.DataFrame.apply
2,titanic,https://www.kaggle.com/bwboerman/a-quick-dive-into-h2o-with-python,"np.where(fullData.Age.isnull(), 0, 1)","pd.DataFrame(y_pred[:]).apply(lambda x : x > 0.95).replace({True: 1,False: 0}).values.flatten()",np.where,pd.DataFrame.apply
2,kobe-bryant-shot-selection,https://www.kaggle.com/brandao/test-6,"df.apply(lambda row: row['action_type'] if actiontypes[row['action_type']] >	    20 else row['combined_shot_type'], axis=1)", actiontypes[df['action_type']].apply(lambda row: row['action_type'] if row >	    20 else row['combined_shot_type']),pd.DataFrame.apply,pd.Series.apply
2,nyc-taxi-trip-duration,https://www.kaggle.com/amazone/lightgbm-regressor,"df.apply(lambda row: 1 if row['month'] == 1 and row['day'] == 1 or row[	    'month'] == 7 and row['day'] == 4 or row['month'] == 11 and row['day'] ==	    11 or row['month'] == 12 and row['day'] == 25 or row['month'] == 1 and 	    row['day'] >= 15 and row['day'] <= 21 and row['weekday'] == 0 or row[	    'month'] == 2 and row['day'] >= 15 and row['day'] <= 21 and row[	    'weekday'] == 0 or row['month'] == 5 and row['day'] >= 25 and row['day'	    ] <= 31 and row['weekday'] == 0 or row['month'] == 9 and row['day'] >= 	    1 and row['day'] <= 7 and row['weekday'] == 0 or row['month'] == 10 and	    row['day'] >= 8 and row['day'] <= 14 and row['weekday'] == 0 or row[	    'month'] == 11 and row['day'] >= 22 and row['day'] <= 28 and row[	    'weekday'] == 3 else 0, axis=1)", df['month'] == 1 and df['day'] == 1 or df[	    'month'] == 7 and df['day'] == 4 or df['month'] == 11 and df['day'] ==	    11 or df['month'] == 12 and df['day'] == 25 or df['month'] == 1 and 	    df['day'] >= 15 and df['day'] <= 21 and df['weekday'] == 0 or df[	    'month'] == 2 and df['day'] >= 15 and df['day'] <= 21 and df[	    'weekday'] == 0 or df['month'] == 5 and df['day'] >= 25 and df['day'	    ] <= 31 and df['weekday'] == 0 or df['month'] == 9 and df['day'] >= 	    1 and df['day'] <= 7 and df['weekday'] == 0 or df['month'] == 10 and	    df['day'] >= 8 and df['day'] <= 14 and df['weekday'] == 0 or df[	    'month'] == 11 and df['day'] >= 22 and df['day'] <= 28 and df[	    'weekday'].apply(lambda row: 1 if row == 3 else 0),pd.DataFrame.apply,pd.Series.apply
2,nyc-taxi-trip-duration,https://www.kaggle.com/amazone/lightgbm-regressor,"df.apply(lambda row: 1 if row['month'] == 12 and row['day'] == 31 or row[	    'month'] == 7 and row['day'] == 3 or row['month'] == 11 and row['day'] ==	    10 or row['month'] == 12 and row['day'] == 24 or row['month'] == 1 and 	    row['day'] >= 14 and row['day'] <= 20 and row['weekday'] == 6 or row[	    'month'] == 2 and row['day'] >= 14 and row['day'] <= 20 and row[	    'weekday'] == 6 or row['month'] == 5 and row['day'] >= 24 and row['day'	    ] <= 30 and row['weekday'] == 6 or (row['month'] == 9 and row['day'] >=	    1 and row['day'] <= 6 or (row['month'] == 8 and row['day'] == 31) and 	    row['weekday'] == 6) or row['month'] == 10 and row['day'] >= 7 and row[	    'day'] <= 13 and row['weekday'] == 6 or row['month'] == 11 and row[	    'day'] >= 21 and row['day'] <= 27 and row['weekday'] == 2 else 0, axis=1)", df['month'] == 12 and df['day'] == 31 or df[	    'month'] == 7 and df['day'] == 3 or df['month'] == 11 and df['day'] ==	    10 or df['month'] == 12 and df['day'] == 24 or df['month'] == 1 and 	    df['day'] >= 14 and df['day'] <= 20 and df['weekday'] == 6 or df[	    'month'] == 2 and df['day'] >= 14 and df['day'] <= 20 and df[	    'weekday'] == 6 or df['month'] == 5 and df['day'] >= 24 and df['day'	    ] <= 30 and df['weekday'] == 6 or (df['month'] == 9 and df['day'] >=	    1 and df['day'] <= 6 or (df['month'] == 8 and df['day'] == 31) and 	    df['weekday'] == 6) or df['month'] == 10 and df['day'] >= 7 and df[	    'day'] <= 13 and df['weekday'] == 6 or df['month'] == 11 and df[	    'day'] >= 21 and df['day'] <= 27 and df['weekday'].apply(lambda row: 1 if row == 2 else 0),pd.DataFrame.apply,pd.Series.apply
2,caterpillar-tube-pricing,https://www.kaggle.com/marbel/keras-dummy-vars,"df.apply(lambda row: row[field] if row[field] in filtered else float('NaN'),	    axis=1)", df[field].apply(lambda row:row if row in filtered else float('NaN')),pd.DataFrame.apply,pd.Series.apply
2,mercedes-benz-greener-manufacturing,https://www.kaggle.com/adityakumarsinha/stacked-then-averaged-models-private-lb-0-554,"sub.apply(lambda r: leaks[int(r['ID'])] if int(r['ID']) in leaks else r['y'	    ], axis=1)","np.where( int(sub['ID']) in leaks , leaks[int(sub['ID'])] ,sub['y'	    ])",pd.DataFrame.apply,np.where
2,titanic,https://www.kaggle.com/alexai/competition5,"combined.apply(lambda r: fillAges(r) if np.isnan(r['Age']) else r['Age'],	    axis=1)","np.where( np.isnan(combined['Age']) , fillAges(combined) ,combined['Age'])",pd.DataFrame.apply,np.where
2,kobe-bryant-shot-selection,https://www.kaggle.com/jaycb26/xgbryant,"data.apply(lambda row: row['action_type'] if total_actions[row[	    'action_type']] >= threshold else row['combined_shot_type'], axis=1)", total_actions[data[	    'action_type']].apply(lambda row: row['action_type'] if row >= threshold else row['combined_shot_type']),pd.DataFrame.apply,pd.Series.apply
2,titanic,https://www.kaggle.com/samching/log-and-linear-regression-for-titanic,titanic['Embarked'].fillna('S'),titanic['Embarked'].combine_first(titanic['Embarked'].applymap(lambda x: 'S')),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/unlikelybutpossible/logistic,dataset['Embarked'].fillna('S'),dataset['Embarked'].combine_first(dataset['Embarked'].applymap(lambda x: 'S')),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/unlikelybutpossible/logistic,dataset['Fare'].fillna(train['Fare'].median()),dataset['Fare'].combine_first(dataset['Fare'].applymap(lambda x: train['Fare'].median())),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/unlikelybutpossible/logistic,dataset['Title'].fillna(0),dataset['Title'].combine_first(dataset['Title'].applymap(lambda x: 0)),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/kingarthurie/titanik-rdf,data['Age'].fillna(data['Age'].median()),data['Age'].combine_first(data['Age'].applymap(lambda x: data['Age'].median())),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/kingarthurie/titanik-rdf,data['Embarked'].fillna('S'),data['Embarked'].combine_first(data['Embarked'].applymap(lambda x: 'S')),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/kingarthurie/titanik-rdf,data['Fare'].fillna(data['Fare'].median()),data['Fare'].combine_first(data['Fare'].applymap(lambda x: data['Fare'].median())),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/robdias/predictfy-titanic-survival,t_train['Age'].fillna(t_train['Age'].median()),t_train['Age'].combine_first(t_train['Age'].applymap(lambda x: t_train['Age'].median())),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/robdias/predictfy-titanic-survival,t_train['Embarked'].fillna('S'),t_train['Embarked'].combine_first(t_train['Embarked'].applymap(lambda x: 'S')),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/corgicoffee/kernelb4bd873fab,test_data['Fare'].fillna(test_data['Fare'].mean()),test_data['Fare'].combine_first(test_data['Fare'].applymap(lambda x: test_data['Fare'].mean())),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/corgicoffee/kernelb4bd873fab,train_data['Age'].fillna(train_data['Age'].mean()),train_data['Age'].combine_first(train_data['Age'].applymap(lambda x: train_data['Age'].mean())),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/corgicoffee/kernelb4bd873fab,test_data['Age'].fillna(test_data['Age'].mean()),test_data['Age'].combine_first(test_data['Age'].applymap(lambda x: test_data['Age'].mean())),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/utsavpatel/titanic-test,titanic['Age'].fillna(titanic['Age'].median()),titanic['Age'].combine_first(titanic['Age'].applymap(lambda x: titanic['Age'].median())),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/utsavpatel/titanic-test,titanic['Fare'].fillna(titanic['Fare'].median()),titanic['Fare'].combine_first(titanic['Fare'].applymap(lambda x: titanic['Fare'].median())),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/utsavpatel/titanic-test,titanic_test['Age'].fillna(titanic['Age'].median()),titanic_test['Age'].combine_first(titanic_test['Age'].applymap(lambda x: titanic['Age'].median())),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/utsavpatel/titanic-test,titanic_test['Embarked'].fillna('S'),titanic_test['Embarked'].combine_first(titanic_test['Embarked'].applymap(lambda x: 'S')),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/utsavpatel/titanic-test,titanic_test['Fare'].fillna(titanic_test['Fare'].median()),titanic_test['Fare'].combine_first(titanic_test['Fare'].applymap(lambda x: titanic_test['Fare'].median())),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/thamagame/titanic-with-learning-curves,colonne.fillna(moyenne),colonne.combine_first(colonne.applymap(lambda x: moyenne)),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/thamagame/titanic-with-learning-curves,dataFrame['Cabin'].fillna(0),dataFrame['Cabin'].combine_first(dataFrame['Cabin'].applymap(lambda x: 0)),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/thamagame/titanic-with-learning-curves,dataFrame['Embarked'].fillna('S'),dataFrame['Embarked'].combine_first(dataFrame['Embarked'].applymap(lambda x: 'S')),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/anki08/using-xgboost,df['Embarked'].fillna('S'),df['Embarked'].combine_first(df['Embarked'].applymap(lambda x: 'S')),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/anki08/using-xgboost,df['Fare'].fillna(df['Fare'].mean()),df['Fare'].combine_first(df['Fare'].applymap(lambda x: df['Fare'].mean())),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/aiswaryaramachandran/titanic-logistic-regression,new_full_data['Embarked'].fillna(most_frequent_value),new_full_data['Embarked'].combine_first(new_full_data['Embarked'].applymap(lambda x: most_frequent_value)),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/aiswaryaramachandran/titanic-logistic-regression,new_full_data.Fare.fillna(meanFare),new_full_data.Fare.combine_first(new_full_data.Fare.applymap(lambda x: meanFare)),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,talkingdata-mobile-user-demographics,https://www.kaggle.com/zhoulaiqing/feature-starter,labelCategories.category.fillna('unknown'),labelCategories.category.combine_first(labelCategories.category.applymap(lambda x: 'unknown')),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,zillow-prize-1,https://www.kaggle.com/abhisheksharma26jan/zillowabhishek,properties[c].fillna(-1),properties[c].combine_first(properties[c].applymap(lambda x: -1)),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,jigsaw-toxic-comment-classification-challenge,https://www.kaggle.com/yekenot/toxic-regression,df.fillna('unknown'),df.combine_first(df.applymap(lambda x: 'unknown')),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,PLAsTiCC-2018,https://www.kaggle.com/ogrellier/multi-core-aggregations,full_test.fillna(self.fill_nan),full_test.combine_first(full_test.applymap(lambda x: self.fill_nan)),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/humblecoder/titanic-disaster,train['Age'].fillna(np.mean(train['Age'])),train['Age'].combine_first(train['Age'].applymap(lambda x: np.mean(train['Age']))),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/humblecoder/titanic-disaster,test['Age'].fillna(np.mean(test['Age'])),test['Age'].combine_first(test['Age'].applymap(lambda x: np.mean(test['Age']))),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,pubg-finish-placement-prediction,https://www.kaggle.com/albytho/pubg-prediction-ann-implementation,df_train[column].fillna(mean_value),df_train[column].combine_first(df_train[column].applymap(lambda x: mean_value)),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,titanic,https://www.kaggle.com/humblecoder/titanic-disaster,test['Fare'].fillna(np.mean(test['Fare'])),test['Fare'].combine_first(test['Fare'].applymap(lambda x: np.mean(test['Fare']))),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,home-credit-default-risk,https://www.kaggle.com/danofer/fork-lightgbm-with-simple-features-oof-preds,df['NEW_SCORES_STD'].fillna(df['NEW_SCORES_STD'].mean()),df['NEW_SCORES_STD'].combine_first(df['NEW_SCORES_STD'].applymap(lambda x: df['NEW_SCORES_STD'].mean())),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,favorita-grocery-sales-forecasting,https://www.kaggle.com/tkm2261/eval-metric-and-evaluating-last-year-sales-bench,df_2017.prev_unit_sales.fillna(0),df_2017.prev_unit_sales.combine_first(df_2017.prev_unit_sales.applymap(lambda x: 0)),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,expedia-hotel-recommendations,https://www.kaggle.com/animesh371/expediascript,frame[datename].fillna('2015-01-01'),frame[datename].combine_first(frame[datename].applymap(lambda x: '2015-01-01')),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,caterpillar-tube-pricing,https://www.kaggle.com/tanayz/python-implementation-of-r-benchmark,"train1.ix[:, (i)].fillna('NAvalue')","train1.ix[:, (i)].combine_first(train1.ix[:, (i)].applymap(lambda x: 'NAvalue'))",pd.DataFrame.fillna,pd.DataFrame.combine_first
2,sf-crime,https://www.kaggle.com/kalifou/crimes,train['Category'].fillna(2),train['Category'].combine_first(train['Category'].applymap(lambda x: 2)),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,allstate-claims-severity,https://www.kaggle.com/scirpus/quick-genetic-programme,x.fillna(x.mean()),x.combine_first(x.applymap(lambda x: x.mean())),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,grupo-bimbo-inventory-demand,https://www.kaggle.com/vicgalle/means,test['Demanda_uni_equil'].fillna(test['Demanda_uni_equil_y']),test['Demanda_uni_equil'].combine_first(test['Demanda_uni_equil'].applymap(lambda x: test['Demanda_uni_equil_y'])),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,costa-rican-household-poverty-prediction,https://www.kaggle.com/anqitu/hackoss-base-model-demonstration,np.log(train['v2a1'] + 1).fillna(0),np.log(train['v2a1'] + 1).combine_first(np.log(train['v2a1'] + 1).applymap(lambda x: 0)),pd.DataFrame.fillna,pd.DataFrame.combine_first
2,sberbank-russian-housing-market,https://www.kaggle.com/inverse1/competition,train.iloc[0],train.iat[0],pd.DataFrame.iloc,pd.DataFrame.iat
2,pubg-finish-placement-prediction,https://www.kaggle.com/zeal626/10k-samples-baseline-rf,train_data.iloc[1:10000],train_data.iat[1:10000],pd.DataFrame.iloc,pd.DataFrame.iat
2,homesite-quote-conversion,https://www.kaggle.com/prakashanand/first-model,"complete_data.iloc[0:train_length,]","complete_data.iat[0:train_length,]",pd.DataFrame.iloc,pd.DataFrame.iat
2,prudential-life-insurance-assessment,https://www.kaggle.com/syroejka/prudential-new,"train.iloc[:, :20]","train.iat[:, :20]",pd.DataFrame.iloc,pd.DataFrame.iat
2,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/vikasrtr/histogram-of-all-fields,"train.iloc[:, (i)]","train.iat[:, (i)]",pd.DataFrame.iloc,pd.DataFrame.iat
2,jigsaw-toxic-comment-classification-challenge,https://www.kaggle.com/mknawara/simple-logistic-classifier,"Y_train.iloc[:, (i)]","Y_train.iat[:, (i)]",pd.DataFrame.iloc,pd.DataFrame.iat
2,prudential-life-insurance-assessment,https://www.kaggle.com/syroejka/prudential-new,"train.iloc[:, 20:40]","train.iat[:, 20:40]",pd.DataFrame.iloc,pd.DataFrame.iat
2,expedia-hotel-recommendations,https://www.kaggle.com/manels/dataquest-tutorial,t2.iloc[i],t2.iat[i],pd.DataFrame.iloc,pd.DataFrame.iat
2,santas-uncertain-bags,https://www.kaggle.com/jonmanly/first-fit-algorithm-two-pass-lb-31907-53,gifts.iloc[i],gifts.iat[i],pd.DataFrame.iloc,pd.DataFrame.iat
2,traveling-santa-2018-prime-paths,https://www.kaggle.com/alijs1/very-simple-sorting-one-liner-baseline,pd.read_csv('../input/cities.csv').iloc[1:],pd.read_csv('../input/cities.csv').iat[1:],pd.DataFrame.iloc,pd.DataFrame.iat
2,crowdflower-search-relevance,https://www.kaggle.com/dlyzer/k-nearest-neighbors,traind.iloc[0],traind.iat[0],pd.DataFrame.iloc,pd.DataFrame.iat
2,caterpillar-tube-pricing,https://www.kaggle.com/nickel/bracket-pricing-variable-and-fixed-cost,c.iloc[0:1],c.iat[0:1],pd.DataFrame.iloc,pd.DataFrame.iat
2,porto-seguro-safe-driver-prediction,https://www.kaggle.com/ogrellier/xgb-classifier-upsampling-lb-0-283,trn_df.iloc[trn_idx],trn_df.iat[trn_idx],pd.DataFrame.iloc,pd.DataFrame.iat
2,santander-value-prediction-challenge,https://www.kaggle.com/gcshekar08/testing-without-correcting-the-data-leakage,"df.iloc[:, a:b]","df.iat[:, a:b]",pd.DataFrame.iloc,pd.DataFrame.iat
2,house-prices-advanced-regression-techniques,https://www.kaggle.com/jsaadani/simple-ridge-regression-in-python,"df.iloc[:df_train.shape[0],]","df.iat[:df_train.shape[0],]",pd.DataFrame.iloc,pd.DataFrame.iat
2,house-prices-advanced-regression-techniques,https://www.kaggle.com/jsaadani/simple-ridge-regression-in-python,"df.iloc[df_train.shape[0]:,]","df.iat[df_train.shape[0]:,]",pd.DataFrame.iloc,pd.DataFrame.iat
2,whats-cooking-kernels-only,https://www.kaggle.com/ymatioun/lightgbm-v1,df.iloc[train_idx],df.iat[train_idx],pd.DataFrame.iloc,pd.DataFrame.iat
2,costa-rican-household-poverty-prediction,https://www.kaggle.com/ymatioun/hoh-only-scaled,merged_df.iloc[train_idx],merged_df.iat[train_idx],pd.DataFrame.iloc,pd.DataFrame.iat
2,home-credit-default-risk,https://www.kaggle.com/sandeshak/home-credit-default-with-lgbm,"df.iloc[:train.shape[0], :]","df.iat[:train.shape[0], :]",pd.DataFrame.iloc,pd.DataFrame.iat
2,digit-recognizer,https://www.kaggle.com/davidecremonapoli/digit-test,"train_df.iloc[0:5000, 1:]","train_df.iat[0:5000, 1:]",pd.DataFrame.iloc,pd.DataFrame.iat
2,titanic,https://www.kaggle.com/lindenlu/linden-titanic-script,train_df.iloc[0],train_df.iat[0],pd.DataFrame.iloc,pd.DataFrame.iat
2,grupo-bimbo-inventory-demand,https://www.kaggle.com/kvaradi94/masodik-feladat,"df.iloc[:, (i)]","df.iat[:, (i)]",pd.DataFrame.iloc,pd.DataFrame.iat
2,sf-crime,https://www.kaggle.com/dollardollar/importance-of-address-features,"shuffle(fold0, random_state=123).iloc[0:300000, :]","shuffle(fold0, random_state=123).iat[0:300000, :]",pd.DataFrame.iloc,pd.DataFrame.iat
2,santander-customer-satisfaction,https://www.kaggle.com/nikolayburlutskiy/xgboost-in-python-0-83x,"train_df.iloc[:, :-1]","train_df.iat[:, :-1]",pd.DataFrame.iloc,pd.DataFrame.iat
2,allstate-claims-severity,https://www.kaggle.com/shkabko/lexical-encoding-feature-comb,"train_test.iloc[:ntrain, :]","train_test.iat[:ntrain, :]",pd.DataFrame.iloc,pd.DataFrame.iat
2,web-traffic-time-series-forecasting,https://www.kaggle.com/soutou/first-model-lb-46-3,"train.iloc[:, 1:]","train.iat[:, 1:]",pd.DataFrame.iloc,pd.DataFrame.iat
2,predicting-red-hat-business-value,https://www.kaggle.com/xingobar/classify-group,ppl.iloc[testset],ppl.iat[testset],pd.DataFrame.iloc,pd.DataFrame.iat
2,home-depot-product-search-relevance,https://www.kaggle.com/arjundatt/trial1,df_all.iloc[:num_train],df_all.iat[:num_train],pd.DataFrame.iloc,pd.DataFrame.iat
2,forest-cover-type-kernels-only,https://www.kaggle.com/sunfulv1/nmsz1816010,"xx_func.iloc[:train_.shape[0], :]","xx_func.iat[:train_.shape[0], :]",pd.DataFrame.iloc,pd.DataFrame.iat
2,bnp-paribas-cardif-claims-management,https://www.kaggle.com/happycube/simple-cv-example-one-feature-near-rf,all_data.iloc[:num_train],all_data.iat[:num_train],pd.DataFrame.iloc,pd.DataFrame.iat
2,ghouls-goblins-and-ghosts-boo,https://www.kaggle.com/wangquan/test1,train_test.iloc[:len(y_train)],train_test.iat[:len(y_train)],pd.DataFrame.iloc,pd.DataFrame.iat
2,digit-recognizer,https://www.kaggle.com/poslegm/pca-svm-97-8-accuracy,"train.ix[:, 'pixel0':]","train.loc[:, 'plocel0':]",pd.DataFrame.ix,pd.DataFrame.loc
2,digit-recognizer,https://www.kaggle.com/isaac7/visualize-mnist,"train.ix[(train['label'] == y), 1:]","train.loc[(train['label'] == y), 1:]",pd.DataFrame.ix,pd.DataFrame.loc
2,prudential-life-insurance-assessment,https://www.kaggle.com/justinabel/prud-1,"train_sample.ix[:, start_col:end_col]","train_sample.loc[:, start_col:end_col]",pd.DataFrame.ix,pd.DataFrame.loc
2,house-prices-advanced-regression-techniques,https://www.kaggle.com/opanichev/ensemble-of-4-models-with-cv-lb-0-11489,"test_df.loc[1116, 'GarageType']","test_df.ix[1116, 'GarageType']",pd.DataFrame.loc,pd.DataFrame.ix
2,house-prices-advanced-regression-techniques,https://www.kaggle.com/nicehuster/xgboost-lassomodel,"test_df.loc[666, 'GarageQual']","test_df.ix[666, 'GarageQual']",pd.DataFrame.loc,pd.DataFrame.ix
2,house-prices-advanced-regression-techniques,https://www.kaggle.com/nicehuster/xgboost-lassomodel,"test_df.loc[666, 'GarageCond']","test_df.ix[666, 'GarageCond']",pd.DataFrame.loc,pd.DataFrame.ix
2,house-prices-advanced-regression-techniques,https://www.kaggle.com/nicehuster/xgboost-lassomodel,"test_df.loc[666, 'GarageFinish']","test_df.ix[666, 'GarageFinish']",pd.DataFrame.loc,pd.DataFrame.ix
2,house-prices-advanced-regression-techniques,https://www.kaggle.com/nicehuster/xgboost-lassomodel,"test_df.loc[666, 'GarageYrBlt']","test_df.ix[666, 'GarageYrBlt']",pd.DataFrame.loc,pd.DataFrame.ix
2,titanic,https://www.kaggle.com/journeycheng/script-py,"train_df.loc[iter, 'Name']","train_df.ix[iter, 'Name']",pd.DataFrame.loc,pd.DataFrame.ix
2,titanic,https://www.kaggle.com/journeycheng/script-py,"train_df.loc[iter, 'Title']","train_df.ix[iter, 'Title']",pd.DataFrame.loc,pd.DataFrame.ix
2,titanic,https://www.kaggle.com/journeycheng/script-py,"test_df.loc[iter, 'Name']","test_df.ix[iter, 'Name']",pd.DataFrame.loc,pd.DataFrame.ix
2,titanic,https://www.kaggle.com/journeycheng/script-py,"test_df.loc[iter, 'Title']","test_df.ix[iter, 'Title']",pd.DataFrame.loc,pd.DataFrame.ix
2,titanic,https://www.kaggle.com/thebrocean/benchmarking-random-forests,"df.loc[passenger, 'Age']","df.ix[passenger, 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
2,web-traffic-time-series-forecasting,https://www.kaggle.com/soutou/first-model-lb-46-3,"keys.loc[newkey, 'Id']","keys.ix[newkey, 'Id']",pd.DataFrame.loc,pd.DataFrame.ix
2,allstate-claims-severity,https://www.kaggle.com/rrkc00/xgboost,"c.loc[:, (c.columns.str.startswith('cat'))]","c.ix[:, (c.columns.str.startswith('cat'))]",pd.DataFrame.loc,pd.DataFrame.ix
2,titanic,https://www.kaggle.com/gilsonfaria/scriptfinal,"train.loc[i, 'numFam']","train.ix[i, 'numFam']",pd.DataFrame.loc,pd.DataFrame.ix
2,titanic,https://www.kaggle.com/gilsonfaria/scriptfinal,"test.loc[i, 'numFam']","test.ix[i, 'numFam']",pd.DataFrame.loc,pd.DataFrame.ix
2,titanic,https://www.kaggle.com/gilsonfaria/script4-boolsibsp-parch,"train.loc[i, 'SibSp']","train.ix[i, 'SibSp']",pd.DataFrame.loc,pd.DataFrame.ix
2,titanic,https://www.kaggle.com/gilsonfaria/script4-boolsibsp-parch,"test.loc[i, 'SibSp']","test.ix[i, 'SibSp']",pd.DataFrame.loc,pd.DataFrame.ix
2,titanic,https://www.kaggle.com/gilsonfaria/script4-boolsibsp-parch,"train.loc[i, 'Parch']","train.ix[i, 'Parch']",pd.DataFrame.loc,pd.DataFrame.ix
2,titanic,https://www.kaggle.com/gilsonfaria/script4-boolsibsp-parch,"test.loc[i, 'Parch']","test.ix[i, 'Parch']",pd.DataFrame.loc,pd.DataFrame.ix
2,titanic,https://www.kaggle.com/piplimoon/leaderboard-0-8134,"Surname_list.loc[ctr, 'Surname']","Surname_list.ix[ctr, 'Surname']",pd.DataFrame.loc,pd.DataFrame.ix
2,titanic,https://www.kaggle.com/piplimoon/leaderboard-0-8134,"Title_list.loc[ctr, 'Title']","Title_list.ix[ctr, 'Title']",pd.DataFrame.loc,pd.DataFrame.ix
2,titanic,https://www.kaggle.com/piplimoon/leaderboard-0-8134,"Filler_Ages.male.loc[row['Title'], row['Pclass']]","Filler_Ages.male.ix[row['Title'], row['Pclass']]",pd.DataFrame.loc,pd.DataFrame.ix
2,titanic,https://www.kaggle.com/piplimoon/leaderboard-0-8134,"Filler_Ages.female.loc[row['Title'], row['Pclass']]","Filler_Ages.female.ix[row['Title'], row['Pclass']]",pd.DataFrame.loc,pd.DataFrame.ix
2,titanic,https://www.kaggle.com/rchitic17/titanic-r-to-python,"full.loc[1043, 'Fare']","full.ix[1043, 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
2,titanic,https://www.kaggle.com/rchitic17/titanic-r-to-python,"full.loc[i - 1, 'Pclass']","full.ix[i - 1, 'Pclass']",pd.DataFrame.loc,pd.DataFrame.ix
2,titanic,https://www.kaggle.com/rchitic17/titanic-r-to-python,"full.loc[i - 1, 'Sex']","full.ix[i - 1, 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
2,titanic,https://www.kaggle.com/rchitic17/titanic-r-to-python,"full.loc[i - 1, 'Age']","full.ix[i - 1, 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
2,titanic,https://www.kaggle.com/hravat/titanic-dataset-log-regression-modeling-script,"df_titanic_train_mod.loc[index, 'Title']","df_titanic_train_mod.ix[index, 'Title']",pd.DataFrame.loc,pd.DataFrame.ix
2,titanic,https://www.kaggle.com/abrierly/explore-titanic-python,"test2.loc[152, 'Fare']","test2.ix[152, 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
2,grupo-bimbo-inventory-demand,https://www.kaggle.com/lahirumadushanka/small-change,"dftest.loc[index, 'predict']","dftest.ix[index, 'predict']",pd.DataFrame.loc,pd.DataFrame.ix
2,web-traffic-time-series-forecasting,https://www.kaggle.com/mikeskim/logmean-imputation,"logmean_df.apply(mean_fill, axis=1)","logmean_df.map(mean_fill, axis=1)",pd.Series.apply,pd.Series.map
2,titanic,https://www.kaggle.com/thamagame/titanic-with-learning-curves,"df.apply(np.random.shuffle, axis=axis)","df.map(np.random.shuffle, axis=axis)",pd.Series.apply,pd.Series.map
2,transfer-learning-on-stack-exchange-tags,https://www.kaggle.com/nlothian/adversarial-validation,"df.apply(process, axis=1)","df.map(process, axis=1)",pd.Series.apply,pd.Series.map
2,web-traffic-time-series-forecasting,https://www.kaggle.com/mikeskim/logmean-imputation,data[date_cols].apply(lambda x: x.fillna(value=data['imputed_values'])),data[date_cols].map(lambda x: x.fillna(value=data['imputed_values'])),pd.Series.apply,pd.Series.map
2,springleaf-marketing-response,https://www.kaggle.com/wawanco/data-ownership-numeric-features,"train.apply(lambda x: x.nunique(dropna=False), axis=0)","train.map(lambda x: x.nunique(dropna=False), axis=0)",pd.Series.apply,pd.Series.map
2,new-york-city-taxi-fare-prediction,https://www.kaggle.com/hbajaj/nyc-taxi-fare-rfr-script,"tmp_df.apply(distance_between_two_points, axis=1)","tmp_df.map(distance_between_two_points, axis=1)",pd.Series.apply,pd.Series.map
2,talkingdata-adtracking-fraud-detection,https://www.kaggle.com/tyburam/talkingdataadtrackingfrauddetectionchallenge,"df.apply(lambda row: freq_hours(row), axis=1)","df.map(lambda row: freq_hours(row), axis=1)",pd.Series.apply,pd.Series.map
2,house-prices-advanced-regression-techniques,https://www.kaggle.com/naropian/narnar-test,df_train[QUANT_COLS].apply(lambda x: st.skew(x)),df_train[QUANT_COLS].map(lambda x: st.skew(x)),pd.Series.apply,pd.Series.map
2,titanic,https://www.kaggle.com/nimz911/titanic-logisticregression,df['Name'].str.contains(' Mrs. ').astype('category'),df['Name'].str.contains(' Mrs. ').apply('category'),pd.Series.astype,pd.Series.apply
2,titanic,https://www.kaggle.com/nimz911/titanic-logisticregression,df['Name'].str.contains(' Miss. ').astype('category'),df['Name'].str.contains(' Miss. ').apply('category'),pd.Series.astype,pd.Series.apply
2,titanic,https://www.kaggle.com/nimz911/titanic-logisticregression,df['Name'].str.contains(' Ms. ').astype('category'),df['Name'].str.contains(' Ms. ').apply('category'),pd.Series.astype,pd.Series.apply
2,titanic,https://www.kaggle.com/nimz911/titanic-logisticregression,df['title'].astype('category'),df['title'].apply('category'),pd.Series.astype,pd.Series.apply
2,zillow-prize-1,https://www.kaggle.com/sudhirnl7/linear-model,properties[c].astype(np.float32),properties[c].apply(np.float32),pd.Series.astype,pd.Series.apply
2,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/themachine/the-machine-ii,train[i].astype('category'),train[i].apply('category'),pd.Series.astype,pd.Series.apply
2,zillow-prize-1,https://www.kaggle.com/valadi/xgb-w-o-outliers-lgb-with-outliers-combo-tune6,prop[c].astype(np.float32),prop[c].apply(np.float32),pd.Series.astype,pd.Series.apply
2,prudential-life-insurance-assessment,https://www.kaggle.com/realtwo/xgb-test,y.astype(int),y.apply(int),pd.Series.astype,pd.Series.apply
2,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/soutik/xgboost-python-forked,train_s.astype(float),train_s.apply(float),pd.Series.astype,pd.Series.apply
2,titanic,https://www.kaggle.com/gilsonfaria/scriptfinal,output.astype('int'),output.apply('int'),pd.Series.astype,pd.Series.apply
2,digit-recognizer,https://www.kaggle.com/pranaysahith/digit-recognizer,df['label'].astype(int),df['label'].apply(int),pd.Series.astype,pd.Series.apply
2,home-credit-default-risk,https://www.kaggle.com/legorreta/first-model-lightgbm,app_train[col].astype('str'),app_train[col].apply('str'),pd.Series.astype,pd.Series.apply
2,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/soutik/xgboost-python-forked,test_s.astype(float),test_s.apply(float),pd.Series.astype,pd.Series.apply
2,home-credit-default-risk,https://www.kaggle.com/legorreta/first-model-lightgbm,app_test[col].astype('str'),app_test[col].apply('str'),pd.Series.astype,pd.Series.apply
2,house-prices-advanced-regression-techniques,https://www.kaggle.com/alipala/ml-regressors-20-features,y_train.astype(int),y_train.apply(int),pd.Series.astype,pd.Series.apply
2,zillow-prize-1,https://www.kaggle.com/valadi/xgb-w-o-outliers-lgb-with-outliers-combo-tune6,train_df['logerror'].values.astype(np.float32),train_df['logerror'].values.apply(np.float32),pd.Series.astype,pd.Series.apply
2,prudential-life-insurance-assessment,https://www.kaggle.com/realtwo/xgb-test,data[0].astype(int),data[0].apply(int),pd.Series.astype,pd.Series.apply
2,zillow-prize-1,https://www.kaggle.com/valadi/xgb-w-o-outliers-lgb-with-outliers-combo-tune6,properties['parcelid'].astype(np.int32),properties['parcelid'].apply(np.int32),pd.Series.astype,pd.Series.apply
2,predicting-red-hat-business-value,https://www.kaggle.com/happycube/python-ver-of-group-1-and-date-trick,ppl[p_logi].astype('int'),ppl[p_logi].apply('int'),pd.Series.astype,pd.Series.apply
2,nyc-taxi-trip-duration,https://www.kaggle.com/ocaudevi/passanger-flow-mapping-properties,"np.arange(0, 60, time_step).astype(int)","np.arange(0, 60, time_step).apply(int)",pd.Series.astype,pd.Series.apply
2,sberbank-russian-housing-market,https://www.kaggle.com/azuralrainbow/summer,"np.unique(column_df, return_counts=True)[1].astype(float)","np.unique(column_df, return_counts=True)[1].apply(float)",pd.Series.astype,pd.Series.apply
2,santander-customer-satisfaction,https://www.kaggle.com/scirpus/3-little-models,(test[features] == 0).astype(int),(test[features] == 0).apply(int),pd.Series.astype,pd.Series.apply
2,caterpillar-tube-pricing,https://www.kaggle.com/marbel/keras-dummy-vars,test.id.values.astype(int),test.id.values.apply(int),pd.Series.astype,pd.Series.apply
2,prudential-life-insurance-assessment,https://www.kaggle.com/realtwo/xgb-test,all_data['Response'].astype(int),all_data['Response'].apply(int),pd.Series.astype,pd.Series.apply
2,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/devendramittal/randomforest,X.astype(np.float32),X.apply(np.float32),pd.Series.astype,pd.Series.apply
2,titanic,https://www.kaggle.com/jprukundo/neural-network-on-titanic-in-py,training_set['Sex'].astype('category'),training_set['Sex'].apply('category'),pd.Series.astype,pd.Series.apply
2,favorita-grocery-sales-forecasting,https://www.kaggle.com/aharless/preparing-data-for-lgbm-or-something-else,promo_2017[t2017 + timedelta(days=i)].values.astype(np.uint8),promo_2017[t2017 + timedelta(days=i)].values.apply(np.uint8),pd.Series.astype,pd.Series.apply
2,pubg-finish-placement-prediction,https://www.kaggle.com/ceshine/pytorch-baseline-model,df[col].astype(np.float32),df[col].apply(np.float32),pd.Series.astype,pd.Series.apply
2,nyc-taxi-trip-duration,https://www.kaggle.com/amazone/lightgbm-regressor,df.pickup_datetime.astype('datetime64[ns]'),df.pickup_datetime.apply('datetime64[ns]'),pd.Series.astype,pd.Series.apply
2,caterpillar-tube-pricing,https://www.kaggle.com/marbel/keras-dummy-vars,np.array(train_values).astype(float),np.array(train_values).apply(float),pd.Series.astype,pd.Series.apply
2,elo-merchant-category-recommendation,https://www.kaggle.com/cttsai/lgbm-starter-w-aggregations,pd.DatetimeIndex(df['purchase_date']).astype(np.int64),pd.DatetimeIndex(df['purchase_date']).apply(np.int64),pd.Series.astype,pd.Series.apply
2,jigsaw-toxic-comment-classification-challenge,https://www.kaggle.com/tokestermw/deep-bow-baseline,"(train_df.iloc[:, 2:].sum(axis=1) == 0).astype(int)","(train_df.iloc[:, 2:].sum(axis=1) == 0).apply(int)",pd.Series.astype,pd.Series.apply
2,whats-cooking-kernels-only,https://www.kaggle.com/ymatioun/lightgbm-v1,dummies.astype(np.int8),dummies.apply(np.int8),pd.Series.astype,pd.Series.apply
2,costa-rican-household-poverty-prediction,https://www.kaggle.com/ymatioun/hoh-only-scaled,merged_df['dependency'].astype(np.float32),merged_df['dependency'].apply(np.float32),pd.Series.astype,pd.Series.apply
2,catch-me-if-you-can-intruder-detection-through-webpage-session-tracking2,https://www.kaggle.com/srogovtsev/a-simple-demo-of-sklearn-pipelines,"X[:, self.left:self.right].astype(int)","X[:, self.left:self.right].apply(int)",pd.Series.astype,pd.Series.apply
2,bnp-paribas-cardif-claims-management,https://www.kaggle.com/sakvaua/simple-na-visualization-python-script,pd.isnull(train).astype(int),pd.isnull(train).apply(int),pd.Series.astype,pd.Series.apply
2,predicting-red-hat-business-value,https://www.kaggle.com/xingobar/classify-group,ppl[ppl_logi].astype(int),ppl[ppl_logi].apply(int),pd.Series.astype,pd.Series.apply
2,traveling-santa-2018-prime-paths,https://www.kaggle.com/sgorlick/simple-trial-using-only-numpy,onep[dista == min(dista)][0][0].astype(int),onep[dista == min(dista)][0][0].apply(int),pd.Series.astype,pd.Series.apply
2,tap30challenge,https://www.kaggle.com/alishir/iterative-random-forest,np.around(result).astype(int),np.around(result).apply(int),pd.Series.astype,pd.Series.apply
2,ghouls-goblins-and-ghosts-boo,https://www.kaggle.com/wangquan/test1,"(np.random.random_sample((num_input, num_hidden)) - 0.5).astype(np.float32)","(np.random.random_sample((num_input, num_hidden)) - 0.5).apply(np.float32)",pd.Series.astype,pd.Series.apply
2,kobe-bryant-shot-selection,https://www.kaggle.com/davidreber/data-analysis-for-beginners,"np.logspace(0, 2, num=3).astype(int)","np.logspace(0, 2, num=3).apply(int)",pd.Series.astype,pd.Series.apply
2,shelter-animal-outcomes,https://www.kaggle.com/nishadi/random-forest-breed,np.array(test['ID']).astype(int),np.array(test['ID']).apply(int),pd.Series.astype,pd.Series.apply
2,titanic,https://www.kaggle.com/jprukundo/neural-network-on-titanic-in-py,training_set['Embarked'].astype('category'),training_set['Embarked'].apply('category'),pd.Series.astype,pd.Series.apply
2,favorita-grocery-sales-forecasting,https://www.kaggle.com/shixw125/1st-place-lgb-model-public-0-506-private-0-511,promo_df[t2017 + timedelta(days=i)].values.astype(np.uint8),promo_df[t2017 + timedelta(days=i)].values.apply(np.uint8),pd.Series.astype,pd.Series.apply
2,pubg-finish-placement-prediction,https://www.kaggle.com/ceshine/pytorch-baseline-model,df[col].astype(np.float16),df[col].apply(np.float16),pd.Series.astype,pd.Series.apply
2,costa-rican-household-poverty-prediction,https://www.kaggle.com/ymatioun/hoh-only-scaled,merged_df['edjefe'].astype(np.int8),merged_df['edjefe'].apply(np.int8),pd.Series.astype,pd.Series.apply
2,titanic,https://www.kaggle.com/jprukundo/neural-network-on-titanic-in-py,prediction_set['Sex'].astype('category'),prediction_set['Sex'].apply('category'),pd.Series.astype,pd.Series.apply
2,facebook-v-predicting-check-ins,https://www.kaggle.com/drarfc/script-competition-facebook-v-2-1,"cell_test[:, (-1)].flatten().astype(np.int32)","cell_test[:, (-1)].flatten().apply(np.int32)",pd.Series.astype,pd.Series.apply
2,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,(df[col] > d_median[col]).astype(np.uint8),(df[col] > d_median[col]).apply(np.uint8),pd.Series.astype,pd.Series.apply
2,caterpillar-tube-pricing,https://www.kaggle.com/andrewmatteson/beating-the-benchmark-v1-0,test.astype(float),test.apply(float),pd.Series.astype,pd.Series.apply
2,homesite-quote-conversion,https://www.kaggle.com/director/xgb-0-9674,test.astype(np.float32),test.apply(np.float32),pd.Series.astype,pd.Series.apply
2,allstate-claims-severity,https://www.kaggle.com/tilii7/t-sne-visualization-of-train-data,train[cat_features[c]].astype('category'),train[cat_features[c]].apply('category'),pd.Series.astype,pd.Series.apply
2,instacart-market-basket-analysis,https://www.kaggle.com/waxbabi/light-gbm-benchmark-0-3692,train.reordered.astype(np.int8),train.reordered.apply(np.int8),pd.Series.astype,pd.Series.apply
2,predicting-red-hat-business-value,https://www.kaggle.com/zfturbo/xredboost,people['char_' + str(i)].astype(np.int32),people['char_' + str(i)].apply(np.int32),pd.Series.astype,pd.Series.apply
2,home-credit-default-risk,https://www.kaggle.com/prashantkikani/home-rf-et-xgb-cb-stack-oof-lb-0-778,df[col].astype('str'),df[col].apply('str'),pd.Series.astype,pd.Series.apply
2,favorita-grocery-sales-forecasting,https://www.kaggle.com/aharless/lgbm-one-step-ahead-with-proper-validation,(promo_2017[t2017 + timedelta(days=i)] - 1).values.astype(np.uint8),(promo_2017[t2017 + timedelta(days=i)] - 1).values.apply(np.uint8),pd.Series.astype,pd.Series.apply
2,caterpillar-tube-pricing,https://www.kaggle.com/andrewmatteson/beating-the-benchmark-v1-0,train.astype(float),train.apply(float),pd.Series.astype,pd.Series.apply
2,homesite-quote-conversion,https://www.kaggle.com/director/xgb-0-9674,train.astype(np.float32),train.apply(np.float32),pd.Series.astype,pd.Series.apply
2,allstate-claims-severity,https://www.kaggle.com/tilii7/recursive-feature-elimination,train_test[cat_features[c]].astype('category'),train_test[cat_features[c]].apply('category'),pd.Series.astype,pd.Series.apply
2,instacart-market-basket-analysis,https://www.kaggle.com/waxbabi/light-gbm-benchmark-0-3692,products.product_id.astype(np.int32),products.product_id.apply(np.int32),pd.Series.astype,pd.Series.apply
2,donorschoose-application-screening,https://www.kaggle.com/opanichev/lightgbm-and-tf-idf-starter,pd.to_datetime(df['project_submitted_datetime']).values.astype(np.int64),pd.to_datetime(df['project_submitted_datetime']).values.apply(np.int64),pd.Series.astype,pd.Series.apply
2,ghouls-goblins-and-ghosts-boo,https://www.kaggle.com/wangquan/test1,"np.zeros((1, num_output)).astype(np.float32)","np.zeros((1, num_output)).apply(np.float32)",pd.Series.astype,pd.Series.apply
2,pubg-finish-placement-prediction,https://www.kaggle.com/tanreinama/lambdarank,d[t].iloc[i],d[t].iat[i],pd.Series.iloc,pd.Series.iat
2,porto-seguro-safe-driver-prediction,https://www.kaggle.com/ogrellier/xgb-classifier-upsampling-lb-0-283,target.iloc[trn_idx],target.iat[trn_idx],pd.Series.iloc,pd.Series.iat
2,talkingdata-mobile-user-demographics,https://www.kaggle.com/dollardollar/xgb-with-class-probabilities,features.iloc[:classes.shape[0]],features.iat[:classes.shape[0]],pd.Series.iloc,pd.Series.iat
2,costa-rican-household-poverty-prediction,https://www.kaggle.com/ymatioun/hoh-only-scaled,target.iloc[train_idx],target.iat[train_idx],pd.Series.iloc,pd.Series.iat
2,microsoft-malware-prediction,https://www.kaggle.com/cttsai/ensemble-of-lightgbm-on-different-distributions,y.iloc[trn_idx],y.iat[trn_idx],pd.Series.iloc,pd.Series.iat
2,porto-seguro-safe-driver-prediction,https://www.kaggle.com/ogrellier/xgb-classifier-upsampling-lb-0-283,target.iloc[val_idx],target.iat[val_idx],pd.Series.iloc,pd.Series.iat
2,pubg-finish-placement-prediction,https://www.kaggle.com/ymatioun/pubg-multiple-pass-lightgbm-ranks,target.iloc[valid_idx],target.iat[valid_idx],pd.Series.iloc,pd.Series.iat
2,porto-seguro-safe-driver-prediction,https://www.kaggle.com/ogrellier/xgb-classifier-upsampling-lb-0-283,trn_tgt.iloc[idx],trn_tgt.iat[idx],pd.Series.iloc,pd.Series.iat
2,home-credit-default-risk,https://www.kaggle.com/cttsai/good-fun-with-ligthgbm-trial,y.iloc[val_idx],y.iat[val_idx],pd.Series.iloc,pd.Series.iat
2,home-credit-default-risk,https://www.kaggle.com/zhixing629/updated-0-792-lb-4extfeatures,train_df['TARGET'].iloc[train_idx],train_df['TARGET'].iat[train_idx],pd.Series.iloc,pd.Series.iat
2,home-credit-default-risk,https://www.kaggle.com/zhixing629/updated-0-792-lb-4extfeatures,train_df['TARGET'].iloc[valid_idx],train_df['TARGET'].iat[valid_idx],pd.Series.iloc,pd.Series.iat
2,facebook-v-predicting-check-ins,https://www.kaggle.com/chrisgundling/anyone-else-try-using-svm,data['x'].iloc[i:j],data['x'].iat[i:j],pd.Series.iloc,pd.Series.iat
2,porto-seguro-safe-driver-prediction,https://www.kaggle.com/gvyshnya/gbm-cv-submission-lb-28,y.iloc[train_index],y.iat[train_index],pd.Series.iloc,pd.Series.iat
2,porto-seguro-safe-driver-prediction,https://www.kaggle.com/gvyshnya/gbm-cv-submission-lb-28,y.iloc[test_index],y.iat[test_index],pd.Series.iloc,pd.Series.iat
2,porto-seguro-safe-driver-prediction,https://www.kaggle.com/gvyshnya/gbm-cv-submission-lb-28,y_valid_pred.iloc[test_index],y_valid_pred.iat[test_index],pd.Series.iloc,pd.Series.iat
2,home-credit-default-risk,https://www.kaggle.com/mlisovyi/modular-good-fun-with-ligthgbm,y_.iloc[trn_idx],y_.iat[trn_idx],pd.Series.iloc,pd.Series.iat
2,home-credit-default-risk,https://www.kaggle.com/mlisovyi/modular-good-fun-with-ligthgbm,y_.iloc[val_idx],y_.iat[val_idx],pd.Series.iloc,pd.Series.iat
2,facebook-v-predicting-check-ins,https://www.kaggle.com/chrisgundling/anyone-else-try-using-svm,data['u_x'].iloc[i:j],data['u_x'].iat[i:j],pd.Series.iloc,pd.Series.iat
2,facebook-v-predicting-check-ins,https://www.kaggle.com/chrisgundling/anyone-else-try-using-svm,data['y'].iloc[i:j],data['y'].iat[i:j],pd.Series.iloc,pd.Series.iat
2,facebook-v-predicting-check-ins,https://www.kaggle.com/chrisgundling/anyone-else-try-using-svm,data['u_y'].iloc[i:j],data['u_y'].iat[i:j],pd.Series.iloc,pd.Series.iat
2,facebook-v-predicting-check-ins,https://www.kaggle.com/chrisgundling/anyone-else-try-using-svm,data['sigma_x'].iloc[i:j],data['sigma_x'].iat[i:j],pd.Series.iloc,pd.Series.iat
2,facebook-v-predicting-check-ins,https://www.kaggle.com/chrisgundling/anyone-else-try-using-svm,data['sigma_y'].iloc[i:j],data['sigma_y'].iat[i:j],pd.Series.iloc,pd.Series.iat
2,web-traffic-time-series-forecasting,https://www.kaggle.com/safavieh/median-estimation-by-fibonacci-et-al-lb-44-9,row.iloc[start[0] + 1:],row.iat[start[0] + 1:],pd.Series.iloc,pd.Series.iat
2,web-traffic-time-series-forecasting,https://www.kaggle.com/safavieh/median-estimation-by-fibonacci-et-al-lb-44-9,row.iloc[-W:],row.iat[-W:],pd.Series.iloc,pd.Series.iat
2,porto-seguro-safe-driver-prediction,https://www.kaggle.com/ievgenvp/lgbm-custom-randomizedsearchcv-lb-283,Y.iloc[train_index],Y.iat[train_index],pd.Series.iloc,pd.Series.iat
2,porto-seguro-safe-driver-prediction,https://www.kaggle.com/ievgenvp/lgbm-custom-randomizedsearchcv-lb-283,Y.iloc[test_index],Y.iat[test_index],pd.Series.iloc,pd.Series.iat
2,titanic,https://www.kaggle.com/jsanch/learning-ml-with-kaggle,train['Survived'].iloc[xx],train['Survived'].iat[xx],pd.Series.iloc,pd.Series.iat
2,titanic,https://www.kaggle.com/durgapd/titanic-my-first,train['Survived'].iloc[train1],train['Survived'].iat[train1],pd.Series.iloc,pd.Series.iat
2,home-credit-default-risk,https://www.kaggle.com/legorreta/first-model-lightgbm,Target.iloc[trn_idx],Target.iat[trn_idx],pd.Series.iloc,pd.Series.iat
2,home-credit-default-risk,https://www.kaggle.com/legorreta/first-model-lightgbm,Target.iloc[val_idx],Target.iat[val_idx],pd.Series.iloc,pd.Series.iat
2,porto-seguro-safe-driver-prediction,https://www.kaggle.com/johannesss/stacking-lightgbm-with-logisticregression,y_train.iloc[fit_index],y_train.iat[fit_index],pd.Series.iloc,pd.Series.iat
2,porto-seguro-safe-driver-prediction,https://www.kaggle.com/johannesss/stacking-lightgbm-with-logisticregression,y_train.iloc[val_index],y_train.iat[val_index],pd.Series.iloc,pd.Series.iat
2,santander-value-prediction-challenge,https://www.kaggle.com/ogrellier/santander-46-features,y['target'].iloc[val_idx],y['target'].iat[val_idx],pd.Series.iloc,pd.Series.iat
2,home-credit-default-risk,https://www.kaggle.com/nilzone/lgbm-with-mean-encodings,y_train.iloc[fit_idx],y_train.iat[fit_idx],pd.Series.iloc,pd.Series.iat
2,home-credit-default-risk,https://www.kaggle.com/nilzone/lgbm-with-mean-encodings,y_train.iloc[val_idx],y_train.iat[val_idx],pd.Series.iloc,pd.Series.iat
2,titanic,https://www.kaggle.com/lindenlu/linden-titanic-script,"dataset['Sex'].map({'male': 0, 'female': 1})","pd.DataFrame(dataset['Sex']).replace({'male': 0, 'female': 1})",pd.Series.map,pd.DataFrame.replace
2,titanic,https://www.kaggle.com/lindenlu/linden-titanic-script,"dataset['Embarked'].map({'S': 0, 'Q': 1, 'C': 2})","pd.DataFrame(dataset['Embarked']).replace({'S': 0, 'Q': 1, 'C': 2})",pd.Series.map,pd.DataFrame.replace
2,titanic,https://www.kaggle.com/pascalsimpkins/titanic-survival-rates-heavily-annotated,"dataset['Embarked'].map({'S': 0, 'C': 1, 'Q': 2})","pd.DataFrame(dataset['Embarked']).replace({'S': 0, 'C': 1, 'Q': 2})",pd.Series.map,pd.DataFrame.replace
2,titanic,https://www.kaggle.com/sachin13/titanic,"data['Sex'].map({'female': 0, 'male': 1})","pd.DataFrame(data['Sex']).replace({'female': 0, 'male': 1})",pd.Series.map,pd.DataFrame.replace
2,titanic,https://www.kaggle.com/tranquangan/my-first-experiment-with-kaggle,family['FamilySize'].map(lambda s: 1 if 2 <= s <= 4 else 0),"np.where( 2 <= family['FamilySize'] <= 4 , 1 ,0)",pd.Series.map,np.where
2,titanic,https://www.kaggle.com/fzhurd/titanic-suvive20160924v4,combined['FamilySize'].map(lambda s: 1 if 2 <= s <= 4 else 0),"np.where( 2 <= combined['FamilySize'] <= 4 , 1 ,0)",pd.Series.map,np.where
2,titanic,https://www.kaggle.com/anirban00727/titanic-survival-chances-prediction,combined.FamilySize.map(lambda s: 1 if 2 <= s <= 4 else 0),"np.where( 2 <= combined.FamilySize <= 4 , 1 ,0)",pd.Series.map,np.where
2,titanic,https://www.kaggle.com/melisbiyikli/titanic-data-sets,all_datas['FamilySize'].map(lambda s: 1 if 2 <= s <= 4 else 0),"np.where( 2 <= all_datas['FamilySize'] <= 4 , 1 ,0)",pd.Series.map,np.where
2,talkingdata-mobile-user-demographics,https://www.kaggle.com/xiaoml/low-ram-bag-of-apps-python,app_ev['app_id'].map(app_lab),app_ev['app_id'].replace(app_lab),pd.Series.map,pd.Series.replace
2,talkingdata-mobile-user-demographics,https://www.kaggle.com/xiaoml/bag-of-app-id-python-2-27392,events['event_id'].map(app_ev),events['event_id'].replace(app_ev),pd.Series.map,pd.Series.replace
2,talkingdata-adtracking-fraud-detection,https://www.kaggle.com/ogrellier/basic-predictions-using-target-encoding-on-app,df['app'].map(app_averages['average']),df['app'].replace(app_averages['average']),pd.Series.map,pd.Series.replace
2,titanic,https://www.kaggle.com/lzzzfelipe/titanic-modelling,"combined2.loc[:, ('Title')].map(title_mapping)","combined2.loc[:, ('Title')].replace(title_replaceping)",pd.Series.map,pd.Series.replace
2,titanic,https://www.kaggle.com/danylchuk/bernoulli-naive-bayes,"sns.FacetGrid(train, hue='Pclass', size=6).map(sns.kdeplot, 'Fare')","sns.FacetGrid(train, hue='Pclass', size=6).replace(sns.kdeplot, 'Fare')",pd.Series.map,pd.Series.replace
2,santander-customer-satisfaction,https://www.kaggle.com/gilbar/visualizing-data,X['saldo_medio_var29_hace3'].map(logmap),X['saldo_medio_var29_hace3'].replace(logreplace),pd.Series.map,pd.Series.replace
2,titanic,https://www.kaggle.com/sjtreadway/titanic-prediction,dataset['Title'].map(title_mapping),dataset['Title'].replace(title_replaceping),pd.Series.map,pd.Series.replace
2,titanic,https://www.kaggle.com/upendr/titanic-machine-learning-from-disaster,"g.map(plt.hist, 'Age', bins=20)","g.replace(plt.hist, 'Age', bins=20)",pd.Series.map,pd.Series.replace
2,titanic,https://www.kaggle.com/blahfacepants/titanic-try,"map(float, data[1])","replace(float, data[1])",pd.Series.map,pd.Series.replace
2,sf-crime,https://www.kaggle.com/lesibius/time-only-sv,df_train.Dates.map(get_hour_norm),df_train.Dates.replace(get_hour_norm),pd.Series.map,pd.Series.replace
2,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/xgb-lets-try,month_year.map(month_year_cnt_map),month_year.replace(month_year_cnt_replace),pd.Series.map,pd.Series.replace
2,titanic,https://www.kaggle.com/esterengifo/miscript,"facet.map(sns.kdeplot, var, shade=True)","facet.replace(sns.kdeplot, var, shade=True)",pd.Series.map,pd.Series.replace
2,new-york-city-taxi-fare-prediction,https://www.kaggle.com/jsylas/python-version-of-top-ten-rank-r-22-m-2-88,"map(np.radians, [pickup_lat, pickup_lon, dropoff_lat, dropoff_lon])","replace(np.radians, [pickup_lat, pickup_lon, dropoff_lat, dropoff_lon])",pd.Series.map,pd.Series.replace
2,titanic,https://www.kaggle.com/mengkehu/titanic,"facet.map(sns.kdeplot, 'Age', shade=True)","facet.replace(sns.kdeplot, 'Age', shade=True)",pd.Series.map,pd.Series.replace
2,titanic,https://www.kaggle.com/akakkilaya/python-decisiontreeclassifier,train['Sex'].map(gender_map),train['Sex'].replace(gender_replace),pd.Series.map,pd.Series.replace
2,caterpillar-tube-pricing,https://www.kaggle.com/titericz/test-beating-the-benchmark-fork,"train['material_id'].replace(np.nan, ' ', regex=True, inplace=True)","train['material_id'].map(np.nan, ' ', regex=True, inplace=True)",pd.Series.replace,pd.Series.map
2,titanic,https://www.kaggle.com/yashduvvuru/pytanic,"train.Cader.str.replace('Mme', 'Mlle')","train.Cader.str.map('Mme', 'Mlle')",pd.Series.replace,pd.Series.map
2,jigsaw-toxic-comment-classification-challenge,https://www.kaggle.com/emotionevil/general-oof-class-for-stacking,"clean.replace(b' ', b' ')","clean.map(b' ', b' ')",pd.Series.replace,pd.Series.map
2,porto-seguro-safe-driver-prediction,https://www.kaggle.com/johannesss/stacking-lightgbm-with-logisticregression,"X_train.replace(-1, np.nan)","X_train.map(-1, np.nan)",pd.Series.replace,pd.Series.map
2,santander-value-prediction-challenge,https://www.kaggle.com/ogrellier/santander-46-features,"data.replace(0, np.nan, inplace=True)","data.map(0, np.nan, inplace=True)",pd.Series.replace,pd.Series.map
2,pubg-finish-placement-prediction,https://www.kaggle.com/tpineapples/chicken-dinners,line.replace(*pair),line.map(*pair),pd.Series.replace,pd.Series.map
2,home-depot-product-search-relevance,https://www.kaggle.com/buinyi/disclosing-external-data,"s.replace('craftsm,an', 'craftsman')","s.map('craftsm,an', 'craftsman')",pd.Series.replace,pd.Series.map
2,shelter-animal-outcomes,https://www.kaggle.com/vibharohilla/pie-chart-outcomes,"x.replace('years', '')","x.map('years', '')",pd.Series.replace,pd.Series.map
2,santander-customer-satisfaction,https://www.kaggle.com/cast42/calibratedcv-xgboost,"training.replace(-999999, 2)","training.map(-999999, 2)",pd.Series.replace,pd.Series.map
2,santander-value-prediction-challenge,https://www.kaggle.com/sheboke93/santander-46-features-add-andrew-s-feature,train.replace({(0): np.nan}),train.map({(0): np.nan}),pd.Series.replace,pd.Series.map
2,titanic,https://www.kaggle.com/ldj6692240/titanicxgboostscript,"ticket.replace('.', '')","ticket.map('.', '')",pd.Series.replace,pd.Series.map
2,home-depot-product-search-relevance,https://www.kaggle.com/chirz8/cjk1404-1,"df_all['search_term'].replace(keys, values)","df_all['search_term'].map(keys, values)",pd.Series.replace,pd.Series.map
2,house-prices-advanced-regression-techniques,https://www.kaggle.com/cttsai/xgb-trial-oct-08,"df[c].replace(to_replace=minor, value='minor', inplace=True)","df[c].map(to_map=minor, value='minor', inplace=True)",pd.Series.replace,pd.Series.map
2,rossmann-store-sales,https://www.kaggle.com/lkirch/testingrossmanndata-ipynb,"train_df.Assortment.replace(mappings, inplace=True)","train_df.Assortment.map(mappings, inplace=True)",pd.Series.replace,pd.Series.map
2,pubg-finish-placement-prediction,https://www.kaggle.com/ymatioun/pubg-multiple-pass-lightgbm-ranks,"merged_df['boostsRatio'].replace(np.inf, 0, inplace=True)","merged_df['boostsRatio'].map(np.inf, 0, inplace=True)",pd.Series.replace,pd.Series.map
2,sberbank-russian-housing-market,https://www.kaggle.com/v81msk/test1,"p_df[x].replace('yes', 1, inplace=True)","p_df[x].map('yes', 1, inplace=True)",pd.Series.replace,pd.Series.map
2,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df['ps_reg_03_A'].replace(19, -1, inplace=True)","df['ps_reg_03_A'].map(19, -1, inplace=True)",pd.Series.replace,pd.Series.map
2,ga-customer-revenue-prediction,https://www.kaggle.com/qnkhuat/make-data-ready,"df.replace(cols_to_replace, 'NA')","df.map(cols_to_map, 'NA')",pd.Series.replace,pd.Series.map
2,shelter-animal-outcomes,https://www.kaggle.com/nishadi/breeds,"i.replace(' Shorthair', '')","i.map(' Shorthair', '')",pd.Series.replace,pd.Series.map
2,titanic,https://www.kaggle.com/piplimoon/leaderboard-0-8134,"FullName.replace(' ', '')","FullName.map(' ', '')",pd.Series.replace,pd.Series.map
2,home-depot-product-search-relevance,https://www.kaggle.com/hellozeyu/test-script-1,"s.replace(' x ', ' xby ')","s.map(' x ', ' xby ')",pd.Series.replace,pd.Series.map
2,home-credit-default-risk,https://www.kaggle.com/jsaguiar/lightgbm-with-simple-features,"df['DAYS_EMPLOYED'].replace(365243, np.nan, inplace=True)","df['DAYS_EMPLOYED'].map(365243, np.nan, inplace=True)",pd.Series.replace,pd.Series.map
2,house-prices-advanced-regression-techniques,https://www.kaggle.com/naumanahm/nauman-attempt3-final,"complete_data.replace(-inf, 0)","complete_data.map(-inf, 0)",pd.Series.replace,pd.Series.map
2,porto-seguro-safe-driver-prediction,https://www.kaggle.com/zusmani/lgb-esemble-xgb-be-in-top-100-with-lb-0-285,"train.replace(-1, np.nan)","train.map(-1, np.nan)",pd.Series.replace,pd.Series.map
2,forest-cover-type-kernels-only,https://www.kaggle.com/sunfulv1/nmsz1816010,"tmp_cat.str.replace(s_, '')","tmp_cat.str.map(s_, '')",pd.Series.replace,pd.Series.map
2,airbnb-recruiting-new-user-bookings,https://www.kaggle.com/foutik/script-cleaning-data,"df_all.gender.replace('-unknown-', np.nan, inplace=True)","df_all.gender.map('-unknown-', np.nan, inplace=True)",pd.Series.replace,pd.Series.map
2,shelter-animal-outcomes,https://www.kaggle.com/xiziling/deal-with,"a[1].replace('years', '365')","a[1].map('years', '365')",pd.Series.replace,pd.Series.map
2,whats-cooking,https://www.kaggle.com/klooonal/testcook,"i.replace('&', '')","i.map('&', '')",pd.Series.replace,pd.Series.map
2,santas-stolen-sleigh,https://www.kaggle.com/davidshinn/where-are-all-the-gifts,"gifts.Weight.replace(1, np.nan)","gifts.Weight.map(1, np.nan)",pd.Series.replace,pd.Series.map
2,predict-west-nile-virus,https://www.kaggle.com/hiendang/compute-auc-on-valid-set,"weather.replace('M', -1)","weather.map('M', -1)",pd.Series.replace,pd.Series.map
2,springleaf-marketing-response,https://www.kaggle.com/wawanco/data-ownership-categorical,"train.replace(to_replace=to_replace, value=np.nan)","train.map(to_map=to_map, value=np.nan)",pd.Series.replace,pd.Series.map
2,costa-rican-household-poverty-prediction,https://www.kaggle.com/anqitu/hackoss-base-model-demonstration,"train['edjefa'].replace('yes', '1')","train['edjefa'].map('yes', '1')",pd.Series.replace,pd.Series.map
2,home-depot-product-search-relevance,https://www.kaggle.com/khaledfayed/rf-mean-squared-error,"str1.replace(' in.', 'in.')","str1.map(' in.', 'in.')",pd.Series.replace,pd.Series.map
2,titanic,https://www.kaggle.com/aiswaryaramachandran/titanic-logistic-regression,"split_name[1].split('.')[0].replace(' ', '')","split_name[1].split('.')[0].map(' ', '')",pd.Series.replace,pd.Series.map
2,home-depot-product-search-relevance,https://www.kaggle.com/anokas/create-pandas-dataframe-for-train-valid,"s.replace('inches', 'in.')","s.map('inches', 'in.')",pd.Series.replace,pd.Series.map
2,home-depot-product-search-relevance,https://www.kaggle.com/justfor/homedepot-playground,"s.replace('inch', 'in.')","s.map('inch', 'in.')",pd.Series.replace,pd.Series.map
2,titanic,https://www.kaggle.com/iviglious/teamysi-titanic-rf-a,"main_all_df['Name'].replace('(\,..*)', '', regex=True)","main_all_df['Name'].map('(\,..*)', '', regex=True)",pd.Series.replace,pd.Series.map
2,house-prices-advanced-regression-techniques,https://www.kaggle.com/antoinekrajnc/house-prices-multiple-linear-regression,"dataset.iloc[:, (i)].replace(np.nan, 'None', regex=True)","dataset.iloc[:, (i)].map(np.nan, 'None', regex=True)",pd.Series.replace,pd.Series.map
2,allstate-claims-severity,https://www.kaggle.com/sonjiawax/mlpregressor1,"c.replace('cat', 'bool')","c.map('cat', 'bool')",pd.Series.replace,pd.Series.map
2,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/sunnymarius/library,"train[tf].replace('N', 0)","train[tf].map('N', 0)",pd.Series.replace,pd.Series.map
2,titanic,https://www.kaggle.com/yeewii/firstscratchinpy,"df_data['Title'].replace('Mlle', 'Miss')","df_data['Title'].map('Mlle', 'Miss')",pd.Series.replace,pd.Series.map
2,titanic,https://www.kaggle.com/rafaelvleite/titanic-machine-learning-random-forest,"names.replace(item, 2, inplace=True)","names.map(item, 2, inplace=True)",pd.Series.replace,pd.Series.map
2,titanic,https://www.kaggle.com/vicbap/titanic,"df['Title'].replace(['Mme', 'Ms'], 'Mrs')","df['Title'].map(['Mme', 'Ms'], 'Mrs')",pd.Series.replace,pd.Series.map
2,titanic,https://www.kaggle.com/shyamspr/backward-elimination,"train['Embarked'].replace(np.nan, 'S', regex=True)","train['Embarked'].map(np.nan, 'S', regex=True)",pd.Series.replace,pd.Series.map
2,titanic,https://www.kaggle.com/twlang/catboost-vs-xgboost,train_test.Cabin.str[0],train_test.Cabin.map(lambda x: x[0]),pd.Series.str,pd.Series.map
2,titanic,https://www.kaggle.com/sjtreadway/titanic-prediction,dataset['Cabin'].str[:1],dataset['Cabin'].map(lambda x: x[:1]),pd.Series.str,pd.Series.map
2,titanic,https://www.kaggle.com/fromage0/testtest,data.Cabin.str[0],data.Cabin.map(lambda x: x[0]),pd.Series.str,pd.Series.map
3,caterpillar-tube-pricing,https://www.kaggle.com/marbel/cat-random-forest,np.array(train_values),np.hstack((train_values)),np.array,np.hstack
3,digit-recognizer,https://www.kaggle.com/aawadall/deep-neural-net,np.array(train_raw['label']),np.hstack((train_raw['label'])),np.array,np.hstack
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/wirehack/fdsfsdfdsfsdfsdf,np.array(y),np.hstack((y)),np.array,np.hstack
3,new-york-city-taxi-fare-prediction,https://www.kaggle.com/rom1m201363/road-grid-and-backpropagated-dijkstra-with-pytorch,np.array(dists),np.hstack((dists)),np.array,np.hstack
3,PLAsTiCC-2018,https://www.kaggle.com/ogrellier/multi-core-aggregations,np.array([class_weight[k] for k in sorted(class_weight.keys())]),np.hstack(([class_weight[k] for k in sorted(class_weight.keys())])),np.array,np.hstack
3,recruit-restaurant-visitor-forecasting,https://www.kaggle.com/tflana/simple-keras-feed-fwd-nn,np.array(full_df[coln]),np.hstack((full_df[coln])),np.array,np.hstack
3,recruit-restaurant-visitor-forecasting,https://www.kaggle.com/plantsgo/solution-public-0-471-private-0-505,np.array(a),np.hstack((a)),np.array,np.hstack
3,santander-product-recommendation,https://www.kaggle.com/sudalairajkumar/rf-multilabel-framework-lb-0-022475,np.array(test[col]),np.hstack((test[col])),np.array,np.hstack
3,digit-recognizer,https://www.kaggle.com/pranaysahith/digit-recognizer,"np.c_[xx.ravel(), yy.ravel()]","np.hstack([xx.ravel(), yy.ravel()])",np.c_,np.hstack
3,titanic,https://www.kaggle.com/shabin/titanic-get-started,"np.column_stack((X_initial, test_df.iloc[:, (index)]))","np.transpose((X_initial, test_df.iloc[:, (index)]))",np.column_stack,np.transpose
3,titanic,https://www.kaggle.com/shabin/titanic-get-started,"np.column_stack((X_initial, train_df.iloc[:, (index)]))","np.transpose((X_initial, train_df.iloc[:, (index)]))",np.column_stack,np.transpose
3,titanic,https://www.kaggle.com/hawkinsliam/simple-random-forest,"np.column_stack((ids.T, predictions.T))","np.vstack((ids.T.T, predictions.T.T)).T",np.column_stack,np.vstack
3,titanic,https://www.kaggle.com/utsavpatel/titanic-test,"np.count_nonzero(titanic.loc[titanic['Pclass'] == 1, 'Survived'].values)","np.sum(titanic.loc[titanic['Pclass'] == 1, 'Survived'].values!=0)",np.count_nonzero,np.sum
3,titanic,https://www.kaggle.com/utsavpatel/titanic-test,"np.count_nonzero(titanic.loc[titanic['Pclass'] == 1, 'Pclass'].values)","np.sum(titanic.loc[titanic['Pclass'] == 1, 'Pclass'].values!=0)",np.count_nonzero,np.sum
3,coupon-purchase-prediction,https://www.kaggle.com/mkurnikov/modified-cos-similarity-python-edition,"np.dot(np.dot(user_profiles, W), test_only_features.T)","np.einsum('ij,jm->im',np.dot(user_profiles, W), test_only_features.T)",np.dot,np.einsum
3,digit-recognizer,https://www.kaggle.com/newhardwarefound/artificial-neural-network,"np.dot(delta, activations[-l - 1].transpose())","np.einsum('ij,jm->im',delta, activations[-l - 1].transpose())",np.dot,np.einsum
3,pubg-finish-placement-prediction,https://www.kaggle.com/nithin98/pubg-v5,"np.dot((np.dot(x, w) - y).T, np.dot(x, w) - y)","np.einsum('ij,jm->im',(np.dot(x, w) - y).T, np.dot(x, w) - y)",np.dot,np.einsum
3,pubg-finish-placement-prediction,https://www.kaggle.com/nithin98/pubg-v5,"np.dot(train_array, new_eig_vec)","np.einsum('ij,jm->im',train_array, new_eig_vec)",np.dot,np.einsum
3,titanic,https://www.kaggle.com/abrierly/nn-approach,"np.dot(theta_1, a_1)","np.einsum('ij,jm->im',theta_1, a_1)",np.dot,np.einsum
3,titanic,https://www.kaggle.com/yaxelperez/logistic-regression-thing,"np.dot((h - y).T, X)","np.einsum('ij,jm->im',(h - y).T, X)",np.dot,np.einsum
3,titanic,https://www.kaggle.com/abrierly/nn-approach,"np.dot(theta_0, a_0)","np.einsum('ij,jm->im',theta_0, a_0)",np.dot,np.einsum
3,digit-recognizer,https://www.kaggle.com/hideki1234/neural-network,np.hstack(vecs),"np.append(sub_ids, df['click_id'].values, axis=1)",np.hstack,np.append
3,digit-recognizer,https://www.kaggle.com/hideki1234/neural-network,np.hstack(vecs),"np.concatenate(vecs, axis=1)",np.hstack,np.concatenate
3,mercedes-benz-greener-manufacturing,https://www.kaggle.com/hakeem/stacked-then-averaged-models-0-5697,"np.hstack((self.estimator.predict_proba(X), X))","np.append(self.estimator.predict_proba(X), X, axis=1)",np.hstack,np.append
3,mercedes-benz-greener-manufacturing,https://www.kaggle.com/adityakumarsinha/stacked-then-averaged-models-private-lb-0-554,"np.hstack((self.estimator.predict_proba(X), X))","np.concatenate((self.estimator.predict_proba(X), X), axis=1)",np.hstack,np.concatenate
3,digit-recognizer,https://www.kaggle.com/aawadall/deep-neural-net,np.linalg.norm(filter1),np.sqrt(np.square(filter1).sum()),np.linalg.norm,np.sqrt_sum
3,digit-recognizer,https://www.kaggle.com/hideki1234/neural-network,Theta2.T.dot(Delta3),"np.tensordot(Theta2.T,Delta3,axes=1)",np.ndarray.dot,np.tensordot
3,digit-recognizer,https://www.kaggle.com/moichiaaron/numpynist-py,s3.dot(a2.T),"np.tensordot(s3,a2.T,axes=1)",np.ndarray.dot,np.tensordot
3,titanic,https://www.kaggle.com/azeembootwala/titanic-logistic-regression,X.dot(self.W),"np.tensordot(X,self.W,axes=1)",np.ndarray.dot,np.tensordot
3,titanic,https://www.kaggle.com/zgo2016/titanic-logistic-regression,theta.T.dot(X.T),"np.tensordot(theta.T,X.T,axes=1)",np.ndarray.dot,np.tensordot
3,titanic,https://www.kaggle.com/zgo2016/titanic-logistic-regression,X.dot(theta.T),"np.tensordot(X,theta.T,axes=1)",np.ndarray.dot,np.tensordot
3,titanic,https://www.kaggle.com/zgo2016/titanic-logistic-regression,y.T.dot(np.log(h.T)),"np.tensordot(y.T,np.log(h.T),axes=1)",np.ndarray.dot,np.tensordot
3,titanic,https://www.kaggle.com/olttwa/titanic-logistic-regression-v1,(1 - y).T.dot(np.log(1 - h.T)),"np.tensordot((1 - y).T,np.log(1 - h.T),axes=1)",np.ndarray.dot,np.tensordot
3,titanic,https://www.kaggle.com/olttwa/titanic-logistic-regression-v1,"(h.T - y).T.dot(X[:, (j)])","np.tensordot((h.T - y).T,X[:, (j)],axes=1)",np.ndarray.dot,np.tensordot
3,costa-rican-household-poverty-prediction,https://www.kaggle.com/aleiken/beginner-xgboost,df_train.groupby('idhogar')['parentesco1'].sum(),"np.sum(df_train.groupby('idhogar')['parentesco1'],)",np.ndarray.sum,np.sum
3,forest-cover-type-kernels-only,https://www.kaggle.com/sunfulv1/nmsz1816010,tmp_df[cols_s_].sum(axis=1),"np.count_nonzero(tmp_df[cols_s_],axis=1)",np.ndarray.sum,np.count_nonzero
3,forest-cover-type-kernels-only,https://www.kaggle.com/sunfulv1/nmsz1816010,tmp_df[cols_s_].sum(axis=1),"np.einsum('ij->i',tmp_df[cols_s_])",np.ndarray.sum,np.einsum
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/nbose2/tests,df_train.isnull().sum(),"np.count_nonzero(df_train.isnull(),)",np.ndarray.sum,np.count_nonzero
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/nbose2/tests,df_train.isnull().sum(),"np.sum(df_train.isnull(),)",np.ndarray.sum,np.sum
3,jigsaw-toxic-comment-classification-challenge,https://www.kaggle.com/tokestermw/deep-bow-baseline,"train_df.iloc[:, 2:].sum(axis=1)","np.count_nonzero(train_df.iloc[:, 2:],axis=1)",np.ndarray.sum,np.count_nonzero
3,jigsaw-toxic-comment-classification-challenge,https://www.kaggle.com/tokestermw/deep-bow-baseline,"train_df.iloc[:, 2:].sum(axis=1)","np.einsum('ij->i',train_df.iloc[:, 2:])",np.ndarray.sum,np.einsum
3,new-york-city-taxi-fare-prediction,https://www.kaggle.com/hbajaj/nyc-taxi-fare-rfr-script,df.isnull().sum(),"np.sum(df.isnull(),)",np.ndarray.sum,np.sum
3,new-york-city-taxi-fare-prediction,https://www.kaggle.com/hbajaj/nyc-taxi-fare-rfr-script,df.isnull().sum(),"np.count_nonzero(df.isnull(),)",np.ndarray.sum,np.count_nonzero
3,PLAsTiCC-2018,https://www.kaggle.com/ogrellier/multi-core-aggregations,y_ohe.sum(axis=0),"np.count_nonzero(y_ohe,axis=0)",np.ndarray.sum,np.count_nonzero
3,PLAsTiCC-2018,https://www.kaggle.com/ogrellier/multi-core-aggregations,y_ohe.sum(axis=0),"np.sum(y_ohe,axis=0)",np.ndarray.sum,np.sum
3,pubg-finish-placement-prediction,https://www.kaggle.com/ceshine/pytorch-baseline-model,df.memory_usage().sum(),"np.einsum('i->',df.memory_usage())",np.ndarray.sum,np.einsum
3,pubg-finish-placement-prediction,https://www.kaggle.com/ceshine/pytorch-baseline-model,df.memory_usage().sum(),"np.sum(df.memory_usage(),)",np.ndarray.sum,np.sum
3,rossmann-store-sales,https://www.kaggle.com/lkirch/testingrossmanndata-ipynb,test_df.isnull().sum(),"np.count_nonzero(test_df.isnull(),)",np.ndarray.sum,np.count_nonzero
3,rossmann-store-sales,https://www.kaggle.com/lkirch/testingrossmanndata-ipynb,test_df.isnull().sum().sum(),"np.einsum('i->',test_df.isnull().sum())",np.ndarray.sum,np.einsum
3,rossmann-store-sales,https://www.kaggle.com/lkirch/testingrossmanndata-ipynb,test_df.isnull().sum(),"np.sum(test_df.isnull(),)",np.ndarray.sum,np.sum
3,rossmann-store-sales,https://www.kaggle.com/lkirch/testingrossmanndata-ipynb,test_df.isnull().sum().sum(),"np.count_nonzero(test_df.isnull().sum(),)",np.ndarray.sum,np.count_nonzero
3,santander-customer-satisfaction,https://www.kaggle.com/scirpus/3-little-models,(train[features] == 0).astype(int).sum(axis=1),"np.sum((train[features] == 0).astype(int),axis=1)",np.ndarray.sum,np.sum
3,santander-customer-satisfaction,https://www.kaggle.com/scirpus/3-little-models,(train[features] == 0).astype(int).sum(axis=1),"np.einsum('ij->i',(train[features] == 0).astype(int))",np.ndarray.sum,np.einsum
3,santander-customer-satisfaction,https://www.kaggle.com/scirpus/3-little-models,(train[features] == 0).astype(int).sum(axis=1),"np.count_nonzero((train[features] == 0).astype(int),axis=1)",np.ndarray.sum,np.count_nonzero
3,santander-value-prediction-challenge,https://www.kaggle.com/gcshekar08/testing-without-correcting-the-data-leakage,"df.iloc[:, a:b].sum(1)","np.sum(df.iloc[:, a:b],1)",np.ndarray.sum,np.sum
3,santander-value-prediction-challenge,https://www.kaggle.com/gcshekar08/testing-without-correcting-the-data-leakage,"df.iloc[:, a:].sum(1)","np.count_nonzero(df.iloc[:, a:],1)",np.ndarray.sum,np.count_nonzero
3,santas-uncertain-bags,https://www.kaggle.com/jonmanly/first-fit-algorithm-two-pass-lb-31907-53,np.array([gift_weight(x) for x in bag]).sum(),"np.einsum('i->',np.array([gift_weight(x) for x in bag]))",np.ndarray.sum,np.einsum
3,talkingdata-mobile-user-demographics,https://www.kaggle.com/dollardollar/xgb-with-class-probabilities,row.sum(),"np.einsum('i->',row)",np.ndarray.sum,np.einsum
3,talkingdata-mobile-user-demographics,https://www.kaggle.com/dollardollar/xgb-with-class-probabilities,row.sum(),"np.sum(row,)",np.ndarray.sum,np.sum
3,titanic,https://www.kaggle.com/thamagame/titanic-with-learning-curves,dataFrame.isnull().sum(),"np.sum(dataFrame.isnull(),)",np.ndarray.sum,np.sum
3,titanic,https://www.kaggle.com/yaxelperez/logistic-regression-thing,"np.sum(y * np.log(h) + (1 - y) * np.log(1 - h), axis=0)","np.einsum('ij->j',np)",np.ndarray.sum,np.einsum
3,titanic,https://www.kaggle.com/thamagame/titanic-with-learning-curves,dataFrame.isnull().sum(),"np.count_nonzero(dataFrame.isnull(),)",np.ndarray.sum,np.count_nonzero
3,whats-cooking-kernels-only,https://www.kaggle.com/ymatioun/lightgbm-v1,df.sum(axis=0),"np.sum(df,axis=0)",np.ndarray.sum,np.sum
3,prudential-life-insurance-assessment,https://www.kaggle.com/heaviside9/sklearn-linear-regression-benchmark,"np.ones((n,))","np.empty((n,)); r2.fill(1)",np.ones,np.empty
3,titanic,https://www.kaggle.com/yaxelperez/logistic-regression-thing,"np.ones((data.shape[0], 1))","np.empty((data.shape[0], 1)); r2.fill(1)",np.ones,np.empty
3,digit-recognizer,https://www.kaggle.com/aawadall/deep-neural-net,np.sum((1 - np.abs(y_star - y_hat)) * y_star),"np.einsum('i->',(1 - np.abs(y_star - y_hat)) * y_star)",np.sum,np.einsum
3,digit-recognizer,https://www.kaggle.com/aawadall/deep-neural-net,np.sum((y_hat == y_star) * (1 - y_star) * 1),np.count_nonzero((y_hat == y_star) * (1 - y_star) * 1),np.sum,np.count_nonzero
3,digit-recognizer,https://www.kaggle.com/aawadall/deep-neural-net,np.sum((y_hat == 1 - y_star) * (1 - y_star) * 1),np.count_nonzero((y_hat == 1 - y_star) * (1 - y_star) * 1),np.sum,np.count_nonzero
3,digit-recognizer,https://www.kaggle.com/aawadall/deep-neural-net,np.sum((y_hat == 1 - y_star) * y_star * 1),np.count_nonzero((y_hat == 1 - y_star) * y_star * 1),np.sum,np.count_nonzero
3,titanic,https://www.kaggle.com/yaxelperez/logistic-regression-thing,"np.sum(y * np.log(h) + (1 - y) * np.log(1 - h), axis=0)",(y * np.log(h) + (1 - y) * np.log(1 - h)).sum( axis=0),np.sum,np.ndarray.sum
3,titanic,https://www.kaggle.com/yaxelperez/logistic-regression-thing,"np.sum(y * np.log(h) + (1 - y) * np.log(1 - h), axis=0)","np.einsum('ij->j',y * np.log(h) + (1 - y) * np.log(1 - h))",np.sum,np.einsum
3,web-traffic-time-series-forecasting,https://www.kaggle.com/mikeskim/logmean-imputation,np.sum(np.isnan(x)),(np.isnan(x)).sum(),np.sum,np.einsum
3,web-traffic-time-series-forecasting,https://www.kaggle.com/mikeskim/logmean-imputation,np.sum(np.isnan(x)),"np.einsum('i->',np.isnan(x))",np.sum,np.einsum
3,zillow-prize-1,https://www.kaggle.com/valadi/xgboost-lightgbm-and-ols-tunenew,np.sum([abs(y[i] - ypred[i]) for i in range(len(y))]),"np.einsum('i->',[abs(y[i] - ypred[i]) for i in range(len(y))])",np.sum,np.einsum
3,digit-recognizer,https://www.kaggle.com/filatenkova/digit-read,np.transpose(train_t[1:]),np.column_stack(train_t[1:]),np.transpose,np.column_stack
3,digit-recognizer,https://www.kaggle.com/jbuchner/random-forest-97-7-stroke-features-gaps-knots,numpy.where(eaten),numpy.nonzero(eaten),np.where,np.nonzero
3,facebook-v-predicting-check-ins,https://www.kaggle.com/suryavan/knn-and-probability-lookup-script,"np.where(train.x.values < eps, 0, train.x.values - eps)","pd.DataFrame(train.x.values).apply(lambda x : x < eps).replace({True: 0,False: train.x.values - eps}).values.flatten()",np.where,pd.DataFrame.apply
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/nbose2/tests,np.where(corrmat > min_cor),np.nonzero(corrmat > min_cor),np.where,np.nonzero
3,santa-gift-matching,https://www.kaggle.com/zfturbo/greedy-children-baseline-v2-0-7455,np.where(gift[gift_id] == child_id),np.nonzero(gift[gift_id] == child_id),np.where,np.nonzero
3,shelter-animal-outcomes,https://www.kaggle.com/nishadi/breeds,"np.where(breeds_group[:, (0)] == breed)","np.nonzero(breeds_group[:, (0)] == breed)",np.where,np.nonzero
3,shelter-animal-outcomes,https://www.kaggle.com/nishadi/breeds,"np.where(breeds_group[:, (0)] == j)","np.nonzero(breeds_group[:, (0)] == j)",np.where,np.nonzero
3,titanic,https://www.kaggle.com/yeewii/firstscratchinpy,"np.where(df_test['SibSp'] + df_test['Parch'] + 1 == 1, 1, 0)",(df_test['SibSp'] + df_test['Parch'] + 1 == 1).astype((df_test['SibSp'] + df_test['Parch'] + 1 == 1).dtype),np.where,np.ndarray.astype
3,titanic,https://www.kaggle.com/bwboerman/a-quick-dive-into-h2o-with-python,"np.where(fullData.Sex != 'male', 1, 0)",(fullData.Sex != 'male').astype((fullData.Sex != 'male').dtype),np.where,np.ndarray.astype
3,titanic,https://www.kaggle.com/sturdydata/titanic-rf,"np.where(test.Sex == 'male', 1, 0)",(test.Sex == 'male').astype((test.Sex == 'male').dtype),np.where,np.ndarray.astype
3,titanic,https://www.kaggle.com/yeewii/firstscratchinpy,"np.where(df_train['SibSp'] + df_train['Parch'] + 1 == 1, 1, 0)","pd.DataFrame(df_train['SibSp'] + df_train['Parch'] + 1).apply(lambda x : x == 1).replace({True: 1,False: 0}).values.flatten()",np.where,pd.DataFrame.apply
3,titanic,https://www.kaggle.com/verdecal/epic-titanic-disaster,"np.where(full_data.Sex == 'male', 1, 0)","pd.DataFrame(full_data.Sex).apply(lambda x : x == 'male').replace({True: 1,False: 0}).values.flatten()",np.where,pd.DataFrame.apply
3,titanic,https://www.kaggle.com/qvajou/titanic-disaster-first-test,"np.where(full.Sex == 'male', 1, 0)","pd.DataFrame(full.Sex).apply(lambda x : x == 'male').replace({True: 1,False: 0}).values.flatten()",np.where,pd.DataFrame.apply
3,titanic,https://www.kaggle.com/knageswara78/my-tatanic-python-solution,"np.where(final_test['Age'] <= 16, 1, 0)",(final_test['Age']).map(lambda x : 1 if x <= 16 else  0).values,np.where,pd.Series.map
3,titanic,https://www.kaggle.com/knageswara78/my-tatanic-python-solution,"np.where(train_data['SibSp'] + train_data['Parch'] > 0, 0, 1)","pd.DataFrame(train_data['SibSp'] + train_data['Parch']).apply(lambda x : x > 0).replace({True: 0,False: 1}).values.flatten()",np.where,pd.DataFrame.apply
3,titanic,https://www.kaggle.com/knageswara78/my-tatanic-python-solution,"np.where(final_train['Age'] <= 16, 1, 0)",(final_train['Age']).map(lambda x : 1 if x <= 16 else  0).values,np.where,pd.Series.map
3,titanic,https://www.kaggle.com/sturdydata/titanic-rf,"np.where(test.Embarked == 'S', 1, 0)",(test.Embarked == 'S').astype((test.Embarked == 'S').dtype),np.where,np.ndarray.astype
3,titanic,https://www.kaggle.com/sturdydata/titanic-rf,"np.where(test.Embarked == 'C', 1, 0)",(test.Embarked == 'C').astype((test.Embarked == 'C').dtype),np.where,np.ndarray.astype
3,titanic,https://www.kaggle.com/davideng/titanic-attempt-1-random-forest,"np.where(y_pred[:] > 0.95, 1, 0)","pd.DataFrame(y_pred[:]).apply(lambda x : x > 0.95).replace({True: 1,False: 0}).values.flatten()",np.where,pd.DataFrame.apply
3,titanic,https://www.kaggle.com/knageswara78/my-tatanic-python-solution,"np.where(test_data['SibSp'] + test_data['Parch'] > 0, 0, 1)",(test_data['SibSp'] + test_data['Parch']).map(lambda x : 0 if x > 0 else  1).values,np.where,pd.Series.map
3,catch-me-if-you-can-intruder-detection-through-webpage-session-tracking2,https://www.kaggle.com/srogovtsev/a-simple-demo-of-sklearn-pipelines,"np.zeros((M.shape[0], self.columns_ - M.shape[1]), dtype=M.dtype)","np.empty((M.shape[0], self.columns_ - M.shape[1]), dtype=M.dtype); r2[:]= 0",np.zeros,np.empty
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/ogrellier/xgb-classifier-upsampling-lb-0-283,"np.zeros((n_estimators, n_splits))","np.empty((n_estimators, n_splits)); r2[:]= 0",np.zeros,np.empty
3,kobe-bryant-shot-selection,https://www.kaggle.com/jaycb26/xgbryant,"data.apply(lambda row: 28 if row['shot_distance'] > 28 else row[	    'shot_distance'], axis=1)", data['shot_distance'].apply(lambda row: 28 if row > 28 else row[	    'shot_distance']),pd.DataFrame.apply,pd.Series.apply
3,caterpillar-tube-pricing,https://www.kaggle.com/marbel/cat-random-forest,train.fillna('NA'),train.combine_first(train.applymap(lambda x: 'NA')),pd.DataFrame.fillna,pd.DataFrame.combine_first
3,caterpillar-tube-pricing,https://www.kaggle.com/marbel/cat-random-forest,test.fillna('NA'),test.combine_first(test.applymap(lambda x: 'NA')),pd.DataFrame.fillna,pd.DataFrame.combine_first
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/nbose2/tests,df_train.fillna(df_train.mean()),df_train.combine_first(df_train.applymap(lambda x: df_train.mean())),pd.DataFrame.fillna,pd.DataFrame.combine_first
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/carmnejsu/feature-engineering-different-models,df.fillna(0),df.combine_first(df.applymap(lambda x: 0)),pd.DataFrame.fillna,pd.DataFrame.combine_first
3,predicting-red-hat-business-value,https://www.kaggle.com/happycube/python-ver-of-group-1-and-date-trick,testsetdt['outcome'].fillna(testsetdt['outcome'].mean()),testsetdt['outcome'].combine_first(testsetdt['outcome'].applymap(lambda x: testsetdt['outcome'].mean())),pd.DataFrame.fillna,pd.DataFrame.combine_first
3,rossmann-store-sales,https://www.kaggle.com/inpefess/xgboost-in-python-with-rmspe,data.fillna(0),data.combine_first(data.applymap(lambda x: 0)),pd.DataFrame.fillna,pd.DataFrame.combine_first
3,sberbank-russian-housing-market,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,X.fillna(self.fill),X.combine_first(X.applymap(lambda x: self.fill)),pd.DataFrame.fillna,pd.DataFrame.combine_first
3,zillow-prize-1,https://www.kaggle.com/abhisheksharma26jan/zillowabhishek,df.fillna(-1.0),df.combine_first(df.applymap(lambda x: -1.0)),pd.DataFrame.fillna,pd.DataFrame.combine_first
3,santander-value-prediction-challenge,https://www.kaggle.com/gcshekar08/testing-without-correcting-the-data-leakage,"df.iloc[:, a:]","df.iat[:, a:]",pd.DataFrame.iloc,pd.DataFrame.iat
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/nbose2/tests,"corrmat.ix[i, j]","corrmat.loc[i, j]",pd.DataFrame.ix,pd.DataFrame.loc
3,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,test['ratio_kitch_sq_full_sq'].ix[test['ratio_kitch_sq_full_sq'] > 1],test['ratio_kitch_sq_full_sq'].loc[test['ratio_kitch_sq_full_sq'] > 1],pd.DataFrame.ix,pd.DataFrame.loc
3,sberbank-russian-housing-market,https://www.kaggle.com/ezyyyy/silly-silly-data,train['ratio_kitch_sq_life_sq'].ix[train['ratio_kitch_sq_life_sq'] > 1],train['ratio_kitch_sq_life_sq'].loc[train['ratio_kitch_sq_life_sq'] > 1],pd.DataFrame.ix,pd.DataFrame.loc
3,allstate-claims-severity,https://www.kaggle.com/scirpus/quick-genetic-programme,"visibletrain.loc[:, (col)]","visibletrain.ix[:, (col)]",pd.DataFrame.loc,pd.DataFrame.ix
3,allstate-claims-severity,https://www.kaggle.com/scirpus/naive-bayes-xgb,"testdata.loc[:, (col)]","testdata.ix[:, (col)]",pd.DataFrame.loc,pd.DataFrame.ix
3,allstate-claims-severity,https://www.kaggle.com/vecxoz/test1,"z_df.loc[:, (col)]","z_df.ix[:, (col)]",pd.DataFrame.loc,pd.DataFrame.ix
3,bnp-paribas-cardif-claims-management,https://www.kaggle.com/tsetsenos/firstpyscript,"test.loc[test_type.isnull(), test_col]","test.ix[test_type.isnull(), test_col]",pd.DataFrame.loc,pd.DataFrame.ix
3,bnp-paribas-cardif-claims-management,https://www.kaggle.com/bguberfain/v22-classifier,"test.loc[~test[c].isin(cboth), c]","test.ix[~test[c].isin(cboth), c]",pd.DataFrame.loc,pd.DataFrame.ix
3,bnp-paribas-cardif-claims-management,https://www.kaggle.com/anilcs/ectra-with-new-features,"test.loc[test[c].round(5) == 0, c]","test.ix[test[c].round(5) == 0, c]",pd.DataFrame.loc,pd.DataFrame.ix
3,bnp-paribas-cardif-claims-management,https://www.kaggle.com/scirpus/ordinal-xgb-lb-46190,"test.loc[~test[col].isin(train[col]), col]","test.ix[~test[col].isin(train[col]), col]",pd.DataFrame.loc,pd.DataFrame.ix
3,bnp-paribas-cardif-claims-management,https://www.kaggle.com/anilkumarkuppa/extratreesclassifier-score-0-45911,"test.loc[test_series.isnull(), test_name]","test.ix[test_series.isnull(), test_name]",pd.DataFrame.loc,pd.DataFrame.ix
3,bosch-production-line-performance,https://www.kaggle.com/alexxanderlarko/road-2-0-4-featureset,"test.loc[test.Id.isin(te.Id), 'StartTime']","test.ix[test.Id.isin(te.Id), 'StartTime']",pd.DataFrame.loc,pd.DataFrame.ix
3,digit-recognizer,https://www.kaggle.com/willjashford/minst-willjashford,"train_df.loc[(train_df['label'] != digit), :]","train_df.ix[(train_df['label'] != digit), :]",pd.DataFrame.loc,pd.DataFrame.ix
3,digit-recognizer,https://www.kaggle.com/youngseoklee/digit-recognizer-with-machine-learning,y.loc[size:size * 2],y.ix[size:size * 2],pd.DataFrame.loc,pd.DataFrame.ix
3,digit-recognizer,https://www.kaggle.com/willjashford/minst-willjashford,"custom_train_df.loc[:, ('label')]","custom_train_df.ix[:, ('label')]",pd.DataFrame.loc,pd.DataFrame.ix
3,digit-recognizer,https://www.kaggle.com/jbuchner/random-forest-97-7-stroke-features-gaps-knots,"data.loc[:, 'feat0':'feat228']","data.ix[:, 'feat0':'feat228']",pd.DataFrame.loc,pd.DataFrame.ix
3,grupo-bimbo-inventory-demand,https://www.kaggle.com/nemethpeter42/valami,"df_ag_train.loc[:, ('megvan')]","df_ag_train.ix[:, ('megvan')]",pd.DataFrame.loc,pd.DataFrame.ix
3,grupo-bimbo-inventory-demand,https://www.kaggle.com/nemethpeter42/valami,"df_Train.loc[:, (['Producto_ID', 'Demanda_uni_equil'])]","df_Train.ix[:, (['Producto_ID', 'Demanda_uni_equil'])]",pd.DataFrame.loc,pd.DataFrame.ix
3,grupo-bimbo-inventory-demand,https://www.kaggle.com/nemethpeter42/valami,"df_train.loc[:, ([oszlop, 'Demanda_uni_equil'])]","df_train.ix[:, ([oszlop, 'Demanda_uni_equil'])]",pd.DataFrame.loc,pd.DataFrame.ix
3,grupo-bimbo-inventory-demand,https://www.kaggle.com/nemethpeter42/valami,"df.loc[:, (['elteres', oszlop])]","df.ix[:, (['elteres', oszlop])]",pd.DataFrame.loc,pd.DataFrame.ix
3,grupo-bimbo-inventory-demand,https://www.kaggle.com/nemethpeter42/valami,"df_pr_train.loc[:, ('megvan')]","df_pr_train.ix[:, ('megvan')]",pd.DataFrame.loc,pd.DataFrame.ix
3,home-credit-default-risk,https://www.kaggle.com/nilzone/lgbm-with-mean-encodings,"alldata.loc[:, (categorical_cols)]","alldata.ix[:, (categorical_cols)]",pd.DataFrame.loc,pd.DataFrame.ix
3,home-credit-default-risk,https://www.kaggle.com/nilzone/lightgbm,"alldata.loc[:, ('%s_MEAN' % col)]","alldata.ix[:, ('%s_MEAN' % col)]",pd.DataFrame.loc,pd.DataFrame.ix
3,home-credit-default-risk,https://www.kaggle.com/nilzone/lightgbm,"alldata.loc[~alldata.is_test, 'TARGET']","alldata.ix[~alldata.is_test, 'TARGET']",pd.DataFrame.loc,pd.DataFrame.ix
3,home-credit-default-risk,https://www.kaggle.com/nilzone/lightgbm,"alldata.loc[:, ('is_test')]","alldata.ix[:, ('is_test')]",pd.DataFrame.loc,pd.DataFrame.ix
3,home-credit-default-risk,https://www.kaggle.com/nilzone/lgbm-with-mean-encodings,"alldata.loc[(~alldata.is_test), :]","alldata.ix[(~alldata.is_test), :]",pd.DataFrame.loc,pd.DataFrame.ix
3,home-credit-default-risk,https://www.kaggle.com/ranjith49/home-credit-default-risk-python,"app_train.loc[app_train['TARGET'] == 1, source]","app_train.ix[app_train['TARGET'] == 1, source]",pd.DataFrame.loc,pd.DataFrame.ix
3,home-credit-default-risk,https://www.kaggle.com/ranjith49/home-credit-default-risk-python,"plot_data.dropna().loc[:100000, :]","plot_data.dropna().ix[:100000, :]",pd.DataFrame.loc,pd.DataFrame.ix
3,home-credit-default-risk,https://www.kaggle.com/ranjith49/home-credit-default-risk-python,"app_train.loc[app_train['TARGET'] == 0, source]","app_train.ix[app_train['TARGET'] == 0, source]",pd.DataFrame.loc,pd.DataFrame.ix
3,home-credit-default-risk,https://www.kaggle.com/nilzone/lgbm-with-mean-encodings,"tmp_df_mean.loc[:, ('%s_count' % name)]","tmp_df_mean.ix[:, ('%s_count' % name)]",pd.DataFrame.loc,pd.DataFrame.ix
3,home-credit-default-risk,https://www.kaggle.com/ranjith49/home-credit-default-risk-python,"app_train.loc[app_train['TARGET'] == 1, 'DAYS_BIRTH']","app_train.ix[app_train['TARGET'] == 1, 'DAYS_BIRTH']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/joanfo/my-first-kernel,"clean_test.loc[:, (numerical_cols)]","clean_test.ix[:, (numerical_cols)]",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[df.Id == 1170, 'PoolQC']","df.ix[df.Id == 1170, 'PoolQC']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[df.MiscFeature.isnull(), 'MiscFeature']","df.ix[df.MiscFeature.isnull(), 'MiscFeature']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/wirehack/fdsfsdfdsfsdfsdf,"df.loc[df[cols].isnull(), cols]","df.ix[df[cols].isnull(), cols]",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[df.Functional.isnull(), 'Functional']","df.ix[df.Functional.isnull(), 'Functional']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/cxxacxx/have-a-try-2,"all_data.loc[all_data['LotFrontage'].isnull(), 'LotArea']","all_data.ix[all_data['LotFrontage'].isnull(), 'LotArea']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[df.Id == 2127, 'GarageFinish']","df.ix[df.Id == 2127, 'GarageFinish']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/wirehack/fdsfsdfdsfsdfsdf,"df.loc[df['Electrical'].isnull(), 'Electrical']","df.ix[df['Electrical'].isnull(), 'Electrical']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/wirehack/fdsfsdfdsfsdfsdf,"df.loc[df['Fence'].isnull(), 'Fence']","df.ix[df['Fence'].isnull(), 'Fence']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/cttsai/xgb-trial-oct-08,"test.loc[:, (name)]","test.ix[:, (name)]",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[(df.MSSubClass == 20) & df.MSZoning.isnull(), 'MSZoning']","df.ix[(df.MSSubClass == 20) & df.MSZoning.isnull(), 'MSZoning']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/cxxacxx/have-a-try-2,"all_data.loc[all_data.BsmtFinType1 == 'NoBsmt', 'BsmtFinSF1']","all_data.ix[all_data.BsmtFinType1 == 'NoBsmt', 'BsmtFinSF1']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/wirehack/fdsfsdfdsfsdfsdf,"df.loc[df['MiscFeature'].isnull(), 'MiscFeature']","df.ix[df['MiscFeature'].isnull(), 'MiscFeature']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/cxxacxx/have-a-try-2,"X.loc[:, ([a, t])]","X.ix[:, ([a, t])]",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[df.Alley.isnull(), 'Alley']","df.ix[df.Alley.isnull(), 'Alley']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[df.MasVnrArea.isnull(), 'MasVnrArea']","df.ix[df.MasVnrArea.isnull(), 'MasVnrArea']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/patrickjordan/random-forest,"frame2.loc[frame2[feature] == cat, feature + '_E']","frame2.ix[frame2[feature] == cat, feature + '_E']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[df.Id == 2504, 'PoolQC']","df.ix[df.Id == 2504, 'PoolQC']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[df.Id == 2611, 'MasVnrType']","df.ix[df.Id == 2611, 'MasVnrType']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[df.LotFrontage.isnull(), 'LotMedian']","df.ix[df.LotFrontage.isnull(), 'LotMedian']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[df.Id == 2127, 'GarageQual']","df.ix[df.Id == 2127, 'GarageQual']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/cxxacxx/have-a-try-2,"all_data.loc[all_data['GarageYrBlt'].isnull(), 'GarageYrBlt']","all_data.ix[all_data['GarageYrBlt'].isnull(), 'GarageYrBlt']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/wirehack/fdsfsdfdsfsdfsdf,"df.loc[df['FireplaceQu'].isnull(), 'FireplaceQu']","df.ix[df['FireplaceQu'].isnull(), 'FireplaceQu']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[df.Exterior1st.isnull(), ['Exterior1st', 'Exterior2nd']]","df.ix[df.Exterior1st.isnull(), ['Exterior1st', 'Exterior2nd']]",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[check_build == False, 'YearRemodAdd']","df.ix[check_build == False, 'YearRemodAdd']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[df.KitchenQual.isnull(), 'KitchenQual']","df.ix[df.KitchenQual.isnull(), 'KitchenQual']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/cxxacxx/have-a-try-2,"all_data.loc[all_data.BsmtQual == 'NoBsmt', 'TotalBsmtSF']","all_data.ix[all_data.BsmtQual == 'NoBsmt', 'TotalBsmtSF']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/cxxacxx/have-a-try-2,"all_data.loc[all_data.BsmtFinType2 == 'NoBsmt', 'BsmtFinSF2']","all_data.ix[all_data.BsmtFinType2 == 'NoBsmt', 'BsmtFinSF2']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[df.LotFrontage.isnull(), 'LotFrontage']","df.ix[df.LotFrontage.isnull(), 'LotFrontage']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[df.Id == 2421, 'PoolQC']","df.ix[df.Id == 2421, 'PoolQC']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/wirehack/fdsfsdfdsfsdfsdf,"df.loc[df['MasVnrArea'].isnull(), 'MasVnrArea']","df.ix[df['MasVnrArea'].isnull(), 'MasVnrArea']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/cxxacxx/have-a-try-2,"all_data.loc[all_data['LotFrontage'].isnull(), 'LotFrontage']","all_data.ix[all_data['LotFrontage'].isnull(), 'LotFrontage']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/wirehack/fdsfsdfdsfsdfsdf,"df.loc[df['MasVnrType'].isnull(), 'MasVnrType']","df.ix[df['MasVnrType'].isnull(), 'MasVnrType']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[df.Fence.isnull(), 'Fence']","df.ix[df.Fence.isnull(), 'Fence']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[check_build == False, 'YearBuilt']","df.ix[check_build == False, 'YearBuilt']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/cxxacxx/have-a-try-2,"all_data.loc[:, (columns_for_pc)]","all_data.ix[:, (columns_for_pc)]",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[df.SaleType.isnull(), 'SaleType']","df.ix[df.SaleType.isnull(), 'SaleType']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[df.Id == 2127, 'GarageCond']","df.ix[df.Id == 2127, 'GarageCond']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[df.LotFrontage.isnull(), 'Id']","df.ix[df.LotFrontage.isnull(), 'Id']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/cxxacxx/have-a-try-2,"all_data.loc[np.logical_not(all_data['LotFrontage'].isnull()), 'LotFrontage']","all_data.ix[np.logical_not(all_data['LotFrontage'].isnull()), 'LotFrontage']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/cxxacxx/have-a-try-2,"all_data.loc[all_data.BsmtQual == 'NoBsmt', 'BsmtUnfSF']","all_data.ix[all_data.BsmtQual == 'NoBsmt', 'BsmtUnfSF']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/cxxacxx/have-a-try-2,"all_data.loc[all_data.MasVnrType == 'None', 'MasVnrArea']","all_data.ix[all_data.MasVnrType == 'None', 'MasVnrArea']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[df.MasVnrType.isnull(), 'MasVnrType']","df.ix[df.MasVnrType.isnull(), 'MasVnrType']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[df.Electrical.isnull(), 'Electrical']","df.ix[df.Electrical.isnull(), 'Electrical']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[(df.MSSubClass == 70) & df.MSZoning.isnull(), 'MSZoning']","df.ix[(df.MSSubClass == 70) & df.MSZoning.isnull(), 'MSZoning']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/cxxacxx/have-a-try-2,"all_data.loc[:, (t)]","all_data.ix[:, (t)]",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[df.FireplaceQu.isnull(), 'FireplaceQu']","df.ix[df.FireplaceQu.isnull(), 'FireplaceQu']",pd.DataFrame.loc,pd.DataFrame.ix
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[(df.MSSubClass == 30) & df.MSZoning.isnull(), 'MSZoning']","df.ix[(df.MSSubClass == 30) & df.MSZoning.isnull(), 'MSZoning']",pd.DataFrame.loc,pd.DataFrame.ix
3,instacart-market-basket-analysis,https://www.kaggle.com/nabilnobel/if-product-exists-in-last-4-order,"orders_all.loc[orders_all['order_number'] > 2, 'n_2']","orders_all.ix[orders_all['order_number'] > 2, 'n_2']",pd.DataFrame.loc,pd.DataFrame.ix
3,instacart-market-basket-analysis,https://www.kaggle.com/nabilnobel/if-product-exists-in-last-4-order,"orders_all.loc[orders_all['order_number'] > 4, 'n_4']","orders_all.ix[orders_all['order_number'] > 4, 'n_4']",pd.DataFrame.loc,pd.DataFrame.ix
3,leaf-classification,https://www.kaggle.com/fernandocruz/first-test,"test.loc[:, ('id')]","test.ix[:, ('id')]",pd.DataFrame.loc,pd.DataFrame.ix
3,leaf-classification,https://www.kaggle.com/fernandocruz/first-test,"test.loc[:, 'margin1':]","test.ix[:, 'margin1':]",pd.DataFrame.loc,pd.DataFrame.ix
3,leaf-classification,https://www.kaggle.com/fernandocruz/first-test,"X_test.loc[:, (ind)]","X_test.ix[:, (ind)]",pd.DataFrame.loc,pd.DataFrame.ix
3,mercedes-benz-greener-manufacturing,https://www.kaggle.com/adityakumarsinha/stacked-then-averaged-models-private-lb-0-554,"all_data.loc[:, ('lead1')]","all_data.ix[:, ('lead1')]",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_calc_10 >= 13, 'ps_calc_10']","df.ix[df.ps_calc_10 >= 13, 'ps_calc_10']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_calc_13 > 12, 'ps_calc_13']","df.ix[df.ps_calc_13 > 12, 'ps_calc_13']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_car_12 == -1, 'ps_car_12']","df.ix[df.ps_car_12 == -1, 'ps_car_12']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_calc_14 >= 13, 'ps_calc_14']","df.ix[df.ps_calc_14 >= 13, 'ps_calc_14']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[1 == df.ps_calc_08, 'ps_calc_08']","df.ix[1 == df.ps_calc_08, 'ps_calc_08']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_car_02_cat == -1, 'ps_car_02_cat']","df.ix[df.ps_car_02_cat == -1, 'ps_car_02_cat']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_ind_02_cat == -1, 'ps_ind_02_cat']","df.ix[df.ps_ind_02_cat == -1, 'ps_ind_02_cat']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_calc_11 > 18, 'ps_calc_11']","df.ix[df.ps_calc_11 > 18, 'ps_calc_11']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_car_09_cat == -1, 'ps_car_09_cat']","df.ix[df.ps_car_09_cat == -1, 'ps_car_09_cat']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_calc_13 < 6, 'ps_calc_13']","df.ix[df.ps_calc_13 < 6, 'ps_calc_13']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_calc_10 > 22, 'ps_calc_10']","df.ix[df.ps_calc_10 > 22, 'ps_calc_10']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_calc_12 < 5, 'ps_calc_12']","df.ix[df.ps_calc_12 < 5, 'ps_calc_12']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_calc_10.isin(range(2, 13)), 'ps_calc_10']","df.ix[df.ps_calc_10.isin(range(2, 13)), 'ps_calc_10']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_calc_14 > 21, 'ps_calc_14']","df.ix[df.ps_calc_14 > 21, 'ps_calc_14']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_ind_04_cat == -1, 'ps_ind_04_cat']","df.ix[df.ps_ind_04_cat == -1, 'ps_ind_04_cat']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_calc_08 > 7, 'ps_calc_08']","df.ix[df.ps_calc_08 > 7, 'ps_calc_08']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_car_11 == -1, 'ps_car_11']","df.ix[df.ps_car_11 == -1, 'ps_car_11']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_calc_11 > 19, 'ps_calc_11']","df.ix[df.ps_calc_11 > 19, 'ps_calc_11']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_calc_14 > 23, 'ps_calc_14']","df.ix[df.ps_calc_14 > 23, 'ps_calc_14']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_calc_14.isin(range(4, 13)), 'ps_calc_14']","df.ix[df.ps_calc_14.isin(range(4, 13)), 'ps_calc_14']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_calc_12 > 10, 'ps_calc_12']","df.ix[df.ps_calc_12 > 10, 'ps_calc_12']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_calc_07 < 4, 'ps_calc_07']","df.ix[df.ps_calc_07 < 4, 'ps_calc_07']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_calc_06 > 5, 'ps_calc_06']","df.ix[df.ps_calc_06 > 5, 'ps_calc_06']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_calc_05.isin(range(5)), 'ps_calc_05']","df.ix[df.ps_calc_05.isin(range(5)), 'ps_calc_05']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_car_01_cat == -1, 'ps_car_01_cat']","df.ix[df.ps_car_01_cat == -1, 'ps_car_01_cat']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_calc_13 > 13, 'ps_calc_13']","df.ix[df.ps_calc_13 > 13, 'ps_calc_13']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_calc_12 > 9, 'ps_calc_12']","df.ix[df.ps_calc_12 > 9, 'ps_calc_12']",pd.DataFrame.loc,pd.DataFrame.ix
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[df.ps_calc_09 < 4, 'ps_calc_09']","df.ix[df.ps_calc_09 < 4, 'ps_calc_09']",pd.DataFrame.loc,pd.DataFrame.ix
3,predicting-red-hat-business-value,https://www.kaggle.com/scirpus/gp-plus-santander-style-heuristics,"submission.loc[visibletest.outcome__grpdate == 1.0, 'outcome']","submission.ix[visibletest.outcome__grpdate == 1.0, 'outcome']",pd.DataFrame.loc,pd.DataFrame.ix
3,rossmann-store-sales,https://www.kaggle.com/cast42/xgboost-extra-features,"data.loc[data.Promo2SinceYear == 0, 'PromoOpen']","data.ix[data.Promo2SinceYear == 0, 'PromoOpen']",pd.DataFrame.loc,pd.DataFrame.ix
3,rossmann-store-sales,https://www.kaggle.com/inpefess/xgboost-in-python-with-rmspe,"data.loc[data['StoreType'] == 'c', 'StoreType']","data.ix[data['StoreType'] == 'c', 'StoreType']",pd.DataFrame.loc,pd.DataFrame.ix
3,rossmann-store-sales,https://www.kaggle.com/inpefess/xgboost-in-python-with-rmspe,"data.loc[data['Assortment'] == 'a', 'Assortment']","data.ix[data['Assortment'] == 'a', 'Assortment']",pd.DataFrame.loc,pd.DataFrame.ix
3,rossmann-store-sales,https://www.kaggle.com/inpefess/xgboost-in-python-with-rmspe,"data.loc[data['StoreType'] == 'a', 'StoreType']","data.ix[data['StoreType'] == 'a', 'StoreType']",pd.DataFrame.loc,pd.DataFrame.ix
3,rossmann-store-sales,https://www.kaggle.com/vinhnguyen/evolutionary-algorithms-for-param-tuning,"data.loc[data['StateHoliday'] == 'c', 'StateHoliday']","data.ix[data['StateHoliday'] == 'c', 'StateHoliday']",pd.DataFrame.loc,pd.DataFrame.ix
3,rossmann-store-sales,https://www.kaggle.com/inpefess/xgboost-in-python-with-rmspe,"data.loc[data['StoreType'] == 'd', 'StoreType']","data.ix[data['StoreType'] == 'd', 'StoreType']",pd.DataFrame.loc,pd.DataFrame.ix
3,rossmann-store-sales,https://www.kaggle.com/inpefess/xgboost-in-python-with-rmspe,"data.loc[data['Assortment'] == 'b', 'Assortment']","data.ix[data['Assortment'] == 'b', 'Assortment']",pd.DataFrame.loc,pd.DataFrame.ix
3,rossmann-store-sales,https://www.kaggle.com/inpefess/xgboost-in-python-with-rmspe,"data.loc[data['Assortment'] == 'c', 'Assortment']","data.ix[data['Assortment'] == 'c', 'Assortment']",pd.DataFrame.loc,pd.DataFrame.ix
3,rossmann-store-sales,https://www.kaggle.com/cast42/xgboost-extra-features,"data.loc[data.PromoInterval == 0, 'PromoInterval']","data.ix[data.PromoInterval == 0, 'PromoInterval']",pd.DataFrame.loc,pd.DataFrame.ix
3,rossmann-store-sales,https://www.kaggle.com/inpefess/xgboost-in-python-with-rmspe,"data.loc[data['StoreType'] == 'b', 'StoreType']","data.ix[data['StoreType'] == 'b', 'StoreType']",pd.DataFrame.loc,pd.DataFrame.ix
3,santander-customer-satisfaction,https://www.kaggle.com/gouxute1/xgboost-and-simple-data-cleaning,"df_train.loc[:, (nm)]","df_train.ix[:, (nm)]",pd.DataFrame.loc,pd.DataFrame.ix
3,santander-customer-satisfaction,https://www.kaggle.com/gouxute1/xgboost-and-simple-data-cleaning,"df_test.loc[df_test[nm] > max_v, nm]","df_test.ix[df_test[nm] > max_v, nm]",pd.DataFrame.loc,pd.DataFrame.ix
3,santander-customer-satisfaction,https://www.kaggle.com/gouxute1/xgboost-and-simple-data-cleaning,"df_test.loc[df_test['n0'] == 0, 'n0']","df_test.ix[df_test['n0'] == 0, 'n0']",pd.DataFrame.loc,pd.DataFrame.ix
3,santander-customer-satisfaction,https://www.kaggle.com/gouxute1/xgboost-and-simple-data-cleaning,"df_train.loc[:, (clm_nm)]","df_train.ix[:, (clm_nm)]",pd.DataFrame.loc,pd.DataFrame.ix
3,santander-customer-satisfaction,https://www.kaggle.com/gouxute1/xgboost-and-simple-data-cleaning,"df_test.loc[df_test['n0'] != 0, 'n0']","df_test.ix[df_test['n0'] != 0, 'n0']",pd.DataFrame.loc,pd.DataFrame.ix
3,santander-customer-satisfaction,https://www.kaggle.com/gouxute1/xgboost-and-simple-data-cleaning,"df_train.loc[df_train['n0'] != 0, 'n0']","df_train.ix[df_train['n0'] != 0, 'n0']",pd.DataFrame.loc,pd.DataFrame.ix
3,santander-customer-satisfaction,https://www.kaggle.com/gilbar/visualizing-data,"X.loc[:, ('saldo_medio_var29_hace3')]","X.ix[:, ('saldo_medio_var29_hace3')]",pd.DataFrame.loc,pd.DataFrame.ix
3,santander-customer-satisfaction,https://www.kaggle.com/gilbar/visualizing-data,"X.loc[:, (Xlog.columns)]","X.ix[:, (Xlog.columns)]",pd.DataFrame.loc,pd.DataFrame.ix
3,santander-customer-satisfaction,https://www.kaggle.com/gouxute1/xgboost-and-simple-data-cleaning,"df_test.loc[df_test[nm] < min_v, nm]","df_test.ix[df_test[nm] < min_v, nm]",pd.DataFrame.loc,pd.DataFrame.ix
3,santander-customer-satisfaction,https://www.kaggle.com/ganliu/testwhy,"train.loc[train['TARGET'] == 0, features + ['TARGET']]","train.ix[train['TARGET'] == 0, features + ['TARGET']]",pd.DataFrame.loc,pd.DataFrame.ix
3,santander-customer-satisfaction,https://www.kaggle.com/brajen259/pca-and-xgb,"test.loc[test[f] > lim, f]","test.ix[test[f] > lim, f]",pd.DataFrame.loc,pd.DataFrame.ix
3,santander-product-recommendation,https://www.kaggle.com/smartbao/item-recomm2,"data.loc[data['age'] == 'NA', 'age']","data.ix[data['age'] == 'NA', 'age']",pd.DataFrame.loc,pd.DataFrame.ix
3,santander-product-recommendation,https://www.kaggle.com/smartbao/item-recomm2,"data.loc[data['renta'].isnull(), 'renta']","data.ix[data['renta'].isnull(), 'renta']",pd.DataFrame.loc,pd.DataFrame.ix
3,sberbank-russian-housing-market,https://www.kaggle.com/cjansen/magic-numbers-private-lb-0-31647,"train.loc[bad_index, 'full_sq']","train.ix[bad_index, 'full_sq']",pd.DataFrame.loc,pd.DataFrame.ix
3,sberbank-russian-housing-market,https://www.kaggle.com/cjansen/magic-numbers-private-lb-0-31647,"test.loc[bad_index, 'max_floor']","test.ix[bad_index, 'max_floor']",pd.DataFrame.loc,pd.DataFrame.ix
3,sberbank-russian-housing-market,https://www.kaggle.com/cjansen/magic-numbers-private-lb-0-31647,"train.loc[bad_index, 'build_year']","train.ix[bad_index, 'build_year']",pd.DataFrame.loc,pd.DataFrame.ix
3,sberbank-russian-housing-market,https://www.kaggle.com/v81msk/test1,"v_pl_by_area_p.loc[v_pl_by_area_p['a_pl_by_area_p'] == x, 'a_m1_p1rl']","v_pl_by_area_p.ix[v_pl_by_area_p['a_pl_by_area_p'] == x, 'a_m1_p1rl']",pd.DataFrame.loc,pd.DataFrame.ix
3,sberbank-russian-housing-market,https://www.kaggle.com/cjansen/magic-numbers-private-lb-0-31647,"test.loc[bad_index, 'life_sq']","test.ix[bad_index, 'life_sq']",pd.DataFrame.loc,pd.DataFrame.ix
3,sberbank-russian-housing-market,https://www.kaggle.com/aharless/jiwon-small-improvements-for-magic-number-results,"test.loc[equal_index, 'life_sq']","test.ix[equal_index, 'life_sq']",pd.DataFrame.loc,pd.DataFrame.ix
3,sberbank-russian-housing-market,https://www.kaggle.com/cjansen/magic-numbers-private-lb-0-31647,"test.loc[bad_index, 'build_year']","test.ix[bad_index, 'build_year']",pd.DataFrame.loc,pd.DataFrame.ix
3,sberbank-russian-housing-market,https://www.kaggle.com/aharless/jiwon-small-improvements-for-magic-number-results,"train.loc[bad_index, ['life_sq', 'full_sq']]","train.ix[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.loc,pd.DataFrame.ix
3,sberbank-russian-housing-market,https://www.kaggle.com/cjansen/magic-numbers-private-lb-0-31647,"test.loc[bad_index, 'num_room']","test.ix[bad_index, 'num_room']",pd.DataFrame.loc,pd.DataFrame.ix
3,sberbank-russian-housing-market,https://www.kaggle.com/aharless/jiwon-small-improvements-for-magic-number-results,"test.loc[bad_index, 'full_sq']","test.ix[bad_index, 'full_sq']",pd.DataFrame.loc,pd.DataFrame.ix
3,sberbank-russian-housing-market,https://www.kaggle.com/cjansen/magic-numbers-private-lb-0-31647,"train.loc[bad_index, 'floor']","train.ix[bad_index, 'floor']",pd.DataFrame.loc,pd.DataFrame.ix
3,sberbank-russian-housing-market,https://www.kaggle.com/cjansen/magic-numbers-private-lb-0-31647,"train.loc[kitch_is_build_year, 'kitch_sq']","train.ix[kitch_is_build_year, 'kitch_sq']",pd.DataFrame.loc,pd.DataFrame.ix
3,sberbank-russian-housing-market,https://www.kaggle.com/v81msk/test1,"df.loc[df['product_type'] == 'Investment', 'a_pt']","df.ix[df['product_type'] == 'Investment', 'a_pt']",pd.DataFrame.loc,pd.DataFrame.ix
3,sberbank-russian-housing-market,https://www.kaggle.com/v81msk/test1,"trn_df.loc[trn_df['a_m1_p1rl'] > 2 * trn_df['a_pl'], 'a_expensive']","trn_df.ix[trn_df['a_m1_p1rl'] > 2 * trn_df['a_pl'], 'a_expensive']",pd.DataFrame.loc,pd.DataFrame.ix
3,sberbank-russian-housing-market,https://www.kaggle.com/aharless/jiwon-small-improvements-for-magic-number-results,"test.loc[bad_index, 'kitch_sq']","test.ix[bad_index, 'kitch_sq']",pd.DataFrame.loc,pd.DataFrame.ix
3,sberbank-russian-housing-market,https://www.kaggle.com/cjansen/magic-numbers-private-lb-0-31647,"train.loc[bad_index, 'state']","train.ix[bad_index, 'state']",pd.DataFrame.loc,pd.DataFrame.ix
3,sberbank-russian-housing-market,https://www.kaggle.com/cjansen/magic-numbers-private-lb-0-31647,"test.loc[bad_index, ['life_sq', 'full_sq']]","test.ix[bad_index, ['life_sq', 'full_sq']]",pd.DataFrame.loc,pd.DataFrame.ix
3,sberbank-russian-housing-market,https://www.kaggle.com/cjansen/magic-numbers-private-lb-0-31647,"train.loc[bad_index, 'kitch_sq']","train.ix[bad_index, 'kitch_sq']",pd.DataFrame.loc,pd.DataFrame.ix
3,sberbank-russian-housing-market,https://www.kaggle.com/v81msk/test1,"v_cheap_by_area.loc[v_cheap_by_area['sub_area'] == x, 'rate']","v_cheap_by_area.ix[v_cheap_by_area['sub_area'] == x, 'rate']",pd.DataFrame.loc,pd.DataFrame.ix
3,sberbank-russian-housing-market,https://www.kaggle.com/cjansen/magic-numbers-private-lb-0-31647,"train.loc[bad_index, 'max_floor']","train.ix[bad_index, 'max_floor']",pd.DataFrame.loc,pd.DataFrame.ix
3,sberbank-russian-housing-market,https://www.kaggle.com/v81msk/test1,"v_pl_by_area.loc[v_pl_by_area['sub_area'] == x, 'a_m1_p1rl']","v_pl_by_area.ix[v_pl_by_area['sub_area'] == x, 'a_m1_p1rl']",pd.DataFrame.loc,pd.DataFrame.ix
3,sberbank-russian-housing-market,https://www.kaggle.com/v81msk/test1,"trn_df.loc[trn_df['a_m1_p1rl'] < VN_CHEAP_INDEX * trn_df['a_pl'], 'a_cheap']","trn_df.ix[trn_df['a_m1_p1rl'] < VN_CHEAP_INDEX * trn_df['a_pl'], 'a_cheap']",pd.DataFrame.loc,pd.DataFrame.ix
3,sberbank-russian-housing-market,https://www.kaggle.com/v81msk/test1,"df.loc[df['metro_km_walk'].isnull(), ['metro_km_walk', 'metro_km_avto']]","df.ix[df['metro_km_walk'].isnull(), ['metro_km_walk', 'metro_km_avto']]",pd.DataFrame.loc,pd.DataFrame.ix
3,sf-crime,https://www.kaggle.com/careyai/san-fran-crime,"train_data.loc[:, ('Address')]","train_data.ix[:, ('Address')]",pd.DataFrame.loc,pd.DataFrame.ix
3,sf-crime,https://www.kaggle.com/lesibius/time-only-sv,"df_train.loc[:, ('Month')]","df_train.ix[:, ('Month')]",pd.DataFrame.loc,pd.DataFrame.ix
3,sf-crime,https://www.kaggle.com/dollardollar/importance-of-address-features,"fold1.loc[:, ('Category')]","fold1.ix[:, ('Category')]",pd.DataFrame.loc,pd.DataFrame.ix
3,sf-crime,https://www.kaggle.com/careyai/san-fran-crime,"train.loc[:, ('Address')]","train.ix[:, ('Address')]",pd.DataFrame.loc,pd.DataFrame.ix
3,sf-crime,https://www.kaggle.com/careyai/san-fran-crime,"test.loc[test.Y > 37.8801919977151, 'Y']","test.ix[test.Y > 37.8801919977151, 'Y']",pd.DataFrame.loc,pd.DataFrame.ix
3,sf-crime,https://www.kaggle.com/dollardollar/importance-of-address-features,"fold0.loc[:, ('Category')]","fold0.ix[:, ('Category')]",pd.DataFrame.loc,pd.DataFrame.ix
3,sf-crime,https://www.kaggle.com/careyai/san-fran-crime,"test.loc[test.X < -122.51093037786198, 'X']","test.ix[test.X < -122.51093037786198, 'X']",pd.DataFrame.loc,pd.DataFrame.ix
3,sf-crime,https://www.kaggle.com/lesibius/naive-bayes-time-only,"df_train.loc[:, ('Year')]","df_train.ix[:, ('Year')]",pd.DataFrame.loc,pd.DataFrame.ix
3,sf-crime,https://www.kaggle.com/lesibius/time-only-sv,"df_test.loc[:, ('Year')]","df_test.ix[:, ('Year')]",pd.DataFrame.loc,pd.DataFrame.ix
3,sf-crime,https://www.kaggle.com/lesibius/time-only-sv,"df_test.loc[:, ('Month')]","df_test.ix[:, ('Month')]",pd.DataFrame.loc,pd.DataFrame.ix
3,sf-crime,https://www.kaggle.com/dollardollar/importance-of-address-features,"data.loc[:, ('Address')]","data.ix[:, ('Address')]",pd.DataFrame.loc,pd.DataFrame.ix
3,sf-crime,https://www.kaggle.com/careyai/san-fran-crime,"test_data.loc[:, ('Address')]","test_data.ix[:, ('Address')]",pd.DataFrame.loc,pd.DataFrame.ix
3,sf-crime,https://www.kaggle.com/lesibius/naive-bayes-time-only,"df_test.loc[:, ('Hour')]","df_test.ix[:, ('Hour')]",pd.DataFrame.loc,pd.DataFrame.ix
3,sf-crime,https://www.kaggle.com/lesibius/naive-bayes-time-only,"df_train.loc[:, (['Year', 'Hour', 'Month', 'DayOfWeek'])]","df_train.ix[:, (['Year', 'Hour', 'Month', 'DayOfWeek'])]",pd.DataFrame.loc,pd.DataFrame.ix
3,sf-crime,https://www.kaggle.com/careyai/san-fran-crime,"test.loc[:, ('Address')]","test.ix[:, ('Address')]",pd.DataFrame.loc,pd.DataFrame.ix
3,sf-crime,https://www.kaggle.com/careyai/san-fran-crime,"train.loc[train.X > -122.32897987265702, 'X']","train.ix[train.X > -122.32897987265702, 'X']",pd.DataFrame.loc,pd.DataFrame.ix
3,sf-crime,https://www.kaggle.com/careyai/san-fran-crime,"test.loc[test.X > -122.32897987265702, 'X']","test.ix[test.X > -122.32897987265702, 'X']",pd.DataFrame.loc,pd.DataFrame.ix
3,sf-crime,https://www.kaggle.com/careyai/san-fran-crime,"train.loc[train.Y > 37.8801919977151, 'Y']","train.ix[train.Y > 37.8801919977151, 'Y']",pd.DataFrame.loc,pd.DataFrame.ix
3,shelter-animal-outcomes,https://www.kaggle.com/izzul02/age-gender-breed-and-name-vs-outcome,"df.loc[df['AnimalType'] == 'Cat', feature]","df.ix[df['AnimalType'] == 'Cat', feature]",pd.DataFrame.loc,pd.DataFrame.ix
3,shelter-animal-outcomes,https://www.kaggle.com/izzul02/age-gender-breed-and-name-vs-outcome,"df.loc[df['AnimalType'] == 'Dog', 'OutcomeType']","df.ix[df['AnimalType'] == 'Dog', 'OutcomeType']",pd.DataFrame.loc,pd.DataFrame.ix
3,shelter-animal-outcomes,https://www.kaggle.com/izzul02/age-gender-breed-and-name-vs-outcome,"df.loc[df['AnimalType'] == 'Cat', 'OutcomeType']","df.ix[df['AnimalType'] == 'Cat', 'OutcomeType']",pd.DataFrame.loc,pd.DataFrame.ix
3,shelter-animal-outcomes,https://www.kaggle.com/mhooreman/test-new-script,"tmp.loc[:, (['purityColor'])]","tmp.ix[:, (['purityColor'])]",pd.DataFrame.loc,pd.DataFrame.ix
3,shelter-animal-outcomes,https://www.kaggle.com/mhooreman/test-new-script,"tmp.loc[tmp[0] == 'Unknown', 'isMale']","tmp.ix[tmp[0] == 'Unknown', 'isMale']",pd.DataFrame.loc,pd.DataFrame.ix
3,shelter-animal-outcomes,https://www.kaggle.com/mhooreman/test-new-script,"tmp.loc[tmp[0] == 'Unknown', 'canReproduce']","tmp.ix[tmp[0] == 'Unknown', 'canReproduce']",pd.DataFrame.loc,pd.DataFrame.ix
3,shelter-animal-outcomes,https://www.kaggle.com/mhooreman/test-new-script,"tmp.loc[tmp[1].isin(('day', 'days')), 'years']","tmp.ix[tmp[1].isin(('day', 'days')), 'years']",pd.DataFrame.loc,pd.DataFrame.ix
3,shelter-animal-outcomes,https://www.kaggle.com/mhooreman/test-new-script,"tmp.loc[tmp[1].isin(('month', 'months')), 'years']","tmp.ix[tmp[1].isin(('month', 'months')), 'years']",pd.DataFrame.loc,pd.DataFrame.ix
3,shelter-animal-outcomes,https://www.kaggle.com/mhooreman/test-new-script,"tmp.loc[:, (['nColors'])]","tmp.ix[:, (['nColors'])]",pd.DataFrame.loc,pd.DataFrame.ix
3,shelter-animal-outcomes,https://www.kaggle.com/mhooreman/test-new-script,"tmp.loc[tmp[1].isin(('week', 'weeks')), 'years']","tmp.ix[tmp[1].isin(('week', 'weeks')), 'years']",pd.DataFrame.loc,pd.DataFrame.ix
3,shelter-animal-outcomes,https://www.kaggle.com/mhooreman/test-new-script,"tmp.loc[:, (['purityBreeds', 'mixityBreeds'])]","tmp.ix[:, (['purityBreeds', 'mixityBreeds'])]",pd.DataFrame.loc,pd.DataFrame.ix
3,shelter-animal-outcomes,https://www.kaggle.com/mhooreman/test-new-script,"tmp.loc[:, (['nBreeds'])]","tmp.ix[:, (['nBreeds'])]",pd.DataFrame.loc,pd.DataFrame.ix
3,springleaf-marketing-response,https://www.kaggle.com/wawanco/data-ownership-numeric-features,"train.loc[train.VAR_1174 == 0, 'VAR_1174']","train.ix[train.VAR_1174 == 0, 'VAR_1174']",pd.DataFrame.loc,pd.DataFrame.ix
3,talkingdata-mobile-user-demographics,https://www.kaggle.com/zeroblue/xgb-boost-with-event-data,"df_phone.loc[df_phone['device_id'].isin(infrequent), 'device_model']","df_phone.ix[df_phone['device_id'].isin(infrequent), 'device_model']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/anirban00727/titanic-survival-chances-prediction,"grouped_median.loc['female', 1, 'Mrs']","grouped_median.ix['female', 1, 'Mrs']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/olttwa/titanic-logistic-regression-v1,"train.loc[train['Embarked'] == 'S', 'Embarked']","train.ix[train['Embarked'] == 'S', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/leblondmorgan/titanic-machine-learning,"test_df.loc[test_df['Sex'] == 'male', 'Sex']","test_df.ix[test_df['Sex'] == 'male', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/utsavpatel/titanic-test,"titanic.loc[titanic['Pclass'] == 2, 'Pclass']","titanic.ix[titanic['Pclass'] == 2, 'Pclass']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/utsavpatel/titanic-test,"titanic.loc[titanic['Pclass'] == 1, 'Pclass']","titanic.ix[titanic['Pclass'] == 1, 'Pclass']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/yashduvvuru/pytanic,"train.loc[:, (['Cader', 'FamilyId'])]","train.ix[:, (['Cader', 'FamilyId'])]",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/olttwa/titanic-logistic-regression-v1,"train.loc[train['Sex'] == 'female', 'Sex']","train.ix[train['Sex'] == 'female', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sinanalb/test-titanic,"dataset.loc[(dataset['Age'] >= 0) & (dataset['Age'] <= 5), 'Age']","dataset.ix[(dataset['Age'] >= 0) & (dataset['Age'] <= 5), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sakenk/random-forest,"ttest.loc[ttest['Embarked'] == 'C', 'Embarked']","ttest.ix[ttest['Embarked'] == 'C', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/timur008/newscript,"dataset.loc[dataset['Sex'] == 'female', 'Sex']","dataset.ix[dataset['Sex'] == 'female', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/ypcfirst/titanic-model-using-logistic-regression,"train.loc[train['Embarked'] == 'C', 'Embarked']","train.ix[train['Embarked'] == 'C', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/bhavesh09/titanicsurvivalprediction,"test.loc[(test['Age'] > 56) & (test['Age'] <= 70), 'Age']","test.ix[(test['Age'] > 56) & (test['Age'] <= 70), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/laparrala/first,"data.loc[data.Fare > bin_max, 'Fare']","data.ix[data.Fare > bin_max, 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/mschou/titanic001,"titanic.loc[titanic['Sex'] == 'female', 'Sex']","titanic.ix[titanic['Sex'] == 'female', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/agarwalsneha/linear-svm-with-feature-engineering,"test.loc[test['Fare'] == 0, 'Fare_norm']","test.ix[test['Fare'] == 0, 'Fare_norm']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/angadp/trying-for-top-10,"dataset.loc[dataset['Age'] > 64, 'Age']","dataset.ix[dataset['Age'] > 64, 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/daniglezl/main-1-py,"test.loc[test.Fare.isnull() & (test.Pclass == f + 1), 'Fare']","test.ix[test.Fare.isnull() & (test.Pclass == f + 1), 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/anishanalytics/oscar-wala-actor-leo,"data.loc[data.Embarked == 'C', 'Embarked']","data.ix[data.Embarked == 'C', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/ypcfirst/titanic-model-using-logistic-regression,"test.loc[test['Sex'] == 'female', 'Sex']","test.ix[test['Sex'] == 'female', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/bineetranjan/gbt-classification,"df.loc[df['Embarked'] == 'C', 'Embarked']","df.ix[df['Embarked'] == 'C', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/cooleel/a-quick-try-of-h2o-automl-on-titanic-dataset,"data.loc[data.Cabin.str[0] == 'C', 'Cabin']","data.ix[data.Cabin.str[0] == 'C', 'Cabin']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sjtreadway/titanic-prediction,"dataset.loc[(dataset['Fare'] > 30) & (dataset['Fare'] <= 100), 'Fare']","dataset.ix[(dataset['Fare'] > 30) & (dataset['Fare'] <= 100), 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/abrierly/explore-titanic-python,"test2.loc[test['Sex'] == 'male', 'Sex']","test2.ix[test['Sex'] == 'male', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/anirban00727/titanic-survival-chances-prediction,"grouped_median.loc['male', 3, 'Mr']","grouped_median.ix['male', 3, 'Mr']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/journeycheng/script-py,"test_df.loc[test_df.Age.isnull() & (test_df.Gender == f), 'Age']","test_df.ix[test_df.Age.isnull() & (test_df.Gender == f), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/ldj6692240/titanicxgboostscript,"grouped_median.loc['female', 2, 'Miss']","grouped_median.ix['female', 2, 'Miss']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/cooleel/a-quick-try-of-h2o-automl-on-titanic-dataset,"data.loc[data.Cabin.str[0] == 'E', 'Cabin']","data.ix[data.Cabin.str[0] == 'E', 'Cabin']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/abrierly/explore-titanic-python,"train2.loc[train['Sex'] == 'female', 'Sex']","train2.ix[train['Sex'] == 'female', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/jeolas/id-survived,"titanic_test.loc[titanic_test['Sex'] == 'male', 'Sex']","titanic_test.ix[titanic_test['Sex'] == 'male', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/clararnoux/titanic-not-failing,"titanic_train.loc[titanic_train['Embarked'] == 'S', 'Embarked']","titanic_train.ix[titanic_train['Embarked'] == 'S', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/anishanalytics/oscar-wala-actor-leo,"data.loc[data.Cabin.str[0] == 'B', 'Cabin']","data.ix[data.Cabin.str[0] == 'B', 'Cabin']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/abrierly/explore-titanic-python,"train2.loc[train['Embarked'] == 'C', 'Embarked']","train2.ix[train['Embarked'] == 'C', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/cooleel/a-quick-try-of-h2o-automl-on-titanic-dataset,"data.loc[data.Cabin.str[0] == 'T', 'Cabin']","data.ix[data.Cabin.str[0] == 'T', 'Cabin']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/fromage0/testtest,"data.loc[data.Sex == 'male', 'Sex']","data.ix[data.Sex == 'male', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/fromage0/testtest,"data.loc[data.Embarked == 'S', 'Embarked']","data.ix[data.Embarked == 'S', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/hawkinsliam/simple-random-forest,"dfFeatures.loc[(dfFeatures['Age'] > 32) & (dfFeatures['Age'] <= 48), 'Age']","dfFeatures.ix[(dfFeatures['Age'] > 32) & (dfFeatures['Age'] <= 48), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/bhavesh09/titanicsurvivalprediction,"train.loc[train['Age'] > 70, 'Age']","train.ix[train['Age'] > 70, 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/ldj6692240/titanicxgboostscript,"grouped_median.loc['male', 2, 'Mr']","grouped_median.ix['male', 2, 'Mr']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/abrierly/explore-titanic-python,"test2.loc[test['Embarked'] == 'Q', 'Embarked']","test2.ix[test['Embarked'] == 'Q', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/bhavesh09/titanicsurvivalprediction,"train.loc[(train['Age'] > 28) & (train['Age'] <= 42), 'Age']","train.ix[(train['Age'] > 28) & (train['Age'] <= 42), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/omijn1/titanic-survivor-prediction,"X_test.loc[:, (['Embarked'])]","X_test.ix[:, (['Embarked'])]",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/ypcfirst/titanic-model-using-logistic-regression,"test.loc[test['Embarked'] == 'Q', 'Embarked']","test.ix[test['Embarked'] == 'Q', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/bhavesh09/titanicsurvivalprediction,"test.loc[test['Age'] > 70, 'Age']","test.ix[test['Age'] > 70, 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/abrierly/nn-approach,"train.loc[r, 'Name']","train.ix[r, 'Name']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/jtson1213/titanic-decision-tree-classifier,"dataset.loc[dataset['Parch'] != 0, 'Parch']","dataset.ix[dataset['Parch'] != 0, 'Parch']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/jtson1213/titanic-decision-tree-classifier,"dataset.loc[(dataset['Fare'] > 31) & (dataset['Fare'] <= 69.487), 'Fare']","dataset.ix[(dataset['Fare'] > 31) & (dataset['Fare'] <= 69.487), 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/anirban00727/titanic-survival-chances-prediction,"grouped_median.loc['female', 1, 'Royalty']","grouped_median.ix['female', 1, 'Royalty']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/gunjan17/mytitanicsolution,"new_train.loc[new_train['Sex'] == 'female', 'Sex']","new_train.ix[new_train['Sex'] == 'female', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/lostking91/titanic,"test.loc[test['Cabin'] != 'N', 'Cabin']","test.ix[test['Cabin'] != 'N', 'Cabin']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/thebrocean/benchmarking-random-forests,"df.loc[passenger, 'Fare']","df.ix[passenger, 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/jtson1213/titanic-decision-tree-classifier,"dataset.loc[(dataset['Fare'] > 7.91) & (dataset['Fare'] <= 9.841), 'Fare']","dataset.ix[(dataset['Fare'] > 7.91) & (dataset['Fare'] <= 9.841), 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/rcasellas/ensemble-stacking-with-et-script,"df.loc[(df['Age'] > 32) & (df['Age'] <= 48), 'Age']","df.ix[(df['Age'] > 32) & (df['Age'] <= 48), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/bhavesh09/onemoremodel,"c.loc[(c['Fare'] > 25) & (c['Fare'] <= 55), 'FareB']","c.ix[(c['Fare'] > 25) & (c['Fare'] <= 55), 'FareB']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/angadp/trying-for-top-10,"dataset.loc[dataset['Fare'] > 31, 'Fare']","dataset.ix[dataset['Fare'] > 31, 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/andyxie/titanic-xgboost,"data['test'].loc[:, ('Cabin')]","data['test'].ix[:, ('Cabin')]",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/utsavpatel/titanic-test,"titanic.loc[titanic['Pclass'] == 3, 'Survived']","titanic.ix[titanic['Pclass'] == 3, 'Survived']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/timur008/newscript,"dataset.loc[dataset['Embarked'] == 'C', 'Embarked']","dataset.ix[dataset['Embarked'] == 'C', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/leblondmorgan/titanic-machine-learning,"test_df.loc[test_df['Embarked'] == 'S', 'Embarked']","test_df.ix[test_df['Embarked'] == 'S', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/lostking91/titanic,"test.loc[test['Cabin'] == 'N', 'Cabin']","test.ix[test['Cabin'] == 'N', 'Cabin']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/journeycheng/script-py,"train_df.loc[train_df.Age.isnull() & (train_df.Gender == f), 'Age']","train_df.ix[train_df.Age.isnull() & (train_df.Gender == f), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/angadp/trying-for-top-10,"dataset.loc[dataset['Fare'] <= 7.91, 'Fare']","dataset.ix[dataset['Fare'] <= 7.91, 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/bhavesh09/titanicsurvivalprediction,"test.loc[test['Age'] <= 14, 'Age']","test.ix[test['Age'] <= 14, 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/dujianjun79/titanic-machine-learing,"test.loc[test.Sex == 'female', 'Sex']","test.ix[test.Sex == 'female', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/utsavpatel/titanic-test,"titanic.loc[titanic['Pclass'] == 1, 'Survived']","titanic.ix[titanic['Pclass'] == 1, 'Survived']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/ypcfirst/titanic-model-using-logistic-regression,"train.loc[train['Embarked'] == 'Q', 'Embarked']","train.ix[train['Embarked'] == 'Q', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/alpoza/test-titanic,"titanic.loc[titanic['Embarked'] == 'C', 'Embarked']","titanic.ix[titanic['Embarked'] == 'C', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/anirban00727/titanic-survival-chances-prediction,"grouped_median.loc['male', 1, 'Master']","grouped_median.ix['male', 1, 'Master']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/cooleel/a-quick-try-of-h2o-automl-on-titanic-dataset,"data.loc[data.Cabin.str[0] == 'F', 'Cabin']","data.ix[data.Cabin.str[0] == 'F', 'Cabin']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/jtson1213/titanic-decision-tree-classifier,"dataset.loc[dataset['Age'] > 39, 'Age']","dataset.ix[dataset['Age'] > 39, 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/gilsonfaria/script4-boolsibsp-parch,"test.loc[x[0], 'Sex']","test.ix[x[0], 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/anirban00727/titanic-survival-chances-prediction,"grouped_median.loc['male', 1, 'Royalty']","grouped_median.ix['male', 1, 'Royalty']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/yashduvvuru/pytanic,"train.loc[:, ('Pclass')]","train.ix[:, ('Pclass')]",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/abrierly/explore-titanic-python,"test2.loc[test['Embarked'] == 'C', 'Embarked']","test2.ix[test['Embarked'] == 'C', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/abrierly/nn-approach,"train.loc[r, 'Title']","train.ix[r, 'Title']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/anirban00727/titanic-survival-chances-prediction,"grouped_median.loc['male', 3, 'Master']","grouped_median.ix['male', 3, 'Master']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/lostking91/titanic,"test.loc[test['Sex'] == 'male', 'Sex']","test.ix[test['Sex'] == 'male', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/zgo2016/titanic-logistic-regression,"test.loc[test['Embarked'] == 'S', 'Embarked']","test.ix[test['Embarked'] == 'S', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/canran/titanic-rf,"X_df.loc[:, ('Embarked')]","X_df.ix[:, ('Embarked')]",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/utsavpatel/titanic-test,"titanic_test.loc[titanic_test['Embarked'] == 'C', 'Embarked']","titanic_test.ix[titanic_test['Embarked'] == 'C', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/omijn1/titanic-survivor-prediction,"X_train.loc[:, (['Fare'])]","X_train.ix[:, (['Fare'])]",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/adrianspataru/first-submission,"test.loc[test['Embarked'] == 'C', 'Embarked']","test.ix[test['Embarked'] == 'C', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/vicbap/titanic,"df.loc[df.Fare.isnull() & (df.Gender == i) & (df.Pclass == j + 1), 'Fare']","df.ix[df.Fare.isnull() & (df.Gender == i) & (df.Pclass == j + 1), 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/journeycheng/script-py,"test_df.loc[test_df.Fare.isnull() & (test_df.Pclass == f + 1), 'Fare']","test_df.ix[test_df.Fare.isnull() & (test_df.Pclass == f + 1), 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/rohitagarwal/attempt-number-1,"total.loc[total['FamilySizeCategories'] == 1, 'FamilySizeCategories']","total.ix[total['FamilySizeCategories'] == 1, 'FamilySizeCategories']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/fromage0/testtest,"data.loc[data.Cabin.str[0] == 'A', 'Cabin']","data.ix[data.Cabin.str[0] == 'A', 'Cabin']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/daniglezl/main-5-py,"train.loc[train.Fare.isnull() & (train.Pclass == f + 1), 'Fare']","train.ix[train.Fare.isnull() & (train.Pclass == f + 1), 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/clararnoux/titanic-not-failing,"titanic_train.loc[titanic_train['Embarked'] == 'C', 'Embarked']","titanic_train.ix[titanic_train['Embarked'] == 'C', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/cast42/xgboost-example-python,"train_df.loc[train_df['Embarked'] == 'C', 'Embarked']","train_df.ix[train_df['Embarked'] == 'C', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sinanalb/test-titanic,"dataset.loc[(dataset['Age'] > 35) & (dataset['Age'] <= 50), 'Age']","dataset.ix[(dataset['Age'] > 35) & (dataset['Age'] <= 50), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sergioortiz/titanic-competition-script-1,"Xdf.loc[Xdf['Fare'] > 31, 'Fare']","Xdf.ix[Xdf['Fare'] > 31, 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sinanalb/test-titanic,"dataset.loc[(dataset['Fare'] > 14.454) & (dataset['Fare'] <= 31), 'Fare']","dataset.ix[(dataset['Fare'] > 14.454) & (dataset['Fare'] <= 31), 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/cooleel/a-quick-try-of-h2o-automl-on-titanic-dataset,"data.loc[data.Cabin.str[0] == 'G', 'Cabin']","data.ix[data.Cabin.str[0] == 'G', 'Cabin']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/angadp/trying-for-top-10,"dataset.loc[(dataset['Fare'] > 7.91) & (dataset['Fare'] <= 14.454), 'Fare']","dataset.ix[(dataset['Fare'] > 7.91) & (dataset['Fare'] <= 14.454), 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/ldj6692240/titanicxgboostscript,"grouped_median.loc['female', 2, 'Mrs']","grouped_median.ix['female', 2, 'Mrs']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/ldj6692240/titanicxgboostscript,"grouped_median.loc['male', 1, 'Mr']","grouped_median.ix['male', 1, 'Mr']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/bhavesh09/onemoremodel,"c.loc[c['Fare'] > 55, 'FareB']","c.ix[c['Fare'] > 55, 'FareB']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/abrierly/explore-titanic-python,"test2.loc[test['Sex'] == 'female', 'Sex']","test2.ix[test['Sex'] == 'female', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/dexter22/testing,"train.loc[train['Fare'] <= 7.91, 'Fare']","train.ix[train['Fare'] <= 7.91, 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/jtson1213/titanic-decision-tree-classifier,"dataset.loc[(dataset['Age'] > 9) & (dataset['Age'] <= 19), 'Age']","dataset.ix[(dataset['Age'] > 9) & (dataset['Age'] <= 19), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/bhavesh09/onemoremodel,"c.loc[c['Age'] <= 16, 'Sex']","c.ix[c['Age'] <= 16, 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/dujianjun79/titanic-machine-learing,"titanic.loc[titanic.Sex == 'female', 'Sex']","titanic.ix[titanic.Sex == 'female', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/cooleel/a-quick-try-of-h2o-automl-on-titanic-dataset,"data.loc[data.Name.str.contains('Mr.', regex=False), 'Prefix']","data.ix[data.Name.str.contains('Mr.', regex=False), 'Prefix']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sergioortiz/titanic-competition-script-1,"Xdf.loc[(Xdf['Fare'] > 7.91) & (Xdf['Fare'] <= 14.454), 'Fare']","Xdf.ix[(Xdf['Fare'] > 7.91) & (Xdf['Fare'] <= 14.454), 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/bhavesh09/titanicsurvivalprediction,"test.loc[(test['Age'] > 42) & (test['Age'] <= 56), 'Age']","test.ix[(test['Age'] > 42) & (test['Age'] <= 56), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/brandymat/titanic-kernel-test,"data.loc[data['Title'] == 'Mrs', 'Age']","data.ix[data['Title'] == 'Mrs', 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/bhavesh09/titanicsurvivalprediction,"test.loc[(test['Age'] > 28) & (test['Age'] <= 42), 'Age']","test.ix[(test['Age'] > 28) & (test['Age'] <= 42), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sinanalb/test-titanic,"dataset.loc[dataset['Age'] > 120, 'Age']","dataset.ix[dataset['Age'] > 120, 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/lostking91/titanic,"train.loc[train['Cabin'] == 'N', 'Cabin']","train.ix[train['Cabin'] == 'N', 'Cabin']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sodanuo/fork-dataquest,"dataset.loc[dataset['Embarked'] == 'Q', 'Embarked']","dataset.ix[dataset['Embarked'] == 'Q', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/yashduvvuru/pytanic,"train.loc[:, ('Age')]","train.ix[:, ('Age')]",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/ldj6692240/titanicxgboostscript,"grouped_median.loc['female', 3, 'Mrs']","grouped_median.ix['female', 3, 'Mrs']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sergioortiz/titanic-competition-script-1,"Xdf.loc[(Xdf['Fare'] > 14.454) & (Xdf['Fare'] <= 31), 'Fare']","Xdf.ix[(Xdf['Fare'] > 14.454) & (Xdf['Fare'] <= 31), 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/gunjan17/mytitanicsolution,"new_train.loc[new_train['Embarked'] == 'C', 'Embarked']","new_train.ix[new_train['Embarked'] == 'C', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/ldj6692240/titanicxgboostscript,"grouped_median.loc['female', 1, 'Miss']","grouped_median.ix['female', 1, 'Miss']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/kotaroito/titanic,"train_df.loc[train_df.Age.isnull(), 'Age']","train_df.ix[train_df.Age.isnull(), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/fromage0/testtest,"data.loc[data.Embarked == 'Q', 'Embarked']","data.ix[data.Embarked == 'Q', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/brandymat/titanic-kernel-test,"data.loc[data['Title'] == 'Master', 'Age']","data.ix[data['Title'] == 'Master', 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/jeolas/id-survived,"titanic_test.loc[titanic_test['Embarked'] == 'Q', 'Embarked']","titanic_test.ix[titanic_test['Embarked'] == 'Q', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/bhavesh09/titanicsurvivalprediction,"train.loc[(train['Age'] > 42) & (train['Age'] <= 56), 'Age']","train.ix[(train['Age'] > 42) & (train['Age'] <= 56), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sinanalb/test-titanic,"dataset.loc[(dataset['Age'] > 5) & (dataset['Age'] <= 12), 'Age']","dataset.ix[(dataset['Age'] > 5) & (dataset['Age'] <= 12), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/brandymat/titanic-kernel-test,"data.loc[data['Title'] == 'Mr', 'Age']","data.ix[data['Title'] == 'Mr', 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/dexter22/testing,"train.loc[train['Fare'] > 31, 'Fare']","train.ix[train['Fare'] > 31, 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/brandymat/titanic-kernel-test,"data.loc[data['Title'] == 'Miss', 'Age']","data.ix[data['Title'] == 'Miss', 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/ldj6692240/titanicxgboostscript,"grouped_median.loc['male', 2, 'Officer']","grouped_median.ix['male', 2, 'Officer']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/brandymat/titanic-kernel-test,"data.loc[data['Title'] == 'Ms', 'Age']","data.ix[data['Title'] == 'Ms', 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sjtreadway/titanic-prediction,"dataset.loc[(dataset['Fare'] > 17) & (dataset['Fare'] <= 30), 'Fare']","dataset.ix[(dataset['Fare'] > 17) & (dataset['Fare'] <= 30), 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/fromage0/testtest,"data.loc[data.Cabin.str[0] == 'D', 'Cabin']","data.ix[data.Cabin.str[0] == 'D', 'Cabin']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/gilsonfaria/script4-boolsibsp-parch,"train.loc[x[0], 'Sex']","train.ix[x[0], 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sinanalb/test-titanic,"dataset.loc[(dataset['Age'] > 18) & (dataset['Age'] <= 25), 'Age']","dataset.ix[(dataset['Age'] > 18) & (dataset['Age'] <= 25), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/jtson1213/titanic-decision-tree-classifier,"dataset.loc[dataset['SibSp'] == 0, 'SibSp']","dataset.ix[dataset['SibSp'] == 0, 'SibSp']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/andyxie/titanic-xgboost,"data['test'].loc[:, (col)]","data['test'].ix[:, (col)]",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sergioortiz/titanic-competition-script-1,"Xdf.loc[Xdf['Fare'] <= 7.91, 'Fare']","Xdf.ix[Xdf['Fare'] <= 7.91, 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/tedspikes/titanic-test,"test.loc[:, (['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare'])]","test.ix[:, (['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare'])]",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/dexter22/testing,"train.loc[(train['Fare'] > 14.454) & (train['Fare'] <= 31), 'Fare']","train.ix[(train['Fare'] > 14.454) & (train['Fare'] <= 31), 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/buzzolord/kappavoid-testing,"dataset.loc[(dataset['Age'] > 48) & (dataset['Age'] <= 64), 'Age']","dataset.ix[(dataset['Age'] > 48) & (dataset['Age'] <= 64), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/anirban00727/titanic-survival-chances-prediction,"grouped_median.loc['female', 1, 'Officer']","grouped_median.ix['female', 1, 'Officer']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/yashduvvuru/pytanic,"train.loc[train.Sex == 'male', 'Gender']","train.ix[train.Sex == 'male', 'Gender']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/piplimoon/leaderboard-0-8134,df_combo.loc[len(titanic_train['Survived']):],df_combo.ix[len(titanic_train['Survived']):],pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/leblondmorgan/titanic-machine-learning,"test_df.loc[test_df['Sex'] == 'female', 'Sex']","test_df.ix[test_df['Sex'] == 'female', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/abrierly/explore-titanic-python,"train2.loc[train['Embarked'] == 'S', 'Embarked']","train2.ix[train['Embarked'] == 'S', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/ldj6692240/titanicxgboostscript,"grouped_median.loc['male', 1, 'Officer']","grouped_median.ix['male', 1, 'Officer']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/journeycheng/script-py,"test_df.loc[test_df.Age.isnull() & (f == test_df.Title), 'Age']","test_df.ix[test_df.Age.isnull() & (f == test_df.Title), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sinanalb/test-titanic,"dataset.loc[(dataset['Age'] > 12) & (dataset['Age'] <= 18), 'Age']","dataset.ix[(dataset['Age'] > 12) & (dataset['Age'] <= 18), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/leblondmorgan/titanic-machine-learning,"test_df.loc[test_df['Embarked'] == 'C', 'Embarked']","test_df.ix[test_df['Embarked'] == 'C', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/lindenlu/linden-titanic-script,"train_df.loc[train_df.Embarked.isnull(), 'Name']","train_df.ix[train_df.Embarked.isnull(), 'Name']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/rcasellas/ensemble-stacking-with-et-script,"df.loc[df['Age'] <= 16, 'Age']","df.ix[df['Age'] <= 16, 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/unlikelybutpossible/logistic,"dataset.loc[dataset['Age'] <= 16, 'Age']","dataset.ix[dataset['Age'] <= 16, 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/bhavesh09/titanicsurvivalprediction,"test.loc[(test['Age'] > 14) & (test['Age'] <= 28), 'Age']","test.ix[(test['Age'] > 14) & (test['Age'] <= 28), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/felsiq/some-amateurish-full-titanic-data-process,"data_frame.loc[data_frame['Fare'].isnull(), 'Fare']","data_frame.ix[data_frame['Fare'].isnull(), 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sachin13/titanic,"data.loc[data['Fare'].isnull() & (data['Pclass'] == i), 'Fare']","data.ix[data['Fare'].isnull() & (data['Pclass'] == i), 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/rohitagarwal/attempt-number-1,"total.loc[total['Embarked'].isnull(), 'Embarked']","total.ix[total['Embarked'].isnull(), 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/clararnoux/titanic-not-failing,"titanic_train.loc[titanic_train['Sex'] == 'male', 'Sex']","titanic_train.ix[titanic_train['Sex'] == 'male', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/bineetranjan/gbt-classification,"df.loc[df['Embarked'] == 'Q', 'Embarked']","df.ix[df['Embarked'] == 'Q', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/shitalsawant/liner-svm-two-variables-py,"dataset.loc[(dataset['Age'] > 32) & (dataset['Age'] <= 48), 'Age']","dataset.ix[(dataset['Age'] > 32) & (dataset['Age'] <= 48), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/jtson1213/titanic-decision-tree-classifier,"dataset.loc[(dataset['Fare'] > 14.454) & (dataset['Fare'] <= 24.479), 'Fare']","dataset.ix[(dataset['Fare'] > 14.454) & (dataset['Fare'] <= 24.479), 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/jtson1213/titanic-decision-tree-classifier,"dataset.loc[(dataset['Age'] > 19) & (dataset['Age'] <= 29), 'Age']","dataset.ix[(dataset['Age'] > 19) & (dataset['Age'] <= 29), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/andyxie/titanic-xgboost,"data['train'].loc[(61, 829), 'Embarked']","data['train'].ix[(61, 829), 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/abrierly/nn-approach,"test.loc[r, 'Name']","test.ix[r, 'Name']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/cast42/xgboost-example-python,"test_df.loc[test_df['Embarked'] == 'Q', 'Embarked']","test_df.ix[test_df['Embarked'] == 'Q', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/daniglezl/main-1-py,"test.loc[test.Age.isnull(), 'Age']","test.ix[test.Age.isnull(), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/robdias/predictfy-titanic-survival,"t_train.loc[t_train['Embarked'] == 'Q', 'Embarked']","t_train.ix[t_train['Embarked'] == 'Q', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sergioortiz/titanic-competition-script-1,"Xdf.loc[(Xdf['Age'] > 48) & (Xdf['Age'] <= 64), 'Age']","Xdf.ix[(Xdf['Age'] > 48) & (Xdf['Age'] <= 64), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/abrierly/nn-approach,"test.loc[152, 'Fare']","test.ix[152, 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/ldj6692240/titanicxgboostscript,"grouped_median.loc['female', 3, 'Miss']","grouped_median.ix['female', 3, 'Miss']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sergioortiz/titanic-competition-script-1,"Xdf.loc[(Xdf['Age'] > 32) & (Xdf['Age'] <= 48), 'Age']","Xdf.ix[(Xdf['Age'] > 32) & (Xdf['Age'] <= 48), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/buzzolord/kappavoid-testing,"dataset.loc[(dataset['Age'] > 5) & (dataset['Age'] <= 16), 'Age']","dataset.ix[(dataset['Age'] > 5) & (dataset['Age'] <= 16), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sinanalb/test-titanic,"dataset.loc[(dataset['Age'] > 25) & (dataset['Age'] <= 35), 'Age']","dataset.ix[(dataset['Age'] > 25) & (dataset['Age'] <= 35), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/rcasellas/ensemble-stacking-with-et-script,"df.loc[df['Age'] > 64, 'Age']","df.ix[df['Age'] > 64, 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/bineetranjan/gbt-classification,"df.loc[df['Embarked'] == 'S', 'Embarked']","df.ix[df['Embarked'] == 'S', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/cast42/xgboost-example-python,"test_df.loc[test_df['Age'].isnull(), 'Age']","test_df.ix[test_df['Age'].isnull(), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/bhavesh09/titanicsurvivalprediction,"train.loc[(train['Age'] > 56) & (train['Age'] <= 70), 'Age']","train.ix[(train['Age'] > 56) & (train['Age'] <= 70), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/cast42/xgboost-example-python,"train_df.loc[train_df['Embarked'] == 'Q', 'Embarked']","train_df.ix[train_df['Embarked'] == 'Q', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sjtreadway/titanic-prediction,"dataset.loc[dataset['Fare'] <= 17, 'Fare']","dataset.ix[dataset['Fare'] <= 17, 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/piplimoon/leaderboard-0-8134,"df_combo.loc[:, ('TicketGrp')]","df_combo.ix[:, ('TicketGrp')]",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/jtson1213/titanic-decision-tree-classifier,"dataset.loc[(dataset['Fare'] > 9.841) & (dataset['Fare'] <= 14.454), 'Fare']","dataset.ix[(dataset['Fare'] > 9.841) & (dataset['Fare'] <= 14.454), 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sjtreadway/titanic-prediction,"dataset.loc[dataset['Fare'] > 100, 'Fare']","dataset.ix[dataset['Fare'] > 100, 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/gunjan17/mytitanicsolution,"new_train.loc[new_train['Embarked'] == 'S', 'Embarked']","new_train.ix[new_train['Embarked'] == 'S', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/ldj6692240/titanicxgboostscript,"grouped_median.loc['male', 2, 'Master']","grouped_median.ix['male', 2, 'Master']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/adiamb/titanic-survival-my-way,"all_data2.loc[all_data2.Age.isnull(), 'Age']","all_data2.ix[all_data2.Age.isnull(), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/hawkinsliam/simple-random-forest,"dfFeatures.loc[dfFeatures['Age'] <= 16, 'Age']","dfFeatures.ix[dfFeatures['Age'] <= 16, 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/devinodsa/titanic,"full.loc[full.PassengerId == 1284, ['SibSp', 'Parch']]","full.ix[full.PassengerId == 1284, ['SibSp', 'Parch']]",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/kingarthurie/titanik-rdf,"data.loc[data['Sex'] == 'female', 'Sex']","data.ix[data['Sex'] == 'female', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/rcasellas/ensemble-stacking-with-et-script,"df.loc[(df['Age'] > 48) & (df['Age'] <= 64), 'Age']","df.ix[(df['Age'] > 48) & (df['Age'] <= 64), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/felsiq/some-amateurish-full-titanic-data-process,"data_frame.loc[data_frame['Age'].isnull(), 'Age']","data_frame.ix[data_frame['Age'].isnull(), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/jtson1213/titanic-decision-tree-classifier,"dataset.loc[dataset['Fare'] <= 7.75, 'Fare']","dataset.ix[dataset['Fare'] <= 7.75, 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/utsavpatel/titanic-test,"titanic.loc[titanic['Pclass'] == 2, 'Survived']","titanic.ix[titanic['Pclass'] == 2, 'Survived']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sinanalb/test-titanic,"dataset.loc[(dataset['Age'] > 50) & (dataset['Age'] <= 60), 'Age']","dataset.ix[(dataset['Age'] > 50) & (dataset['Age'] <= 60), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/zgo2016/titanic-logistic-regression,"train.loc[train['Sex'] == 1, 'Sex']","train.ix[train['Sex'] == 1, 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/jtson1213/titanic-decision-tree-classifier,"dataset.loc[dataset['Fare'] > 69.487, 'Fare']","dataset.ix[dataset['Fare'] > 69.487, 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/mldm16fe/mytest051603,"testData.loc[testData.Age.isnull(), 'modAge']","testData.ix[testData.Age.isnull(), 'modAge']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sergioortiz/titanic-competition-script-1,"Xdf.loc[(Xdf['Age'] > 16) & (Xdf['Age'] <= 32), 'Age']","Xdf.ix[(Xdf['Age'] > 16) & (Xdf['Age'] <= 32), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/kotaroito/titanic,"test_df.loc[test_df.Age.isnull(), 'Age']","test_df.ix[test_df.Age.isnull(), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/anjuram25/titanic-ramanujamallam,"dataset.loc[dataset['FamilySize'] > 0, 'Family']","dataset.ix[dataset['FamilySize'] > 0, 'Family']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/hawkinsliam/simple-random-forest,"dfFeatures.loc[(dfFeatures['Age'] > 48) & (dfFeatures['Age'] <= 64), 'Age']","dfFeatures.ix[(dfFeatures['Age'] > 48) & (dfFeatures['Age'] <= 64), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sodanuo/fork-dataquest,"dataset.loc[dataset['Embarked'] == 'S', 'Embarked']","dataset.ix[dataset['Embarked'] == 'S', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/gunjan17/mytitanicsolution,"new_train.loc[new_train['Embarked'] == 'Q', 'Embarked']","new_train.ix[new_train['Embarked'] == 'Q', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/jtson1213/titanic-decision-tree-classifier,"dataset.loc[dataset['Parch'] == 0, 'Parch']","dataset.ix[dataset['Parch'] == 0, 'Parch']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/jtson1213/titanic-decision-tree-classifier,"dataset.loc[(dataset['Age'] > 29) & (dataset['Age'] <= 39), 'Age']","dataset.ix[(dataset['Age'] > 29) & (dataset['Age'] <= 39), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sakenk/random-forest,"ttest.loc[ttest['Sex'] == 'female', 'Sex']","ttest.ix[ttest['Sex'] == 'female', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/yashduvvuru/pytanic,"train.loc[:, ('Fare')]","train.ix[:, ('Fare')]",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/bwboerman/a-quick-dive-into-h2o-with-python,"fullData.loc[fullData.TicketDiffFares > 1, 'TicketFare']","fullData.ix[fullData.TicketDiffFares > 1, 'TicketFare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/omijn1/titanic-survivor-prediction,"X_train.loc[:, (['Embarked'])]","X_train.ix[:, (['Embarked'])]",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/leblondmorgan/titanic-machine-learning,"train_df.loc[train_df['Sex'] == 'female', 'Sex']","train_df.ix[train_df['Sex'] == 'female', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/omijn1/titanic-survivor-prediction,"X_test.loc[:, (['Age'])]","X_test.ix[:, (['Age'])]",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/mschou/titanic001,"titanic.loc[titanic['Sex'] == 0, 'Age']","titanic.ix[titanic['Sex'] == 0, 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sakenk/random-forest,"ttest.loc[ttest['Embarked'] == 'S', 'Embarked']","ttest.ix[ttest['Embarked'] == 'S', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/jtson1213/titanic-decision-tree-classifier,"dataset.loc[(dataset['Fare'] > 24.479) & (dataset['Fare'] <= 31), 'Fare']","dataset.ix[(dataset['Fare'] > 24.479) & (dataset['Fare'] <= 31), 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/abrierly/nn-approach,"test.loc[:, ('Fare')]","test.ix[:, ('Fare')]",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/cooleel/a-quick-try-of-h2o-automl-on-titanic-dataset,"data.loc[data.Name.str.contains('Mrs.', regex=False), 'Prefix']","data.ix[data.Name.str.contains('Mrs.', regex=False), 'Prefix']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sergioortiz/titanic-competition-script-1,"Xdf.loc[Xdf['Age'] > 64, 'Age']","Xdf.ix[Xdf['Age'] > 64, 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/srinisid/test1,"df_test.loc[df_test['Age'].isnull(), 'Age']","df_test.ix[df_test['Age'].isnull(), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/kingarthurie/titanik-rdf,"data.loc[data['Embarked'] == 'C', 'Embarked']","data.ix[data['Embarked'] == 'C', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/omijn1/titanic-survivor-prediction,"X_test.loc[X_test.Embarked.isna(), ['Embarked']]","X_test.ix[X_test.Embarked.isna(), ['Embarked']]",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/jtson1213/titanic-decision-tree-classifier,"dataset.loc[dataset['SibSp'] != 0, 'SibSp']","dataset.ix[dataset['SibSp'] != 0, 'SibSp']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/hawkinsliam/simple-random-forest,"dfFeatures.loc[dfFeatures['Age'] >= 64, 'Age']","dfFeatures.ix[dfFeatures['Age'] >= 64, 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/dexter22/testing,"train.loc[(train['Fare'] > 7.91) & (train['Fare'] <= 14.454), 'Fare']","train.ix[(train['Fare'] > 7.91) & (train['Fare'] <= 14.454), 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/dujianjun79/titanic-machine-learing,"test.loc[test.Sex == 'male', 'Sex']","test.ix[test.Sex == 'male', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/jtson1213/titanic-decision-tree-classifier,"dataset.loc[(dataset['Fare'] > 7.75) & (dataset['Fare'] <= 7.91), 'Fare']","dataset.ix[(dataset['Fare'] > 7.75) & (dataset['Fare'] <= 7.91), 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/robdias/predictfy-titanic-survival,"t_train.loc[t_train['Sex'] == 'female', 'Sex']","t_train.ix[t_train['Sex'] == 'female', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/bineetranjan/gbt-classification,"df.loc[df['Sex'] == 'female', 'Sex']","df.ix[df['Sex'] == 'female', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/ekethio/titanic-second,"file.loc[file.Sex == 'female', 'Sex']","file.ix[file.Sex == 'female', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/piplimoon/leaderboard-0-8134,"df_combo.loc[:, ('Ticket')]","df_combo.ix[:, ('Ticket')]",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/robdias/predictfy-titanic-survival,"t_train.loc[t_train['Embarked'] == 'C', 'Embarked']","t_train.ix[t_train['Embarked'] == 'C', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sakenk/random-forest,"ttest.loc[ttest['Embarked'] == 'Q', 'Embarked']","ttest.ix[ttest['Embarked'] == 'Q', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/piplimoon/leaderboard-0-8134,"df_combo.loc[:, ('Title')]","df_combo.ix[:, ('Title')]",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sjtreadway/titanic-prediction,"dataset.loc[(dataset['Age'] > 26) & (dataset['Age'] <= 36), 'Age']","dataset.ix[(dataset['Age'] > 26) & (dataset['Age'] <= 36), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/cast42/xgboost-example-python,"train_df.loc[train_df['Age'].isnull(), 'Age']","train_df.ix[train_df['Age'].isnull(), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sakenk/random-forest,"titanic.loc[titanic['Embarked'] == 'S', 'Embarked']","titanic.ix[titanic['Embarked'] == 'S', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/abrierly/explore-titanic-python,"train2.loc[train['Embarked'] == 'Q', 'Embarked']","train2.ix[train['Embarked'] == 'Q', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/daniglezl/main-5-py,"test.loc[test.Fare > bin_max, 'Fare']","test.ix[test.Fare > bin_max, 'Fare']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/abrierly/nn-approach,"test.loc[r, 'Title']","test.ix[r, 'Title']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/andyxie/titanic-xgboost,"data['train'].loc[:, ('Cabin')]","data['train'].ix[:, ('Cabin')]",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/abrierly/explore-titanic-python,"test2.loc[test['Embarked'] == 'S', 'Embarked']","test2.ix[test['Embarked'] == 'S', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/rcasellas/ensemble-stacking-with-et-script,"df.loc[(df['Age'] > 16) & (df['Age'] <= 32), 'Age']","df.ix[(df['Age'] > 16) & (df['Age'] <= 32), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sjtreadway/titanic-prediction,"dataset.loc[dataset['Age'] > 62, 'Age']","dataset.ix[dataset['Age'] > 62, 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/omijn1/titanic-survivor-prediction,"X_train.loc[:, (['Age'])]","X_train.ix[:, (['Age'])]",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/zgo2016/titanic-logistic-regression,"test.loc[test['Sex'] == 0, 'Sex']","test.ix[test['Sex'] == 0, 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/bhavesh09/onemoremodel,"c.loc[c['Fare'] <= 10, 'FareB']","c.ix[c['Fare'] <= 10, 'FareB']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/hawkinsliam/simple-random-forest,"dfFeatures.loc[(dfFeatures['Age'] > 16) & (dfFeatures['Age'] <= 32), 'Age']","dfFeatures.ix[(dfFeatures['Age'] > 16) & (dfFeatures['Age'] <= 32), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/bhavesh09/titanicsurvivalprediction,"train.loc[(train['Age'] > 14) & (train['Age'] <= 28), 'Age']","train.ix[(train['Age'] > 14) & (train['Age'] <= 28), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/clararnoux/titanic-not-failing,"titanic_train.loc[titanic_train['Embarked'] == 'Q', 'Embarked']","titanic_train.ix[titanic_train['Embarked'] == 'Q', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/alpoza/test-titanic,"titanic.loc[titanic['Embarked'] == 'Q', 'Embarked']","titanic.ix[titanic['Embarked'] == 'Q', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/clararnoux/titanic-not-failing,"titanic_train.loc[titanic_train['Sex'] == 'female', 'Sex']","titanic_train.ix[titanic_train['Sex'] == 'female', 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/piplimoon/leaderboard-0-8134,df_combo.loc[0:len(titanic_train['Survived']) - 1],df_combo.ix[0:len(titanic_train['Survived']) - 1],pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/adiamb/titanic-survival-my-way,"test.loc[:, 'Pclass':'Embarked']","test.ix[:, 'Pclass':'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/corgicoffee/kernelb4bd873fab,"test_data.loc[:, (['Pclass', 'Sex', 'Age'])]","test_data.ix[:, (['Pclass', 'Sex', 'Age'])]",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/piplimoon/leaderboard-0-8134,"df_combo.loc[mask_Age, ['Age', 'Title', 'Sex', 'Pclass']]","df_combo.ix[mask_Age, ['Age', 'Title', 'Sex', 'Pclass']]",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/omijn1/titanic-survivor-prediction,"X_test.loc[:, (['Sex'])]","X_test.ix[:, (['Sex'])]",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/abrierly/nn-approach,"test.loc[:, ('Age')]","test.ix[:, ('Age')]",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sjtreadway/titanic-prediction,"dataset.loc[(dataset['Age'] > 36) & (dataset['Age'] <= 62), 'Age']","dataset.ix[(dataset['Age'] > 36) & (dataset['Age'] <= 62), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/sinanalb/test-titanic,"dataset.loc[(dataset['Age'] > 60) & (dataset['Age'] <= 120), 'Age']","dataset.ix[(dataset['Age'] > 60) & (dataset['Age'] <= 120), 'Age']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/yashduvvuru/pytanic,"test.loc[train.Sex == 'male', 'Gender']","test.ix[train.Sex == 'male', 'Gender']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/yashduvvuru/pytanic,"test.loc[test.FamilySize < 2, 'FamilyId']","test.ix[test.FamilySize < 2, 'FamilyId']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/bhavesh09/onemoremodel,"c.loc[(c['Fare'] > 10) & (c['Fare'] <= 25), 'FareB']","c.ix[(c['Fare'] > 10) & (c['Fare'] <= 25), 'FareB']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/omijn1/titanic-survivor-prediction,"X_train.loc[X_train.Embarked.isna(), ['Embarked']]","X_train.ix[X_train.Embarked.isna(), ['Embarked']]",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/kingarthurie/titanik-rdf,"data.loc[data['Embarked'] == 'Q', 'Embarked']","data.ix[data['Embarked'] == 'Q', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/robdias/predictfy-titanic-survival,"t_train.loc[t_train['Embarked'] == 'S', 'Embarked']","t_train.ix[t_train['Embarked'] == 'S', 'Embarked']",pd.DataFrame.loc,pd.DataFrame.ix
3,titanic,https://www.kaggle.com/zgo2016/titanic-logistic-regression,"test.loc[test['Sex'] == 1, 'Sex']","test.ix[test['Sex'] == 1, 'Sex']",pd.DataFrame.loc,pd.DataFrame.ix
3,whats-cooking-kernels-only,https://www.kaggle.com/vishreddy/predicting-cuisine,"data.loc[(data['TYPE-LABEL'] == 'TRAIN').tolist(), 'cuisine']","data.ix[(data['TYPE-LABEL'] == 'TRAIN').tolist(), 'cuisine']",pd.DataFrame.loc,pd.DataFrame.ix
3,whats-cooking-kernels-only,https://www.kaggle.com/vishreddy/predicting-cuisine,"data.loc[(data['TYPE-LABEL'] == 'TEST').tolist(), 'ingredients']","data.ix[(data['TYPE-LABEL'] == 'TEST').tolist(), 'ingredients']",pd.DataFrame.loc,pd.DataFrame.ix
3,whats-cooking-kernels-only,https://www.kaggle.com/vishreddy/predicting-cuisine,"data.loc[(data['TYPE-LABEL'] == 'TEST').tolist(), 'id']","data.ix[(data['TYPE-LABEL'] == 'TEST').tolist(), 'id']",pd.DataFrame.loc,pd.DataFrame.ix
3,prudential-life-insurance-assessment,https://www.kaggle.com/lifepreserver/simple-sklearn-randomforestclassifier,df[col].apply(lambda x: hash(str(x))),"pd.DataFrame(df[col]).apply(lambda x: hash(str(x[col])),axis=1)",pd.Series.apply,pd.DataFrame.apply
3,web-traffic-time-series-forecasting,https://www.kaggle.com/mikeskim/logmean-imputation,data[date_cols].apply(lambda x: x.fillna(value=data['imputed_values'])),"pd.DataFrame(data[date_cols]).apply(lambda x: x[date_cols].fillna(value=data['imputed_values']),axis=1)",pd.Series.apply,pd.DataFrame.apply
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/cttsai/xgb-trial-oct-08,df[c].fillna('na').astype(str),df[c].fillna('na').apply(str),pd.Series.astype,pd.Series.apply
3,liberty-mutual-group-property-inspection-prediction,https://www.kaggle.com/devendramittal/randomforest,x.astype(int),x.apply(int),pd.Series.astype,pd.Series.apply
3,titanic,https://www.kaggle.com/nimz911/titanic-logisticregression,train['Embarked'].astype('category'),train['Embarked'].apply('category'),pd.Series.astype,pd.Series.apply
3,titanic,https://www.kaggle.com/cooleel/a-quick-try-of-h2o-automl-on-titanic-dataset,data.astype(float),data.apply(float),pd.Series.astype,pd.Series.apply
3,allstate-claims-severity,https://www.kaggle.com/tilii7/ensemble-weights-minimization-vs-mcmc,train.iloc[train_i],train.iat[train_i],pd.Series.iloc,pd.Series.iat
3,allstate-claims-severity,https://www.kaggle.com/leonardocardoso/braga-alg-tests,"X.iloc[0:, new_split:]","X.iat[0:, new_split:]",pd.Series.iloc,pd.Series.iat
3,allstate-claims-severity,https://www.kaggle.com/leonardocardoso/braga-alg-tests,"train_df.iloc[0:, 1:-1]","train_df.iat[0:, 1:-1]",pd.Series.iloc,pd.Series.iat
3,allstate-claims-severity,https://www.kaggle.com/mmueller/categorical-embedding-with-xgb,"train_test.iloc[ntrain:, :]","train_test.iat[ntrain:, :]",pd.Series.iloc,pd.Series.iat
3,allstate-claims-severity,https://www.kaggle.com/tilii7/ensemble-weights-minimization-vs-mcmc,train.iloc[cv_i],train.iat[cv_i],pd.Series.iloc,pd.Series.iat
3,allstate-claims-severity,https://www.kaggle.com/leonardocardoso/braga-alg-tests,"train_df.iloc[0:, (-1)]","train_df.iat[0:, (-1)]",pd.Series.iloc,pd.Series.iat
3,bnp-paribas-cardif-claims-management,https://www.kaggle.com/happycube/simple-cv-example-one-feature-near-rf,all_data.iloc[num_train:],all_data.iat[num_train:],pd.Series.iloc,pd.Series.iat
3,costa-rican-household-poverty-prediction,https://www.kaggle.com/ymatioun/hoh-only-scaled,merged_df.iloc[valid_idx],merged_df.iat[valid_idx],pd.Series.iloc,pd.Series.iat
3,digit-recognizer,https://www.kaggle.com/harshitsaini/clean-character-image,"labeled_images.iloc[:, 1:]","labeled_images.iat[:, 1:]",pd.Series.iloc,pd.Series.iat
3,digit-recognizer,https://www.kaggle.com/mrisdal/starter-kernel-python-script-1,train.iloc[1:10],train.iat[1:10],pd.Series.iloc,pd.Series.iat
3,digit-recognizer,https://www.kaggle.com/harshitsaini/clean-character-image,"labeled_images.iloc[:, :1]","labeled_images.iat[:, :1]",pd.Series.iloc,pd.Series.iat
3,digit-recognizer,https://www.kaggle.com/davidecremonapoli/digit-test,train_images.iloc[1],train_images.iat[1],pd.Series.iloc,pd.Series.iat
3,digit-recognizer,https://www.kaggle.com/davidecremonapoli/digit-test,"train_df.iloc[0:5000, :1]","train_df.iat[0:5000, :1]",pd.Series.iloc,pd.Series.iat
3,digit-recognizer,https://www.kaggle.com/muthu4all/recognize-the-number,"dataset.iloc[:, 1:]","dataset.iat[:, 1:]",pd.Series.iloc,pd.Series.iat
3,digit-recognizer,https://www.kaggle.com/davidecremonapoli/digit-test,"train_labels.iloc[1, 0]","train_labels.iat[1, 0]",pd.Series.iloc,pd.Series.iat
3,forest-cover-type-kernels-only,https://www.kaggle.com/sunfulv1/nmsz1816010,"xx_func.iloc[train_.shape[0]:, :]","xx_func.iat[train_.shape[0]:, :]",pd.Series.iloc,pd.Series.iat
3,ghouls-goblins-and-ghosts-boo,https://www.kaggle.com/wangquan/test1,train_test.iloc[len(y_train):],train_test.iat[len(y_train):],pd.Series.iloc,pd.Series.iat
3,grupo-bimbo-inventory-demand,https://www.kaggle.com/kobakhit/xgboost,"train.iloc[1:6, :]","train.iat[1:6, :]",pd.Series.iloc,pd.Series.iat
3,grupo-bimbo-inventory-demand,https://www.kaggle.com/kobakhit/xgboost,"test.iloc[1:6, :]","test.iat[1:6, :]",pd.Series.iloc,pd.Series.iat
3,home-credit-default-risk,https://www.kaggle.com/legorreta/first-model-lightgbm,app_train.iloc[val_idx],app_train.iat[val_idx],pd.Series.iloc,pd.Series.iat
3,home-credit-default-risk,https://www.kaggle.com/abhilashawasthi/first-lightgbm,data[features].iloc[trn_idx],data[features].iat[trn_idx],pd.Series.iloc,pd.Series.iat
3,home-credit-default-risk,https://www.kaggle.com/ogrellier/good-fun-with-ligthgbm,data_[feats].iloc[val_idx],data_[feats].iat[val_idx],pd.Series.iloc,pd.Series.iat
3,home-credit-default-risk,https://www.kaggle.com/danofer/fork-lightgbm-with-simple-features-oof-preds,train_df[feats].iloc[train_idx],train_df[feats].iat[train_idx],pd.Series.iloc,pd.Series.iat
3,home-credit-default-risk,https://www.kaggle.com/legorreta/first-model-lightgbm,app_train.iloc[trn_idx],app_train.iat[trn_idx],pd.Series.iloc,pd.Series.iat
3,home-credit-default-risk,https://www.kaggle.com/cttsai/good-fun-with-ligthgbm-trial,X.iloc[trn_idx],X.iat[trn_idx],pd.Series.iloc,pd.Series.iat
3,home-credit-default-risk,https://www.kaggle.com/mlisovyi/modular-good-fun-with-ligthgbm,"fold_importance_df.iloc[i, 0]","fold_importance_df.iat[i, 0]",pd.Series.iloc,pd.Series.iat
3,home-credit-default-risk,https://www.kaggle.com/abhilashawasthi/first-lightgbm,data[features].iloc[val_idx],data[features].iat[val_idx],pd.Series.iloc,pd.Series.iat
3,home-credit-default-risk,https://www.kaggle.com/danofer/fork-lightgbm-with-simple-features-oof-preds,train_df[feats].iloc[valid_idx],train_df[feats].iat[valid_idx],pd.Series.iloc,pd.Series.iat
3,home-credit-default-risk,https://www.kaggle.com/sandeshak/home-credit-default-with-lgbm,"df.iloc[train.shape[0]:,]","df.iat[train.shape[0]:,]",pd.Series.iloc,pd.Series.iat
3,home-credit-default-risk,https://www.kaggle.com/ogrellier/good-fun-with-ligthgbm,data_[feats].iloc[trn_idx],data_[feats].iat[trn_idx],pd.Series.iloc,pd.Series.iat
3,home-credit-default-risk,https://www.kaggle.com/cttsai/good-fun-with-ligthgbm-trial,X.iloc[val_idx],X.iat[val_idx],pd.Series.iloc,pd.Series.iat
3,home-credit-default-risk,https://www.kaggle.com/mlisovyi/modular-good-fun-with-ligthgbm,"fold_importance_df.iloc[i, 1]","fold_importance_df.iat[i, 1]",pd.Series.iloc,pd.Series.iat
3,home-credit-default-risk,https://www.kaggle.com/prashantkikani/home-rf-et-xgb-cb-stack-oof-lb-0-778,"tr_te.iloc[tri:, :]","tr_te.iat[tri:, :]",pd.Series.iloc,pd.Series.iat
3,home-credit-default-risk,https://www.kaggle.com/nilzone/lgbm-with-mean-encodings,X_train.iloc[val_idx],X_train.iat[val_idx],pd.Series.iloc,pd.Series.iat
3,home-credit-default-risk,https://www.kaggle.com/prashantkikani/home-rf-et-xgb-cb-stack-oof-lb-0-778,"tr_te.iloc[:tri, :]","tr_te.iat[:tri, :]",pd.Series.iloc,pd.Series.iat
3,home-credit-default-risk,https://www.kaggle.com/nilzone/lgbm-with-mean-encodings,X_train.iloc[fit_idx],X_train.iat[fit_idx],pd.Series.iloc,pd.Series.iat
3,home-depot-product-search-relevance,https://www.kaggle.com/chirz8/cjk1404-1,df_all.iloc[num_train:],df_all.iat[num_train:],pd.Series.iloc,pd.Series.iat
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/antoinekrajnc/house-prices-multiple-linear-regression,"dataset.iloc[:, (i)]","dataset.iat[:, (i)]",pd.Series.iloc,pd.Series.iat
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/davideng/homeprices,"train_dataset.iloc[:, (76)]","train_dataset.iat[:, (76)]",pd.Series.iloc,pd.Series.iat
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/antoinekrajnc/house-prices-multiple-linear-regression,"dataframe.iloc[:, (i)]","dataframe.iat[:, (i)]",pd.Series.iloc,pd.Series.iat
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/antoinekrajnc/house-prices-multiple-linear-regression,"dataset.iloc[0, i]","dataset.iat[0, i]",pd.Series.iloc,pd.Series.iat
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/davideng/homeprices,"train_dataset.iloc[:, :-1]","train_dataset.iat[:, :-1]",pd.Series.iloc,pd.Series.iat
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/antoinekrajnc/house-prices-multiple-linear-regression,"dataset.iloc[:, 80:81]","dataset.iat[:, 80:81]",pd.Series.iloc,pd.Series.iat
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/davideng/homeprices,"test_dataset.iloc[:, :]","test_dataset.iat[:, :]",pd.Series.iloc,pd.Series.iat
3,house-prices-advanced-regression-techniques,https://www.kaggle.com/antoinekrajnc/house-prices-multiple-linear-regression,"dataset.iloc[:, 1:-1]","dataset.iat[:, 1:-1]",pd.Series.iloc,pd.Series.iat
3,jigsaw-toxic-comment-classification-challenge,https://www.kaggle.com/tokestermw/deep-bow-baseline,"train_df.iloc[:, 2:]","train_df.iat[:, 2:]",pd.Series.iloc,pd.Series.iat
3,PLAsTiCC-2018,https://www.kaggle.com/ogrellier/multi-core-aggregations,df.iloc[trn_],df.iat[trn_],pd.Series.iloc,pd.Series.iat
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/ogrellier/xgb-classifier-upsampling-lb-0-283,trn_df.iloc[val_idx],trn_df.iat[val_idx],pd.Series.iloc,pd.Series.iat
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/tunguz/xgb-5fold-upsampling-no-stratification,trn_dat.iloc[idx],trn_dat.iat[idx],pd.Series.iloc,pd.Series.iat
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/gvyshnya/gbm-cv-submission-lb-28,"X.iloc[(test_index), :]","X.iat[(test_index), :]",pd.Series.iloc,pd.Series.iat
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/johannesss/stacking-lightgbm-with-logisticregression,"X_train.iloc[(fit_index), :]","X_train.iat[(fit_index), :]",pd.Series.iloc,pd.Series.iat
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/johannesss/stacking-lightgbm-with-logisticregression,"X_train.iloc[(val_index), :]","X_train.iat[(val_index), :]",pd.Series.iloc,pd.Series.iat
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/ievgenvp/lgbm-custom-randomizedsearchcv-lb-283,X.iloc[test_index],X.iat[test_index],pd.Series.iloc,pd.Series.iat
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/gvyshnya/lightgbm-cv-submission-lb-0-28,"X.iloc[(train_index), :]","X.iat[(train_index), :]",pd.Series.iloc,pd.Series.iat
3,porto-seguro-safe-driver-prediction,https://www.kaggle.com/ievgenvp/lgbm-custom-randomizedsearchcv-lb-283,X.iloc[train_index],X.iat[train_index],pd.Series.iloc,pd.Series.iat
3,santander-customer-satisfaction,https://www.kaggle.com/cast42/calibratedcv-xgboost,"training.iloc[:, :-1]","training.iat[:, :-1]",pd.Series.iloc,pd.Series.iat
3,santander-value-prediction-challenge,https://www.kaggle.com/prashantkikani/ensembling-has-always-been-the-answer,"results.iloc[(results['Score'].idxmin()), :]","results.iat[(results['Score'].idxmin()), :]",pd.Series.iloc,pd.Series.iat
3,santander-value-prediction-challenge,https://www.kaggle.com/ogrellier/santander-46-features,dtrain.data.iloc[val_idx],dtrain.data.iat[val_idx],pd.Series.iloc,pd.Series.iat
3,sf-crime,https://www.kaggle.com/dollardollar/importance-of-address-features,"shuffle(fold1, random_state=123).iloc[0:300000, :]","shuffle(fold1, random_state=123).iat[0:300000, :]",pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/thamagame/titanic-with-learning-curves,train.iloc[CROSS_VALIDATION_SIZE:CROSS_VALIDATION_SIZE + m],train.iat[CROSS_VALIDATION_SIZE:CROSS_VALIDATION_SIZE + m],pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/durgapd/titanic-my-first,"train[predictors].iloc[(train1), :]","train[predictors].iat[(train1), :]",pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/shyamspr/backward-elimination,"train.iloc[:, ([2, 4, 5, 6, 7, 9, 11])]","train.iat[:, ([2, 4, 5, 6, 7, 9, 11])]",pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/circledan/kernelbedf88cfa3,"test.iloc[:, ([0, 2, 3, 4, 5, 7, 9])]","test.iat[:, ([0, 2, 3, 4, 5, 7, 9])]",pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/iviglious/teamysi-titanic-rf-a,main_all_df.iloc[0],main_all_df.iat[0],pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/jsanch/learning-ml-with-kaggle,"train[predictors].iloc[(xx), :]","train[predictors].iat[(xx), :]",pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/jeshugames2/classification-using-svm,"X_train.iloc[i, 0]","X_train.iat[i, 0]",pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/rafaelvleite/titanic-machine-learning-random-forest,"dataset_joined.iloc[:891, :]","dataset_joined.iat[:891, :]",pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/rafaelvleite/titanic-machine-learning-random-forest,"dataset_joined.iloc[891:, :]","dataset_joined.iat[891:, :]",pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/thamagame/titanic-with-learning-curves,train.iloc[:CROSS_VALIDATION_SIZE],train.iat[:CROSS_VALIDATION_SIZE],pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/thamagame/titanic-with-learning-curves,trainCv.iloc[:m],trainCv.iat[:m],pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/jeshugames2/classification-using-svm,"dataset_train.iloc[:, (1)]","dataset_train.iat[:, (1)]",pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/jsanch/learning-ml-with-kaggle,"train[predictors].iloc[(yy), :]","train[predictors].iat[(yy), :]",pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/rafaelvleite/titanic-machine-learning-random-forest,"dataset_joined.iloc[891:, (1)]","dataset_joined.iat[891:, (1)]",pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/rafaelvleite/titanic-machine-learning-random-forest,"only_final_values.iloc[:, ([0, 11])]","only_final_values.iat[:, ([0, 11])]",pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/jeshugames2/classification-using-svm,"dataset_test.iloc[:, ([1, 3, 4, 5, 6, 8, 10])]","dataset_test.iat[:, ([1, 3, 4, 5, 6, 8, 10])]",pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/jeshugames2/classification-using-svm,"dataset_test.iloc[:, (0)]","dataset_test.iat[:, (0)]",pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/jeshugames2/classification-using-svm,"dataset_train.iloc[:, ([2, 4, 5, 6, 7, 9, 11])]","dataset_train.iat[:, ([2, 4, 5, 6, 7, 9, 11])]",pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/durgapd/titanic-my-first,"train[predictors].iloc[(test1), :]","train[predictors].iat[(test1), :]",pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/rafaelvleite/titanic-machine-learning-random-forest,"dataset_train_revised.iloc[:, ([4])]","dataset_train_revised.iat[:, ([4])]",pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/shyamspr/backward-elimination,"test.iloc[:, ([1, 3, 4, 5, 6, 8, 10])]","test.iat[:, ([1, 3, 4, 5, 6, 8, 10])]",pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/iviglious/teamysi-titanic-rf-a,main_all_df.iloc[-1],main_all_df.iat[-1],pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/circledan/kernelbedf88cfa3,"train.iloc[:, (0)]","train.iat[:, (0)]",pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/shyamspr/backward-elimination,"train.iloc[:, (1)]","train.iat[:, (1)]",pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/rafaelvleite/titanic-machine-learning-random-forest,"dataset_train_revised.iloc[:, ([0, 2, 3, 5, 6, 9, 10, 11, 12, 13, 14])]","dataset_train_revised.iat[:, ([0, 2, 3, 5, 6, 9, 10, 11, 12, 13, 14])]",pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/circledan/kernelbedf88cfa3,"train.iloc[:, ([1, 3, 4, 5, 6, 8, 10])]","train.iat[:, ([1, 3, 4, 5, 6, 8, 10])]",pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/circledan/kernelbedf88cfa3,"total.iloc[0:891, :]","total.iat[0:891, :]",pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/lindenlu/linden-titanic-script,train_df.iloc[[0]],train_df.iat[[0]],pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/circledan/kernelbedf88cfa3,"total.iloc[891:, :]","total.iat[891:, :]",pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/shyamspr/backward-elimination,"sub.iloc[:, (1)]","sub.iat[:, (1)]",pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/thamagame/titanic-with-learning-curves,train.iloc[CROSS_VALIDATION_SIZE:],train.iat[CROSS_VALIDATION_SIZE:],pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/lindenlu/linden-titanic-script,train_df.iloc[0:5],train_df.iat[0:5],pd.Series.iloc,pd.Series.iat
3,titanic,https://www.kaggle.com/rafaelvleite/titanic-machine-learning-random-forest,"dataset_test_revised.iloc[:, ([0, 2, 3, 5, 6, 9, 10, 11, 12, 13, 14])]","dataset_test_revised.iat[:, ([0, 2, 3, 5, 6, 9, 10, 11, 12, 13, 14])]",pd.Series.iloc,pd.Series.iat
3,web-traffic-time-series-forecasting,https://www.kaggle.com/muonneutrino/median-with-validation-lb-47-3,"train.iloc[(i), :]","train.iat[(i), :]",pd.Series.iloc,pd.Series.iat
3,whats-cooking-kernels-only,https://www.kaggle.com/ymatioun/lightgbm-v1,df.iloc[valid_idx],df.iat[valid_idx],pd.Series.iloc,pd.Series.iat
3,kobe-bryant-shot-selection,https://www.kaggle.com/jaycb26/xgbryant,data[field].map(new_map),data[field].replace(new_replace),pd.Series.map,pd.Series.replace
3,titanic,https://www.kaggle.com/dishajindal/script-py,"train['Embarked'].map({'S': 0, 'C': 1, 'Q': 2})","pd.DataFrame(train['Embarked']).replace({'S': 0, 'C': 1, 'Q': 2})",pd.Series.map,pd.DataFrame.replace
3,titanic,https://www.kaggle.com/code1110/titanic-model-prediction-submission,"test_df['Embarked'].map({'S': 2, 'C': 1, 'Q': 0})","pd.DataFrame(test_df['Embarked']).replace({'S': 2, 'C': 1, 'Q': 0})",pd.Series.map,pd.DataFrame.replace
3,titanic,https://www.kaggle.com/rohitagarwal/attempt-number-1,"total['Embarked'].map({'C': 0, 'Q': 1, 'S': 2})","pd.DataFrame(total['Embarked']).replace({'C': 0, 'Q': 1, 'S': 2})",pd.Series.map,pd.DataFrame.replace
3,titanic,https://www.kaggle.com/dishajindal/script2-py,"test['Embarked'].map({'S': 0, 'C': 1, 'Q': 2})","pd.DataFrame(test['Embarked']).replace({'S': 0, 'C': 1, 'Q': 2})",pd.Series.map,pd.DataFrame.replace
3,titanic,https://www.kaggle.com/lionalio/titanicprediction,"TestSet['FamilySize'].map({'Single': 0, 'Small': 1, 'Grand': 2})","pd.DataFrame(TestSet['FamilySize']).replace({'Single': 0, 'Small': 1, 'Grand': 2})",pd.Series.map,pd.DataFrame.replace
3,titanic,https://www.kaggle.com/dishajindal/script-py,"test['Sex'].map({'female': 1, 'male': 0})","pd.DataFrame(test['Sex']).replace({'female': 1, 'male': 0})",pd.Series.map,pd.DataFrame.replace
3,titanic,https://www.kaggle.com/lionalio/titanicprediction,"TestSet['Embarked'].map({'S': 0, 'C': 1, 'Q': 2})","pd.DataFrame(TestSet['Embarked']).replace({'S': 0, 'C': 1, 'Q': 2})",pd.Series.map,pd.DataFrame.replace
3,titanic,https://www.kaggle.com/rchitic17/titanic-r-to-python,"full['Child'].map({'Child': 1, 'Adult': 0})","pd.DataFrame(full['Child']).replace({'Child': 1, 'Adult': 0})",pd.Series.map,pd.DataFrame.replace
3,titanic,https://www.kaggle.com/rchitic17/titanic-r-to-python,"full['Sex'].map({'female': 1, 'male': 0})","pd.DataFrame(full['Sex']).replace({'female': 1, 'male': 0})",pd.Series.map,pd.DataFrame.replace
3,titanic,https://www.kaggle.com/rohitagarwal/attempt-number-1,"total['Sex'].map({'female': 0, 'male': 1})","pd.DataFrame(total['Sex']).replace({'female': 0, 'male': 1})",pd.Series.map,pd.DataFrame.replace
3,titanic,https://www.kaggle.com/agarwalsneha/linear-svm-with-feature-engineering,"test['Embarked'].dropna().map({'S': 0, 'C': 1, 'Q': 2})","pd.DataFrame(test['Embarked'].dropna()).replace({'S': 0, 'C': 1, 'Q': 2})",pd.Series.map,pd.DataFrame.replace
3,titanic,https://www.kaggle.com/thamagame/titanic-with-learning-curves,"dataFrame['Sex'].map({'female': 0, 'male': 1})","pd.DataFrame(dataFrame['Sex']).replace({'female': 0, 'male': 1})",pd.Series.map,pd.DataFrame.replace
3,titanic,https://www.kaggle.com/rchitic17/titanic-r-to-python,"full['Mother'].map({'Mother': 1, 'Not Mother': 0})","pd.DataFrame(full['Mother']).replace({'Mother': 1, 'Not Mother': 0})",pd.Series.map,pd.DataFrame.replace
