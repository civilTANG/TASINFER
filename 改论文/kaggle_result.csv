0,https://www.kaggle.com/aarotang/test-data,"np.hstack((x_num_data, vec_x_cat_data))","np.append(x_num_data, vec_x_cat_data, axis=1)"
0,https://www.kaggle.com/aarotang/test-data,"np.hstack((x_num_data, vec_x_cat_data))","np.concatenate((x_num_data, vec_x_cat_data), axis=1)"
0,https://www.kaggle.com/aawadall/deep-neural-net,np.array(train_raw['label']),np.concatenate([train_raw['label']])
0,https://www.kaggle.com/aawadall/deep-neural-net,"np.sum(t, axis=0)",(t).sum( axis=0)
0,https://www.kaggle.com/aawadall/deep-neural-net,np.sum(logprobs),(logprobs).sum()
0,https://www.kaggle.com/abrierly/nn-approach,"np.ones((1, m), dtype=np.float)","np.empty((1, m), dtype=np.float); r2.fill(1)"
0,https://www.kaggle.com/acyouzi/test-frist,np.ones(len(FLS)),np.empty(len(FLS)); r2.fill(1)
0,https://www.kaggle.com/adrianbureu/another-test,data.ix[891:],data.iloc[891:]
0,https://www.kaggle.com/aharless/jiwon-small-improvements-for-magic-number-results,"test.loc[equal_index, 'full_sq']","test.ix[equal_index, 'full_sq']"
0,https://www.kaggle.com/aharless/jiwon-small-improvements-for-magic-number-results,"train.loc[kitch_is_build_year, 'build_year']","train.ix[kitch_is_build_year, 'build_year']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']"
0,https://www.kaggle.com/alabsinatheer/mercedes-benz-first-model-stacking-1,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.concatenate((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed), axis=1)"
0,https://www.kaggle.com/albytho/pubg-prediction-ann-implementation,"df_train.loc[:, (['winPlacePerc'])]","df_train.ix[:, (['winPlacePerc'])]"
0,https://www.kaggle.com/albytho/pubg-prediction-ann-implementation,"df_test.loc[:, :]","df_test.ix[:, :]"
0,https://www.kaggle.com/alexai/competition1,combined.ix[train_rows + 1:],combined.iloc[train_rows + 1:]
0,https://www.kaggle.com/alexai/competition2,combined.ix[train_rows + 1:],combined.iloc[train_rows + 1:]
0,https://www.kaggle.com/alexai/competition3,combined.ix[train_rows + 1:],combined.iloc[train_rows + 1:]
0,https://www.kaggle.com/alexai/competition4,combined.ix[train_rows + 1:],combined.iloc[train_rows + 1:]
0,https://www.kaggle.com/alexai/competition5,combined.ix[train_rows + 1:],combined.iloc[train_rows + 1:]
0,https://www.kaggle.com/alexxanderlarko/extratreesclassifier,train.ix[train_sample],train.loc[train_sample]
0,https://www.kaggle.com/alexxanderlarko/extratreesclassifier,"train.ix[:, 0:299]","train.iloc[:, 0:299]"
0,https://www.kaggle.com/alexxanderlarko/xgb-offset0501,np.ones(num_classes),np.empty(num_classes); r2.fill(1)
0,https://www.kaggle.com/alipala/ml-regressors-20-features,"test.loc[:, (test.columns != c)]","test.ix[:, (test.columns != c)]"
0,https://www.kaggle.com/amazone/lightgbm-regressor,df['pickup_datetime'].apply(lambda x: int(x.split(' ')[0].split('-')[2])),df['pickup_datetime'].map(lambda x: int(x.split(' ')[0].split('-')[2]))
0,https://www.kaggle.com/amielsy/second-script,"train.loc[:, 'MSSubClass':'SaleCondition']","train.ix[:, 'MSSubClass':'SaleCondition']"
0,https://www.kaggle.com/andrewlin1006/cs145-v1,"np.hstack((x_num_data, vec_x_cat_data))","np.concatenate((x_num_data, vec_x_cat_data), axis=1)"
0,https://www.kaggle.com/andrewlin1006/cs145-v1,"np.hstack((x_num_test, vec_x_cat_test))","np.concatenate((x_num_test, vec_x_cat_test), axis=1)"
0,https://www.kaggle.com/andywan/data-import,np.ones(len(age_col['Age'])),np.empty(len(age_col['Age'])); r2.fill(1)
0,https://www.kaggle.com/anilcs/et-classifier,df[columnName].map(lambda y: 1 if y == x else 0),"np.where( df[columnName] == x , 1 ,0)"
0,https://www.kaggle.com/anirban00727/titanic-survival-chances-prediction,combined.FamilySize.map(lambda s: 1 if s == 1 else 0),"np.where( combined.FamilySize == 1 , 1 ,0)"
0,https://www.kaggle.com/anirban00727/titanic-survival-chances-prediction,combined.FamilySize.map(lambda s: 1 if s > 4 else 0),"np.where( combined.FamilySize > 4 , 1 ,0)"
0,https://www.kaggle.com/antoinekrajnc/house-prices-multiple-linear-regression,"np.ones((1460, 1))","np.empty((1460, 1)); r2.fill(1)"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']"
0,https://www.kaggle.com/arthurlpgc/first-tests,train.dot(Theta),"np.tensordot(train,Theta,axes=1)"
0,https://www.kaggle.com/arthurlpgc/first-tests,(anstrain - Pred).transpose().dot(train),"np.tensordot((anstrain - Pred).transpose(),train,axes=1)"
0,https://www.kaggle.com/arthurlpgc/first-tests,train.dot(Theta),"np.tensordot(train,Theta,axes=1)"
0,https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"df.ix[:, 'Sex':]","df.loc[:, 'Sex':]"
0,https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"df1.ix[:, ('PassengerId')]","df1.loc[:, ('PassengerId')]"
0,https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.hstack([X, bias])","np.append(X, bias, axis=1)"
0,https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.hstack([X_test, bias1])","np.append(X_test, bias1, axis=1)"
0,https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.hstack([Submit, Yhat])","np.append(Submit, Yhat, axis=1)"
0,https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.hstack([X, bias])","np.concatenate([X, bias], axis=1)"
0,https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.hstack([X_test, bias1])","np.concatenate([X_test, bias1], axis=1)"
0,https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.hstack([Submit, Yhat])","np.concatenate([Submit, Yhat], axis=1)"
0,https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.ones((100, 1))","np.empty((100, 1)); r2.fill(1)"
0,https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.vstack([X_train, X_class1])","np.concatenate([X_train, X_class1], axis=0)"
0,https://www.kaggle.com/azeembootwala/titanic-logistic-regression,"np.vstack([Y_train, Y_class1])","np.concatenate([Y_train, Y_class1], axis=0)"
0,https://www.kaggle.com/azuralrainbow/summer,np.sum(probs ** 2),"np.einsum('i->',probs ** 2)"
0,https://www.kaggle.com/azuralrainbow/summer,np.sum(probs ** 2),(probs ** 2).sum()
0,https://www.kaggle.com/balajibi/facebook-solution-bi-1,np.vstack(preds_list),"np.concatenate(preds_list, axis=0)"
0,https://www.kaggle.com/batzner/small-dataset-generator,np.where(gift_pref[child_id] == gift_id),np.nonzero(gift_pref[child_id] == gift_id)
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']"
0,https://www.kaggle.com/bibhuti93/titanic-analysis-v1-0,"train_data.ix[:, 1:6]","train_data.iloc[:, 1:6]"
0,https://www.kaggle.com/bibhuti93/titanic-analysis-v1-0,"train_data.ix[:, (0)]","train_data.iloc[:, (0)]"
0,https://www.kaggle.com/bibhuti93/titanic-analysis-v1-0,"test_data.ix[:, 0:5]","test_data.iloc[:, 0:5]"
0,https://www.kaggle.com/bigdit/test00000,"test_df.ix[0:, 1:]","test_df.iloc[0:, 1:]"
0,https://www.kaggle.com/bigdit/test00000,"test_df.ix[:, (0)]","test_df.iloc[:, (0)]"
0,https://www.kaggle.com/bigdit/test00000,"np.c_[passengers, y0.astype(int)]","np.hstack([np.array(passengers).reshape(len(passengers),1), np.array(y0.astype(int)).reshape(len(passengers),1)])"
0,https://www.kaggle.com/brandao/test-4,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)","np.where( df['shot_distance'] < 45 , df['shot_distance'] ,    45)"
0,https://www.kaggle.com/brandao/test-4,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)","np.where( df['time_remaining'] < 3 , 1 ,0)"
0,https://www.kaggle.com/brandao/test-4,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)", df['shot_distance'].apply(lambda row:row if row < 45 else     45)
0,https://www.kaggle.com/brandao/test-4,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)", df['time_remaining'].apply(lambda row: 1 if row < 3 else 0)
0,https://www.kaggle.com/brandao/test-6,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)","np.where( df['shot_distance'] < 45 , df['shot_distance'] ,    45)"
0,https://www.kaggle.com/brandao/test-6,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)","np.where( df['time_remaining'] < 3 , 1 ,0)"
0,https://www.kaggle.com/brandao/test-6,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)", df['shot_distance'].apply(lambda row:row if row < 45 else     45)
0,https://www.kaggle.com/brandao/test-6,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)", df['time_remaining'].apply(lambda row: 1 if row < 3 else 0)
0,https://www.kaggle.com/brandao/test-7,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)","np.where( df['shot_distance'] < 45 , df['shot_distance'] ,    45)"
0,https://www.kaggle.com/brandao/test-7,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)","np.where( df['time_remaining'] < 3 , 1 ,0)"
0,https://www.kaggle.com/brandao/test-7,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)", df['shot_distance'].apply(lambda row:row if row < 45 else     45)
0,https://www.kaggle.com/brandao/test-7,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)", df['time_remaining'].apply(lambda row: 1 if row < 3 else 0)
0,https://www.kaggle.com/brandao/teste-5,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)","np.where( df['shot_distance'] < 45 , df['shot_distance'] ,    45)"
0,https://www.kaggle.com/brandao/teste-5,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)","np.where( df['time_remaining'] < 3 , 1 ,0)"
0,https://www.kaggle.com/brandao/winner-script,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)","np.where( df['shot_distance'] < 45 , df['shot_distance'] ,    45)"
0,https://www.kaggle.com/brandao/winner-script,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)","np.where( df['time_remaining'] < 3 , 1 ,0)"
0,https://www.kaggle.com/brandao/winner-script,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)", df['shot_distance'].apply(lambda row:row if row < 45 else     45)
0,https://www.kaggle.com/brandao/winner-script,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)", df['time_remaining'].apply(lambda row: 1 if row < 3 else 0)
0,https://www.kaggle.com/bschaefer/frequent-items-per-user-baseline-lb-0-30,"orders.loc[orders.eval_set == 'test', 'user_id']","orders.ix[orders.eval_set == 'test', 'user_id']"
0,https://www.kaggle.com/canran/titanic-rf,"X_df.loc[:, ('Age')]","X_df.ix[:, ('Age')]"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']"
0,https://www.kaggle.com/carmnejsu/feature-engineering-different-models,dataset.isnull().values.sum(),"np.count_nonzero(dataset.isnull().values,)"
0,https://www.kaggle.com/carmnejsu/feature-engineering-different-models,dataset.isnull().values.sum(),"np.sum(dataset.isnull().values,)"
0,https://www.kaggle.com/cast42/calibratedcv-xgboost,np.sum(y == 1),np.count_nonzero(y == 1)
0,https://www.kaggle.com/cast42/calibratedcv-xgboost,np.sum(y == 0),np.count_nonzero(y == 0)
0,https://www.kaggle.com/cast42/calibratedcv-xgboost,np.sum(y == 1),(y == 1).sum()
0,https://www.kaggle.com/cesarboucas/oneclasssvm,np.ones(X_outliers.shape[0]),np.empty(X_outliers.shape[0]); r2.fill(1)
0,https://www.kaggle.com/ceyarzam/sssss,"train.ix[:, 1:]","train.iloc[:, 1:]"
0,https://www.kaggle.com/ceyarzam/sssss,"train.ix[:, (0)]","train.iloc[:, (0)]"
0,https://www.kaggle.com/chechir/export-feats-kernel,np.sum(shared_weights),"np.einsum('i->',shared_weights)"
0,https://www.kaggle.com/chenhagn/test-1,"train.ix[:, (0)]","train.iloc[:, (0)]"
0,https://www.kaggle.com/chriscc/xgb-cv,"np.hstack((trainCatVecX, trainNumX))","np.append(trainCatVecX, trainNumX, axis=1)"
0,https://www.kaggle.com/chriscc/xgb-cv,"np.hstack((testCatVecX, testNumX))","np.append(testCatVecX, testNumX, axis=1)"
0,https://www.kaggle.com/chriscc/xgb-cv,"np.hstack((trainCatVecX, trainNumX))","np.concatenate((trainCatVecX, trainNumX), axis=1)"
0,https://www.kaggle.com/chriscc/xgb-cv,np.sum(true_order),(true_order).sum()
0,https://www.kaggle.com/chriscc/xgb-cv,np.sum(true_order),(true_order).sum()
0,https://www.kaggle.com/chriscc/xgb-py,"np.hstack((trainCatVecX, trainNumX))","np.concatenate((trainCatVecX, trainNumX), axis=1)"
0,https://www.kaggle.com/chriscc/xgb-py,"np.hstack((testCatVecX, testNumX))","np.concatenate((testCatVecX, testNumX), axis=1)"
0,https://www.kaggle.com/chrisgundling/anyone-else-try-using-svm,counts.iloc[0],counts.iat[0]
0,https://www.kaggle.com/cjansen/magic-numbers-private-lb-0-31647,"train.loc[bad_index, ['max_floor', 'floor']]","train.ix[bad_index, ['max_floor', 'floor']]"
0,https://www.kaggle.com/company/kbss-1,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)","np.where( df['shot_distance'] < 45 , df['shot_distance'] ,    45)"
0,https://www.kaggle.com/company/kbss-1,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)","np.where( df['time_remaining'] < 3 , 1 ,0)"
0,https://www.kaggle.com/company/kbss-1,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)", df['shot_distance'].apply(lambda row:row if row < 45 else     45)
0,https://www.kaggle.com/company/kbss-1,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)", df['time_remaining'].apply(lambda row: 1 if row < 3 else 0)
0,https://www.kaggle.com/computermage/test-titanic-survival-script,family['FamilySize'].map(lambda s: 1 if 5 <= s else 0),"np.where( 5 <= family['FamilySize'] , 1 ,0)"
0,https://www.kaggle.com/cooleel/a-quick-try-of-h2o-automl-on-titanic-dataset,np.ones(data.shape[0]),np.empty(data.shape[0]); r2.fill(1)
0,https://www.kaggle.com/corgicoffee/kernelb4bd873fab,"train_data.loc[:, (['Fare'])]","train_data.ix[:, (['Fare'])]"
0,https://www.kaggle.com/corgicoffee/kernelb4bd873fab,"test_data.loc[:, (['Fare'])]","test_data.ix[:, (['Fare'])]"
0,https://www.kaggle.com/cttsai/xgb-trial-oct-08,"clustered_train.loc[:, (name)]","clustered_train.ix[:, (name)]"
0,https://www.kaggle.com/cttsai/xgb-trial-oct-08,"train.loc[:, (name)]","train.ix[:, (name)]"
0,https://www.kaggle.com/cttsai/xgb-trial-oct-08,df['MoSold'].astype(str),df['MoSold'].apply(str)
0,https://www.kaggle.com/cttsai/xgb-voting-weighted-goblins,"train[target].replace({'Goblin': 1.15, 'Ghost': 1.0, 'Ghoul': 1.0})","train[target].map({'Goblin': 1.15, 'Ghost': 1.0, 'Ghoul': 1.0})"
0,https://www.kaggle.com/cxxacxx/have-a-try-2,"test.loc[:, 'MSSubClass':'SaleCondition']","test.ix[:, 'MSSubClass':'SaleCondition']"
0,https://www.kaggle.com/cxxacxx/have-a-try-2,"train.loc[:, (columns_for_pc)]","train.ix[:, (columns_for_pc)]"
0,https://www.kaggle.com/davideng/homeprices,"train_dataset.ix[train_dataset.Alley.notnull(), 'Alley']","train_dataset.loc[train_dataset.Alley.notnull(), 'Alley']"
0,https://www.kaggle.com/davideng/homeprices,"train_dataset.ix[train_dataset.Alley.isnull(), 'Alley']","train_dataset.loc[train_dataset.Alley.isnull(), 'Alley']"
0,https://www.kaggle.com/davideng/homeprices,"train_dataset.ix[train_dataset.MasVnrType.isnull(), 'MasVnrType']","train_dataset.loc[train_dataset.MasVnrType.isnull(), 'MasVnrType']"
0,https://www.kaggle.com/davideng/homeprices,"train_dataset.ix[train_dataset.MasVnrType == 'None', 'MasVnrArea']","train_dataset.loc[train_dataset.MasVnrType == 'None', 'MasVnrArea']"
0,https://www.kaggle.com/davideng/homeprices,"train_dataset.ix[train_dataset.Fireplaces == 0, 'FireplaceQu']","train_dataset.loc[train_dataset.Fireplaces == 0, 'FireplaceQu']"
0,https://www.kaggle.com/davideng/homeprices,"train_dataset.ix[train_dataset.GarageCars.isnull(), 'GarageCars']","train_dataset.loc[train_dataset.GarageCars.isnull(), 'GarageCars']"
0,https://www.kaggle.com/davideng/homeprices,"train_dataset.ix[train_dataset.GarageQual.isnull(), 'GarageQual']","train_dataset.loc[train_dataset.GarageQual.isnull(), 'GarageQual']"
0,https://www.kaggle.com/davideng/homeprices,"train_dataset.ix[train_dataset.GarageCars == 0, 'GarageType']","train_dataset.loc[train_dataset.GarageCars == 0, 'GarageType']"
0,https://www.kaggle.com/davideng/titanic-attempt-1-random-forest,"np.where(y_pred[:] > 0.95, 1, 0)",(y_pred[:] > 0.95).astype((y_pred[:] > 0.95).dtype)
0,https://www.kaggle.com/demoonism/rf-multilabel-framework-lb-0-022475,"np.hstack([train_X, temp_train_X])","np.append(train_X, temp_train_X, axis=1)"
0,https://www.kaggle.com/demoonism/rf-multilabel-framework-lb-0-022475,"np.hstack([test_X, temp_test_X])","np.append(test_X, temp_test_X, axis=1)"
0,https://www.kaggle.com/demoonism/rf-multilabel-framework-lb-0-022475,"np.hstack([train_X, temp_train_X])","np.concatenate([train_X, temp_train_X], axis=1)"
0,https://www.kaggle.com/demoonism/rf-multilabel-framework-lb-0-022475,"np.hstack([test_X, temp_test_X])","np.concatenate([test_X, temp_test_X], axis=1)"
0,https://www.kaggle.com/devendramittal/randomforest,"np.column_stack((Idtest, YPred))","np.transpose((Idtest, YPred))"
0,https://www.kaggle.com/devendramittal/randomforest,"np.column_stack((Idtest, YPred))","np.vstack((Idtest.T, YPred.T)).T"
0,https://www.kaggle.com/devinanzelmo/component-cdf-s-and-sample-predictions,train.query('num_scans > 7 and num_scans < 18'),train.loc[(train.num_scans > 7 )& (train.num_scans < 18)]
0,https://www.kaggle.com/devinanzelmo/fiddling-with-xgb,train.query('num_scans > 17'),train.loc[train.num_scans > 17]
0,https://www.kaggle.com/dexter22/testing,"train.loc[train['Age'].isnull(), ['Age']]","train.ix[train['Age'].isnull(), ['Age']]"
0,https://www.kaggle.com/dlyzer/k-nearest-neighbors,"np.hstack([Z_train, X_pt_q_train])","np.append(Z_train, X_pt_q_train, axis=1)"
0,https://www.kaggle.com/dlyzer/k-nearest-neighbors,"np.hstack([Z_test, X_pt_q_test])","np.append(Z_test, X_pt_q_test, axis=1)"
0,https://www.kaggle.com/dlyzer/k-nearest-neighbors,"np.hstack([Z_train, X_pt_q_train])","np.concatenate([Z_train, X_pt_q_train], axis=1)"
0,https://www.kaggle.com/dlyzer/k-nearest-neighbors,"np.hstack([Z_test, X_pt_q_test])","np.concatenate([Z_test, X_pt_q_test], axis=1)"
0,https://www.kaggle.com/drarfc/knn-accelerated-v3,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T"
0,https://www.kaggle.com/drarfc/script-competition-facebook-v-2-1,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T"
0,https://www.kaggle.com/drasko/1st-python-try-1,"np.c_[xx.ravel(), yy.ravel()]","np.hstack([xx.ravel().reshape(len(xx.ravel()),1), yy.ravel().reshape(len(xx.ravel()),1)])"
0,https://www.kaggle.com/ed25519/code-taken-from-xkcd-examples-showcase-xkcd-html,np.ones(100),np.empty(100); r2.fill(1)
0,https://www.kaggle.com/ekethio/titanic-second,"file.ix[file['Embarked'] == 'S', 'Embarked']","file.loc[file['Embarked'] == 'S', 'Embarked']"
0,https://www.kaggle.com/ekethio/titanic-second,"file.ix[file['Embarked'] == 'C', 'Embarked']","file.loc[file['Embarked'] == 'C', 'Embarked']"
0,https://www.kaggle.com/ekethio/titanic-second,"file.ix[file['Embarked'] == 'Q', 'Embarked']","file.loc[file['Embarked'] == 'Q', 'Embarked']"
0,https://www.kaggle.com/ekethio/titanic-second,"file.ix[file.Age > 60, 'Above_50']","file.loc[file.Age > 60, 'Above_50']"
0,https://www.kaggle.com/eliotbarr/stacking-starter,np.array(all_data[:train.shape[0]]),np.concatenate([all_data[:train.shape[0]]])
0,https://www.kaggle.com/eliotbarr/stacking-starter,np.array(all_data[train.shape[0]:]),np.concatenate([all_data[train.shape[0]:]])
0,https://www.kaggle.com/eponymous/weighted-models-example,"scores.ix[:, (scores.columns != 'split')]","scores.loc[:, (scores.columns != 'split')]"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']"
0,https://www.kaggle.com/ezyyyy/silly-silly-data,train['ratio_life_sq_full_sq'].ix[train['ratio_life_sq_full_sq'] < 0],train['ratio_life_sq_full_sq'].loc[train['ratio_life_sq_full_sq'] < 0]
0,https://www.kaggle.com/ezyyyy/silly-silly-data,train['ratio_life_sq_full_sq'].ix[train['ratio_life_sq_full_sq'] > 1],train['ratio_life_sq_full_sq'].loc[train['ratio_life_sq_full_sq'] > 1]
0,https://www.kaggle.com/ezyyyy/silly-silly-data,test['ratio_life_sq_full_sq'].ix[test['ratio_life_sq_full_sq'] < 0],test['ratio_life_sq_full_sq'].loc[test['ratio_life_sq_full_sq'] < 0]
0,https://www.kaggle.com/ezyyyy/silly-silly-data,test['ratio_life_sq_full_sq'].ix[test['ratio_life_sq_full_sq'] > 1],test['ratio_life_sq_full_sq'].loc[test['ratio_life_sq_full_sq'] > 1]
0,https://www.kaggle.com/ezyyyy/silly-silly-data,test['ratio_kitch_sq_life_sq'].ix[test['ratio_kitch_sq_life_sq'] < 0],test['ratio_kitch_sq_life_sq'].loc[test['ratio_kitch_sq_life_sq'] < 0]
0,https://www.kaggle.com/ezyyyy/silly-silly-data,test['ratio_kitch_sq_life_sq'].ix[test['ratio_kitch_sq_life_sq'] > 1],test['ratio_kitch_sq_life_sq'].loc[test['ratio_kitch_sq_life_sq'] > 1]
0,https://www.kaggle.com/ezyyyy/silly-silly-data,train['ratio_kitch_sq_full_sq'].ix[train['ratio_kitch_sq_full_sq'] < 0],train['ratio_kitch_sq_full_sq'].loc[train['ratio_kitch_sq_full_sq'] < 0]
0,https://www.kaggle.com/ezyyyy/silly-silly-data,train['ratio_kitch_sq_full_sq'].ix[train['ratio_kitch_sq_full_sq'] > 1],train['ratio_kitch_sq_full_sq'].loc[train['ratio_kitch_sq_full_sq'] > 1]
0,https://www.kaggle.com/ezyyyy/silly-silly-data,test['ratio_kitch_sq_full_sq'].ix[test['ratio_kitch_sq_full_sq'] < 0],test['ratio_kitch_sq_full_sq'].loc[test['ratio_kitch_sq_full_sq'] < 0]
0,https://www.kaggle.com/fzhurd/titanic-suvive20160924v4,combined['FamilySize'].map(lambda s: 1 if 5 <= s else 0),"np.where( 5 <= combined['FamilySize'] , 1 ,0)"
0,https://www.kaggle.com/gilbar/visualizing-data,"train.loc[:, (keep)]","train.ix[:, (keep)]"
0,https://www.kaggle.com/gravity/testing-1,"train.ix[:, (0)]","train.iloc[:, (0)]"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/gunjaagarwal/final-xgboost-try,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']"
0,https://www.kaggle.com/hakeem/stacked-then-averaged-models-0-5697,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.append(np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed, axis=1)"
0,https://www.kaggle.com/hakeem/stacked-then-averaged-models-0-5697,"np.hstack((X, out_of_fold_predictions))","np.append(X, out_of_fold_predictions, axis=1)"
0,https://www.kaggle.com/hakeem/stacked-then-averaged-models-0-5697,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.append(np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed, axis=1)"
0,https://www.kaggle.com/hakeem/stacked-then-averaged-models-0-5697,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.concatenate((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed), axis=1)"
0,https://www.kaggle.com/hakeem/stacked-then-averaged-models-0-5697,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.concatenate((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed), axis=1)"
0,https://www.kaggle.com/happycube/python-ver-of-group-1-and-date-trick,np.where(~g.isnull()),np.nonzero(~g.isnull())
0,https://www.kaggle.com/harshitsaini/clean-character-image,"binary_image.loc[:, (isValid)]","binary_image.ix[:, (isValid)]"
0,https://www.kaggle.com/harshitsaini/kmeans-kernel,"X.loc[:, (isValid)]","X.ix[:, (isValid)]"
0,https://www.kaggle.com/heaviside9/sklearn-linear-regression-benchmark,np.sum(E),(E).sum()
0,https://www.kaggle.com/heaviside9/sklearn-linear-regression-benchmark,np.sum(E),(E).sum()
0,https://www.kaggle.com/heaviside9/sklearn-linear-regression-benchmark,np.sum(E),(E).sum()
0,https://www.kaggle.com/heibankeli/pca-knn,"train.ix[:, (0)]","train.iloc[:, (0)]"
0,https://www.kaggle.com/heibankeli/pca-svm1,"train.ix[:, (0)]","train.iloc[:, (0)]"
0,https://www.kaggle.com/hideki1234/neural-network,"np.hstack((np.zeros((Theta2.shape[0], 1)), Theta2[:, 1:]))","np.append(np.zeros((Theta2.shape[0], 1)), Theta2[:, 1:], axis=1)"
0,https://www.kaggle.com/hideki1234/neural-network,"np.hstack((np.zeros((Theta1.shape[0], 1)), Theta1[:, 1:]))","np.append(np.zeros((Theta1.shape[0], 1)), Theta1[:, 1:], axis=1)"
0,https://www.kaggle.com/hideki1234/neural-network,"np.hstack((np.zeros((Theta2.shape[0], 1)), Theta2[:, 1:]))","np.concatenate((np.zeros((Theta2.shape[0], 1)), Theta2[:, 1:]), axis=1)"
0,https://www.kaggle.com/hideki1234/neural-network,"np.hstack((np.zeros((Theta1.shape[0], 1)), Theta1[:, 1:]))","np.concatenate((np.zeros((Theta1.shape[0], 1)), Theta1[:, 1:]), axis=1)"
0,https://www.kaggle.com/hideki1234/neural-network,Theta1.dot(Xt),"np.tensordot(Theta1,Xt,axes=1)"
0,https://www.kaggle.com/hideki1234/neural-network,Delta3.dot(A2.T),"np.tensordot(Delta3,A2.T,axes=1)"
0,https://www.kaggle.com/hideki1234/neural-network,Delta2.dot(Xt.T),"np.tensordot(Delta2,Xt.T,axes=1)"
0,https://www.kaggle.com/hideki1234/neural-network,np.ones(m),np.empty(m); r2.fill(1)
0,https://www.kaggle.com/hideki1234/neural-network,"np.vstack((a_0, X.T))","np.column_stack((a_0.T, X.T.T)).T"
0,https://www.kaggle.com/huangweijie/kobe-bryant,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)","np.where( df['shot_distance'] < 45 , df['shot_distance'] ,    45)"
0,https://www.kaggle.com/huangweijie/kobe-bryant,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)","np.where( df['time_remaining'] < 3 , 1 ,0)"
0,https://www.kaggle.com/huangweijie/kobe-bryant,"df.apply(lambda row: row['shot_distance'] if row['shot_distance'] < 45 else	    45, axis=1)", df['shot_distance'].apply(lambda row:row if row < 45 else     45)
0,https://www.kaggle.com/huangweijie/kobe-bryant,"df.apply(lambda row: 1 if row['time_remaining'] < 3 else 0, axis=1)", df['time_remaining'].apply(lambda row: 1 if row < 3 else 0)
0,https://www.kaggle.com/iangarland/mnist,"train.ix[:, (0)]","train.iloc[:, (0)]"
0,https://www.kaggle.com/inpefess/xgboost-in-python-with-rmspe,"data.loc[data['StateHoliday'] == 'a', 'StateHoliday']","data.ix[data['StateHoliday'] == 'a', 'StateHoliday']"
0,https://www.kaggle.com/isaac7/talking-script1,np.ones(len(FLS)),np.empty(len(FLS)); r2.fill(1)
0,https://www.kaggle.com/isaac7/visualize-mnist,"train.ix[:, 1:]","train.iloc[:, 1:]"
0,https://www.kaggle.com/isaac7/visualize-mnist,"train.ix[:, (0)]","train.iloc[:, (0)]"
0,https://www.kaggle.com/iviglious/teamysi-titanic-rf-a,"main_all_df.ix[main_all_df.Survived.isnull() == False, 'Survived']","main_all_df.loc[main_all_df.Survived.isnull() == False, 'Survived']"
0,https://www.kaggle.com/iwasred/pubg-finish-placement-prediction-1,"train_data.loc[:, (l)]","train_data.ix[:, (l)]"
0,https://www.kaggle.com/izzul02/age-gender-breed-and-name-vs-outcome,np.sum(feature_values_cat[outcome_cat == unique_outcomes[i]].isnull()),np.count_nonzero(feature_values_cat[outcome_cat == unique_outcomes[i]].isnull())
0,https://www.kaggle.com/izzul02/age-gender-breed-and-name-vs-outcome,np.sum(feature_values_cat[outcome_cat == unique_outcomes[i]].notnull()),np.count_nonzero(feature_values_cat[outcome_cat == unique_outcomes[i]].notnull())
0,https://www.kaggle.com/izzul02/age-gender-breed-and-name-vs-outcome,np.sum(feature_values_dog[outcome_dog == unique_outcomes[i]].isnull()),np.count_nonzero(feature_values_dog[outcome_dog == unique_outcomes[i]].isnull())
0,https://www.kaggle.com/izzul02/age-gender-breed-and-name-vs-outcome,np.sum(feature_values_dog[outcome_dog == unique_outcomes[i]].notnull()),np.count_nonzero(feature_values_dog[outcome_dog == unique_outcomes[i]].notnull())
0,https://www.kaggle.com/izzul02/age-gender-breed-and-name-vs-outcome,"np.sum(fractions_dog[1:, :1], axis=1)","np.einsum('ij->i',fractions_dog[1:, :1])"
0,https://www.kaggle.com/janekk/xgboost-with-optimized-offsets,np.ones(num_classes),np.empty(num_classes); r2.fill(1)
0,https://www.kaggle.com/janekk/xgboost-with-optimized-offsets,"np.vstack((train_preds, train_preds, train['Response'].values))","np.column_stack((train_preds.T, train_preds.T, train['Response'].values.T)).T"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/jasonbenner/adaboost-basic,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/jasonbenner/ridge-regression-cv-tutorial,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']"
0,https://www.kaggle.com/jaycb26/xgbryant,"data.apply(lambda row: 28 if row['shot_distance'] > 28 else row[	    'shot_distance'], axis=1)","np.where( data['shot_distance'] > 28 , 28 ,data[	    'shot_distance'])"
0,https://www.kaggle.com/jeshugames2/classification-using-svm,"np.hstack((p_id, y_pred))","np.append(p_id, y_pred, axis=1)"
0,https://www.kaggle.com/jeshugames2/classification-using-svm,"np.hstack((p_id, y_pred))","np.concatenate((p_id, y_pred), axis=1)"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/jtlowery/silly-silly-data,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']"
0,https://www.kaggle.com/judata/talkingdata-xgb-param-tuning-rdm-sampling,"np.sum(np.logical_and(y_pred == 1, y_test == 0))","np.count_nonzero(np.logical_and(y_pred == 1, y_test == 0))"
0,https://www.kaggle.com/justdoit/xgboost-in-python-with-rmspe,df[featureCol].map(lambda x: 1 if x == val else 0),"np.where( df[featureCol] == val , 1 ,0)"
0,https://www.kaggle.com/justdoit/xgboost-in-python-with-rmspe,data['StoreType'].map(lambda y: 1 if y == x else 0),"np.where( data['StoreType'] == x , 1 ,0)"
0,https://www.kaggle.com/justfor/bench-stacked-generalization,"test.ix[:, ('Id')]","test.loc[:, ('Id')]"
0,https://www.kaggle.com/justfor/bench-stacked-generalization,"train.ix[:, ('Id')]","train.loc[:, ('Id')]"
0,https://www.kaggle.com/justfor/bench-stacked-generalization,"np.hstack((testCatVecX, testNumX))","np.append(testCatVecX, testNumX, axis=1)"
0,https://www.kaggle.com/justfor/bench-stacked-generalization,"np.hstack((testCatVecX, testNumX))","np.concatenate((testCatVecX, testNumX), axis=1)"
0,https://www.kaggle.com/justinabel/prud-1,"train_sample.ix[:, ('Response')]","train_sample.loc[:, ('Response')]"
0,https://www.kaggle.com/justinabel/prud-1,"X.ix[:, (column)]","X.loc[:, (column)]"
0,https://www.kaggle.com/justinabel/prud-1,"X.ix[:, (column)]","X.loc[:, (column)]"
0,https://www.kaggle.com/justinabel/prud-1,"X.ix[nans, column]","X.loc[nans, column]"
0,https://www.kaggle.com/justinabel/prud-1,"test_sample.ix[:, (column)]","test_sample.loc[:, (column)]"
0,https://www.kaggle.com/justinabel/prud-1,"test_sample.ix[:, (column)]","test_sample.loc[:, (column)]"
0,https://www.kaggle.com/justinabel/prud-1,"test_sample.ix[nans, column]","test_sample.loc[nans, column]"
0,https://www.kaggle.com/justinabel/prud-1,"train.ix[10001:10010, ('Response')]","train.loc[10001:10010, ('Response')]"
0,https://www.kaggle.com/jvallej/agregaciones-previouse-applications,"data1.loc[:, (['SK_ID_CURR'])]","data1.ix[:, (['SK_ID_CURR'])]"
0,https://www.kaggle.com/khyh00/xkcd-style-test,np.ones(100),np.empty(100); r2.fill(1)
0,https://www.kaggle.com/kmalev/randomforest-alternative-coding-example,"encoded_column.ix[:, :]","encoded_column.loc[:, :]"
0,https://www.kaggle.com/kmalev/randomforest-alternative-coding-example,"encoded_column.ix[:, :]","encoded_column.loc[:, :]"
0,https://www.kaggle.com/knageswara78/my-tatanic-python-solution,np.nonzero(results['rank_test_%s' % scorer] == 1),np.where(results['rank_test_%s' % scorer] == 1)
0,https://www.kaggle.com/knageswara78/my-tatanic-python-solution,np.nonzero(results['rank_test_%s' % scorer] == 1),np.where(results['rank_test_%s' % scorer] == 1)
0,https://www.kaggle.com/kobakhit/xgboost,"train.loc[(train['Demanda_uni_equil'] < 51), :]","train.ix[(train['Demanda_uni_equil'] < 51), :]"
0,https://www.kaggle.com/kumareshd/chicken-momos-plate-1,"e1.loc[e1.isnull()['appcounts'] == True, 'appcounts']","e1.ix[e1.isnull()['appcounts'] == True, 'appcounts']"
0,https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,np.transpose(1 - true_output_y).dot(np.log(1 - h)),"np.tensordot(np.transpose(1 - true_output_y),np.log(1 - h),axes=1)"
0,https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,np.transpose(-true_output_y).dot(np.log(h)),"np.tensordot(np.transpose(-true_output_y),np.log(h),axes=1)"
0,https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,input_x.dot(theta),"np.tensordot(input_x,theta,axes=1)"
0,https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,input_x.dot(theta),"np.tensordot(input_x,theta,axes=1)"
0,https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,"np.ones((train_x.shape[0], 1))","np.empty((train_x.shape[0], 1)); r2.fill(1)"
0,https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,np.where(p >= 0.5),np.nonzero(p >= 0.5)
0,https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,np.where(p != true_output_y),np.nonzero(p != true_output_y)
0,https://www.kaggle.com/kyleingraham/titanic-survivor-prediction-scikit-learn,"X.loc[:, (X.columns[X.columns.isin(self.columns)])]","X.ix[:, (X.columns[X.columns.isin(self.columns)])]"
0,https://www.kaggle.com/lancerts/combined,np.where(queries[10158:] == q),np.nonzero(queries[10158:] == q)
0,https://www.kaggle.com/laparrala/first,data.ix[891:],data.iloc[891:]
0,https://www.kaggle.com/lesibius/naive-bayes-time-only,"df_train_pred.ix[df_train_pred.Year == 2003, 'Category']","df_train_pred.loc[df_train_pred.Year == 2003, 'Category']"
0,https://www.kaggle.com/lesibius/naive-bayes-time-only,"df_test.ix[df_test.Year == y, 'Id']","df_test.loc[df_test.Year == y, 'Id']"
0,https://www.kaggle.com/lesibius/naive-bayes-time-only,"df_train_pred.ix[df_train_pred.Year == y1, 'Category']","df_train_pred.loc[df_train_pred.Year == y1, 'Category']"
0,https://www.kaggle.com/lesibius/naive-bayes-time-only,"df_test.ix[df_test.Year == y2, 'Id']","df_test.loc[df_test.Year == y2, 'Id']"
0,https://www.kaggle.com/lesibius/naive-bayes-time-only,"df_train.loc[:, (['Year', 'Category'])]","df_train.ix[:, (['Year', 'Category'])]"
0,https://www.kaggle.com/lesibius/naive-bayes-time-only,"df_test.loc[:, (['Id', 'Year', 'Hour', 'Month', 'DayOfWeek'])]","df_test.ix[:, (['Id', 'Year', 'Hour', 'Month', 'DayOfWeek'])]"
0,https://www.kaggle.com/lesibius/time-only-sv,"df_train.ix[:, 1:]","df_train.iloc[:, 1:]"
0,https://www.kaggle.com/lesibius/time-only-sv,"df_train_pred.ix[:, ('Category')]","df_train_pred.loc[:, ('Category')]"
0,https://www.kaggle.com/lesibius/time-only-sv,"df_test.loc[:, (['Id', 'Year', 'Hour', 'Month', 'DayOfWeek', 'X', 'Y'])]","df_test.ix[:, (['Id', 'Year', 'Hour', 'Month', 'DayOfWeek', 'X', 'Y'])]"
0,https://www.kaggle.com/lifepreserver/simple-sklearn-randomforestclassifier,df[col].apply(lambda x: hash(str(x))),df[col].map(lambda x: hash(str(x)))
0,https://www.kaggle.com/lindenlu/linden-titanic-script,train_df.query('Survived==1'),train_df.loc[train_df.Survived==1]
0,https://www.kaggle.com/lolalola/miaowuwu,train['price_doc'].ix[train['price_doc'] > int(2.5 * np.exp(supbdd))],train['price_doc'].loc[train['price_doc'] > int(2.5 * np.exp(supbdd))]
0,https://www.kaggle.com/lolalola/miaowuwu,train['price_doc'].ix[train['price_doc'] < int(np.exp(13.5))],train['price_doc'].loc[train['price_doc'] < int(np.exp(13.5))]
0,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']"
0,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']"
0,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']"
0,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']"
0,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]"
0,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]"
0,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/lolalola/miaowuwu,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']"
0,https://www.kaggle.com/luistangui/titanicpy,s.query('(Pclass == 1 or Pclass == 2) and Sex == 'female),"s.loc[s.Pclass.isin([1, 2]) & (s.Sex =='female')]"
0,https://www.kaggle.com/luistangui/titanicpy,s.query('Pclass == 3 and Sex == 'female' and (Embarked == 'C' or Embarked == 'Q')'),"s.loc[(s.Pclass == 3) & (s.Sex == 'female') & (s.Embarked.isin(['C','Q']))]"
0,https://www.kaggle.com/luistangui/titanicpy, s.query('Pclass == 3 and Sex == 'male' and Embarked == 'C' and Family > 0'), s.loc[(s.Pclass == 3 )&( s.Sex == 'male') &(s.Embarked == 'C') &( s.Family > 0)]
0,https://www.kaggle.com/madraziw/mad-0721-1245,"np.c_[xx.ravel(), yy.ravel()]"," np.hstack([xx.ravel().reshape(len(xx.ravel()),1), yy.ravel().reshape(len(yy.ravel()),1)])"
0,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']"
0,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']"
0,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]"
0,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]"
0,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']"
0,https://www.kaggle.com/marbel/keras-dummy-vars,np.array(train_values),np.concatenate([train_values])
0,https://www.kaggle.com/melisbiyikli/titanic-data-sets,all_datas.ix[891:],all_datas.iloc[891:]
0,https://www.kaggle.com/melisbiyikli/titanic-data-sets,all_datas['FamilySize'].map(lambda s: 1 if 5 <= s else 0),"np.where( 5 <= all_datas['FamilySize'] , 1 ,0)"
0,https://www.kaggle.com/mhooreman/test-new-script,"tmp.loc[:, ([c for c in range(nBreedsMax)])]","tmp.ix[:, ([c for c in range(nBreedsMax)])]"
0,https://www.kaggle.com/michaelpawlus/testing-run-errors,all_data.Product_Info_2.str[0],all_data.Product_Info_2.map(lambda x: x[0])
0,https://www.kaggle.com/michaelpawlus/testing-run-errors,all_data.Product_Info_2.str[1],all_data.Product_Info_2.map(lambda x: x[1])
0,https://www.kaggle.com/mingruimingrui/top-3-hakeem-s-script-without-outlier-y-250,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.append(np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed, axis=1)"
0,https://www.kaggle.com/mingruimingrui/top-3-hakeem-s-script-without-outlier-y-250,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.concatenate((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed), axis=1)"
0,https://www.kaggle.com/mjyang/testw,"np.hstack([X, bias])","np.append(X, bias, axis=1)"
0,https://www.kaggle.com/mjyang/testw,"np.hstack([X_test, bias1])","np.append(X_test, bias1, axis=1)"
0,https://www.kaggle.com/mjyang/testw,"np.hstack([Submit, Yhat])","np.append(Submit, Yhat, axis=1)"
0,https://www.kaggle.com/mjyang/testw,"np.hstack([X, bias])","np.concatenate([X, bias], axis=1)"
0,https://www.kaggle.com/mjyang/testw,"np.hstack([X_test, bias1])","np.concatenate([X_test, bias1], axis=1)"
0,https://www.kaggle.com/mjyang/testw,"np.hstack([Submit, Yhat])","np.concatenate([Submit, Yhat], axis=1)"
0,https://www.kaggle.com/mjyang/testw,"np.ones((100, 1))","np.empty((100, 1)); r2.fill(1)"
0,https://www.kaggle.com/mjyang/testw,"np.vstack([X_train, X_class1])","np.column_stack((X_train.T, X_class1.T)).T"
0,https://www.kaggle.com/mjyang/testw,"np.vstack([Y_train, Y_class1])","np.column_stack((Y_train.T, Y_class1.T)).T"
0,https://www.kaggle.com/mjyang/testw,"np.vstack([X_train, X_class1])","np.concatenate([X_train, X_class1], axis=0)"
0,https://www.kaggle.com/mjyang/testw,"np.vstack([Y_train, Y_class1])","np.concatenate([Y_train, Y_class1], axis=0)"
0,https://www.kaggle.com/mmueller/categorical-embedding-with-xgb,np.array(list(zip(*sorted(val.items())))),np.concatenate([list(zip(*sorted(val.items())))])
0,https://www.kaggle.com/moichiaaron/numpynist-py,theta2.dot(a2),"np.tensordot(theta2,a2,axes=1)"
0,https://www.kaggle.com/moichiaaron/numpynist-py,theta1.dot(a1.T),"np.tensordot(theta1,a1.T,axes=1)"
0,https://www.kaggle.com/moichiaaron/numpynist-py,s2.dot(a1),"np.tensordot(s2,a1,axes=1)"
0,https://www.kaggle.com/moichiaaron/numpynist-py,"np.ones((np.size(y), nlabels))","np.empty((np.size(y), nlabels)); r2.fill(1)"
0,https://www.kaggle.com/mosa94/linear-regression-implementations,np.ones(np.shape(trainX)[0]),np.empty(np.shape(trainX)[0]); r2.fill(1)
0,https://www.kaggle.com/mshankarrao/svmpca-0-8-rbf,"train.ix[:, (0)]","train.iloc[:, (0)]"
0,https://www.kaggle.com/muhammadzaman/knn-argpartition-and-value-of-k,"data.ix[:, 1:-1]","data.iloc[:, 1:-1]"
0,https://www.kaggle.com/muhammadzaman/knn-argpartition-and-value-of-k,"data.ix[:, (-1)]","data.iloc[:, (-1)]"
0,https://www.kaggle.com/muthu4all/recognize-the-number,np.array(train),np.concatenate([train])
0,https://www.kaggle.com/nabilnobel/if-product-exists-in-last-4-order,"orders_all.loc[orders_all['order_number'] > 3, 'n_3']","orders_all.ix[orders_all['order_number'] > 3, 'n_3']"
0,https://www.kaggle.com/nagadomi/nearest-neighbor-search,"train_x.ix[:, (0)]","train_x.iloc[:, (0)]"
0,https://www.kaggle.com/naropian/narnar-test,"df_train.ix[:, (df_train.columns != 'SalePrice')]","df_train.loc[:, (df_train.columns != 'SalePrice')]"
0,https://www.kaggle.com/nbose2/tests,"df_train.ix[:, (df_train.columns != 'SalePrice')]","df_train.loc[:, (df_train.columns != 'SalePrice')]"
0,https://www.kaggle.com/nemethpeter42/valami,"df_Train.loc[:, (['Cliente_ID', 'Demanda_uni_equil'])]","df_Train.ix[:, (['Cliente_ID', 'Demanda_uni_equil'])]"
0,https://www.kaggle.com/netguyhyun/netguytest,np.nonzero([(i == y) for i in y_train]),np.where([(i == y) for i in y_train])
0,https://www.kaggle.com/newhardwarefound/artificial-neural-network,"np.dot(w, activation)","np.einsum('ij,jm->im',w, activation)"
0,https://www.kaggle.com/nightshade7/allstatetest,"np.hstack((catData.T, df[cols[117:nFeat - 1]].as_matrix()))","np.append(catData.T, df[cols[117:nFeat - 1]].as_matrix(), axis=1)"
0,https://www.kaggle.com/niladri18/usinng-logistic-regression,"df.ix[:, ('srch_adults_cnt')]","df.loc[:, ('srch_adults_cnt')]"
0,https://www.kaggle.com/niladri18/usinng-logistic-regression,"df.ix[:, ('srch_destination_id')]","df.loc[:, ('srch_destination_id')]"
0,https://www.kaggle.com/niladri18/usinng-logistic-regression,"df.ix[:, ('srch_ci')]","df.loc[:, ('srch_ci')]"
0,https://www.kaggle.com/niladri18/usinng-logistic-regression,"df.ix[:, ('srch_co')]","df.loc[:, ('srch_co')]"
0,https://www.kaggle.com/nilzone/lgbm-with-mean-encodings,"alldata.loc[(alldata.is_test), :]","alldata.ix[(alldata.is_test), :]"
0,https://www.kaggle.com/nilzone/lightgbm,"alldata.loc[:, (col)]","alldata.ix[:, (col)]"
0,https://www.kaggle.com/nithin98/pubg-v5,np.sum(eig_val),(eig_val).sum()
0,https://www.kaggle.com/nkdxczh/test-py,np.where(clf.feature_importances_ > 0),np.nonzero(clf.feature_importances_ > 0)
0,https://www.kaggle.com/nolanhoney/nolan-honey-comp-3122-assignment-3,"training_data.loc[:, 'MSSubClass':'SaleCondition']","training_data.ix[:, 'MSSubClass':'SaleCondition']"
0,https://www.kaggle.com/numberswithkartik/so-you-think-xgboost-will-work,"np.c_[actual, pred, np.arange(len(actual))]","np.hstack([actual.reshape(len(actual),1),pred.reshape(len(pred),1),np.arange(len(actual)).reshape(len(actual),1)])"
0,https://www.kaggle.com/ogrellier/multi-core-aggregations,np.sum(b_s),"np.einsum('i->',b_s)"
0,https://www.kaggle.com/ogrellier/multi-core-aggregations,np.sum(a_s),"np.einsum('i->',a_s)"
0,https://www.kaggle.com/ogrellier/multi-core-aggregations,np.sum(a_s),"np.einsum('i->',a_s)"
0,https://www.kaggle.com/ogrellier/multi-core-aggregations,np.sum(b_s),(b_s).sum()
0,https://www.kaggle.com/ogrellier/multi-core-aggregations,np.sum(b_s),(b_s).sum()
0,https://www.kaggle.com/ogrellier/multi-core-aggregations,np.sum(b_s),(b_s).sum()
0,https://www.kaggle.com/ogrellier/multi-core-aggregations,np.sum(b_s),(b_s).sum()
0,https://www.kaggle.com/ogrellier/multi-core-aggregations,"np.zeros((len(df), np.unique(y).shape[0]))","np.empty((len(df), np.unique(y).shape[0])); r2[:]= 0"
0,https://www.kaggle.com/ogrellier/plasticc-in-a-kernel-meta-and-data,"np.sum(y_ohe.values * y_p_log, axis=0)","np.einsum('ij->j',y_ohe.values * y_p_log)"
0,https://www.kaggle.com/olttwa/titanic-logistic-regression-v1,"np.ones((m, n + 1))","np.empty((m, n + 1)); r2.fill(1)"
0,https://www.kaggle.com/omijn1/titanic-survivor-prediction,"X_test.loc[:, (['Fare'])]","X_test.ix[:, (['Fare'])]"
0,https://www.kaggle.com/papadopc/neural-nets-and-address-featurization,"address_features.ix[:, :]","address_features.loc[:, :]"
0,https://www.kaggle.com/papadopc/neural-nets-and-address-featurization,"dummy_ranks_DAY.ix[:, :]","dummy_ranks_DAY.loc[:, :]"
0,https://www.kaggle.com/papadopc/neural-nets-and-address-featurization,"dummy_ranks_PD.ix[:, :]","dummy_ranks_PD.loc[:, :]"
0,https://www.kaggle.com/pappukrjha/log-reg-auc-98795,"predTest.ix[:, ('id')]","predTest.loc[:, ('id')]"
0,https://www.kaggle.com/pappukrjha/log-reg-auc-98795,"predValid.ix[:, (col)]","predValid.loc[:, (col)]"
0,https://www.kaggle.com/pappukrjha/log-reg-auc-98795,"predTest.ix[:, (col)]","predTest.loc[:, (col)]"
0,https://www.kaggle.com/pappukrjha/rf-tfidf-word-char-lb-945,"predTest.ix[:, ('id')]","predTest.loc[:, ('id')]"
0,https://www.kaggle.com/pappukrjha/rf-tfidf-word-char-lb-945,"predValid.ix[:, (col)]","predValid.loc[:, (col)]"
0,https://www.kaggle.com/pappukrjha/rf-tfidf-word-char-lb-945,"predTest.ix[:, (col)]","predTest.loc[:, (col)]"
0,https://www.kaggle.com/paullo0106/knn-accelerated-v3,np.vstack(preds_list),"np.concatenate(preds_list, axis=0)"
0,https://www.kaggle.com/piplimoon/leaderboard-0-8134,"df_combo.loc[:, (['Cabin'])]","df_combo.ix[:, (['Cabin'])]"
0,https://www.kaggle.com/piplimoon/leaderboard-0-8134,"df_combo.loc[mask_Age, ['Title', 'Sex', 'Pclass']]","df_combo.ix[mask_Age, ['Title', 'Sex', 'Pclass']]"
0,https://www.kaggle.com/plantsgo/solution-public-0-471-private-0-505,np.sum(pr * weight),"np.einsum('i->',pr * weight)"
0,https://www.kaggle.com/poslegm/pca-svm-97-8-accuracy,"train.ix[:, 'label':'label']","train.loc[:, 'label':'label']"
0,https://www.kaggle.com/prashantkikani/ensembling-has-always-been-the-answer,"df.loc[(testdex), :]","df.ix[(testdex), :]"
0,https://www.kaggle.com/prashantkikani/ensembling-has-always-been-the-answer,"df.loc[traindex, vocab]","df.ix[traindex, vocab]"
0,https://www.kaggle.com/prashantkikani/ensembling-has-always-been-the-answer,train.ix[trn_idx],train.loc[trn_idx]
0,https://www.kaggle.com/prashantkikani/ensembling-has-always-been-the-answer,train.ix[val_idx],train.loc[val_idx]
0,https://www.kaggle.com/prashantkikani/home-rf-et-xgb-cb-stack-oof1-lb-0-789,"credit_card_df.loc[most_recent_index, cat_feats]","credit_card_df.ix[most_recent_index, cat_feats]"
0,https://www.kaggle.com/prashantkikani/home-rf-et-xgb-cb-stack-oof1-lb-0-789,"bureau_balance_df.loc[(most_recent_index), :]","bureau_balance_df.ix[(most_recent_index), :]"
0,https://www.kaggle.com/prashantkikani/home-rf-et-xgb-cb-stack-oof1-lb-0-789,"pos_cash_df.loc[most_recent_index, cat_feats]","pos_cash_df.ix[most_recent_index, cat_feats]"
0,https://www.kaggle.com/prototype96/mytest6,"data_file.ix[:, 1:]","data_file.iloc[:, 1:]"
0,https://www.kaggle.com/rakhlin/abcde,"df.loc[:, (['DOCAone', 'DOCAtwo', 'DOCAthree'])]","df.ix[:, (['DOCAone', 'DOCAtwo', 'DOCAthree'])]"
0,https://www.kaggle.com/rakhlin/abcde,"df.loc[:, (['p0_IsoBDT', 'p1_IsoBDT', 'p2_IsoBDT'])]","df.ix[:, (['p0_IsoBDT', 'p1_IsoBDT', 'p2_IsoBDT'])]"
0,https://www.kaggle.com/rakhlin/ultra-fast-grid-knn-model,np.where(d > g.th),np.nonzero(d > g.th)
0,https://www.kaggle.com/rakhlin/ultra-fast-grid-knn-model,np.where(d > g.th),np.nonzero(d > g.th)
0,https://www.kaggle.com/rakhlin/ultra-fast-grid-knn-model,np.where(d > g.th),np.nonzero(d > g.th)
0,https://www.kaggle.com/rakhlin/ultra-fast-grid-knn-model,np.where(d > g.th),np.nonzero(d > g.th)
0,https://www.kaggle.com/rchitic17/titanic-r-to-python,"full.loc[[61, 829], 'Embarked']","full.ix[[61, 829], 'Embarked']"
0,https://www.kaggle.com/reyhaneh/titanic-s,np.where(bb['Embarked'] != train_df['Embarked']),np.nonzero(bb['Embarked'] != train_df['Embarked'])
0,https://www.kaggle.com/rom1m201363/road-grid-and-backpropagated-dijkstra-with-pytorch,np.where(closest_pickup != closest_dropoff),np.nonzero(closest_pickup != closest_dropoff)
0,https://www.kaggle.com/rtmink/cs-145-project-2c,"np.hstack((x_num_data, vec_x_cat_data))","np.append(x_num_data, vec_x_cat_data, axis=1)"
0,https://www.kaggle.com/rtmink/cs-145-project-2c,"np.hstack((x_num_data, vec_x_cat_data))","np.concatenate((x_num_data, vec_x_cat_data), axis=1)"
0,https://www.kaggle.com/rtmink/test-101,"np.hstack((x_num_test, vec_x_cat_test))","np.concatenate((x_num_test, vec_x_cat_test), axis=1)"
0,https://www.kaggle.com/rtmink/test-1011,"np.hstack((x_num_data, vec_x_cat_data))","np.append(x_num_data, vec_x_cat_data, axis=1)"
0,https://www.kaggle.com/rtmink/test-1011,"np.hstack((x_num_test, vec_x_cat_test))","np.concatenate((x_num_test, vec_x_cat_test), axis=1)"
0,https://www.kaggle.com/safavieh/median-estimation-by-fibonacci-et-al-lb-44-9,np.where(Visits < 1),np.nonzero(Visits < 1)
0,https://www.kaggle.com/saihttam/understanding-rmspe,"np.ones(shape=(nsamples, 1))","np.empty(shape=(nsamples, 1)); r2.fill(1)"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Aggressive', 'Aggressive']","train.loc[train.OutcomeSubtype == 'Aggressive', 'Aggressive']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'At Vet', 'At Vet']","train.loc[train.OutcomeSubtype == 'At Vet', 'At Vet']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Barn', 'Barn']","train.loc[train.OutcomeSubtype == 'Barn', 'Barn']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Behavior', 'Behavior']","train.loc[train.OutcomeSubtype == 'Behavior', 'Behavior']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Court/Investigation', 'Court/Investigation']","train.loc[train.OutcomeSubtype == 'Court/Investigation', 'Court/Investigation']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Enroute', 'Enroute']","train.loc[train.OutcomeSubtype == 'Enroute', 'Enroute']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Foster', 'Foster']","train.loc[train.OutcomeSubtype == 'Foster', 'Foster']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'In Foster', 'In Foster']","train.loc[train.OutcomeSubtype == 'In Foster', 'In Foster']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'In Kennel', 'In Kennel']","train.loc[train.OutcomeSubtype == 'In Kennel', 'In Kennel']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'In Surgery', 'In Surgery']","train.loc[train.OutcomeSubtype == 'In Surgery', 'In Surgery']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Medical', 'Medical']","train.loc[train.OutcomeSubtype == 'Medical', 'Medical']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Offsite', 'Offsite']","train.loc[train.OutcomeSubtype == 'Offsite', 'Offsite']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Partner', 'Partner']","train.loc[train.OutcomeSubtype == 'Partner', 'Partner']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Rabies Risk', 'Rabies Risk']","train.loc[train.OutcomeSubtype == 'Rabies Risk', 'Rabies Risk']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'SCRP', 'SCRP']","train.loc[train.OutcomeSubtype == 'SCRP', 'SCRP']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeSubtype == 'Suffering', 'Suffering']","train.loc[train.OutcomeSubtype == 'Suffering', 'Suffering']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeType == 'Return_to_owner', 'Target']","train.loc[train.OutcomeType == 'Return_to_owner', 'Target']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeType == 'Euthanasia', 'Target']","train.loc[train.OutcomeType == 'Euthanasia', 'Target']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeType == 'Adoption', 'Target']","train.loc[train.OutcomeType == 'Adoption', 'Target']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeType == 'Transfer', 'Target']","train.loc[train.OutcomeType == 'Transfer', 'Target']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.OutcomeType == 'Died', 'Target']","train.loc[train.OutcomeType == 'Died', 'Target']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.AnimalType == 'Dog', 'AnimalType_cat']","train.loc[train.AnimalType == 'Dog', 'AnimalType_cat']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.AnimalType == 'Cat', 'AnimalType_cat']","train.loc[train.AnimalType == 'Cat', 'AnimalType_cat']"
0,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.AnimalType == 'Dog', 'AnimalType_cat']","test.loc[test.AnimalType == 'Dog', 'AnimalType_cat']"
0,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.AnimalType == 'Cat', 'AnimalType_cat']","test.loc[test.AnimalType == 'Cat', 'AnimalType_cat']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Intact Female', 'SexuponOutcome_cat']","train.loc[train.SexuponOutcome == 'Intact Female', 'SexuponOutcome_cat']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Spayed Female', 'SexuponOutcome_cat']","train.loc[train.SexuponOutcome == 'Spayed Female', 'SexuponOutcome_cat']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Neutered Male', 'SexuponOutcome_cat']","train.loc[train.SexuponOutcome == 'Neutered Male', 'SexuponOutcome_cat']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Intact Male', 'SexuponOutcome_cat']","train.loc[train.SexuponOutcome == 'Intact Male', 'SexuponOutcome_cat']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Unknown', 'SexuponOutcome_cat']","train.loc[train.SexuponOutcome == 'Unknown', 'SexuponOutcome_cat']"
0,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Intact Female', 'SexuponOutcome_cat']","test.loc[test.SexuponOutcome == 'Intact Female', 'SexuponOutcome_cat']"
0,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Spayed Female', 'SexuponOutcome_cat']","test.loc[test.SexuponOutcome == 'Spayed Female', 'SexuponOutcome_cat']"
0,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Neutered Male', 'SexuponOutcome_cat']","test.loc[test.SexuponOutcome == 'Neutered Male', 'SexuponOutcome_cat']"
0,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Intact Male', 'SexuponOutcome_cat']","test.loc[test.SexuponOutcome == 'Intact Male', 'SexuponOutcome_cat']"
0,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Unknown', 'SexuponOutcome_cat']","test.loc[test.SexuponOutcome == 'Unknown', 'SexuponOutcome_cat']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Intact Female', 'Type_sex']","train.loc[train.SexuponOutcome == 'Intact Female', 'Type_sex']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Spayed Female', 'Type_sex']","train.loc[train.SexuponOutcome == 'Spayed Female', 'Type_sex']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Neutered Male', 'Type_sex']","train.loc[train.SexuponOutcome == 'Neutered Male', 'Type_sex']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Intact Male', 'Type_sex']","train.loc[train.SexuponOutcome == 'Intact Male', 'Type_sex']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Unknown', 'Type_sex']","train.loc[train.SexuponOutcome == 'Unknown', 'Type_sex']"
0,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Intact Female', 'Type_sex']","test.loc[test.SexuponOutcome == 'Intact Female', 'Type_sex']"
0,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Spayed Female', 'Type_sex']","test.loc[test.SexuponOutcome == 'Spayed Female', 'Type_sex']"
0,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Neutered Male', 'Type_sex']","test.loc[test.SexuponOutcome == 'Neutered Male', 'Type_sex']"
0,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Intact Male', 'Type_sex']","test.loc[test.SexuponOutcome == 'Intact Male', 'Type_sex']"
0,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Unknown', 'Type_sex']","test.loc[test.SexuponOutcome == 'Unknown', 'Type_sex']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Intact Female', 'sprayed']","train.loc[train.SexuponOutcome == 'Intact Female', 'sprayed']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Spayed Female', 'sprayed']","train.loc[train.SexuponOutcome == 'Spayed Female', 'sprayed']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Neutered Male', 'sprayed']","train.loc[train.SexuponOutcome == 'Neutered Male', 'sprayed']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Intact Male', 'sprayed']","train.loc[train.SexuponOutcome == 'Intact Male', 'sprayed']"
0,https://www.kaggle.com/samadhi/preprocessdata,"train.ix[train.SexuponOutcome == 'Unknown', 'sprayed']","train.loc[train.SexuponOutcome == 'Unknown', 'sprayed']"
0,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Intact Female', 'sprayed']","test.loc[test.SexuponOutcome == 'Intact Female', 'sprayed']"
0,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Spayed Female', 'sprayed']","test.loc[test.SexuponOutcome == 'Spayed Female', 'sprayed']"
0,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Neutered Male', 'sprayed']","test.loc[test.SexuponOutcome == 'Neutered Male', 'sprayed']"
0,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Intact Male', 'sprayed']","test.loc[test.SexuponOutcome == 'Intact Male', 'sprayed']"
0,https://www.kaggle.com/samadhi/preprocessdata,"test.ix[test.SexuponOutcome == 'Unknown', 'sprayed']","test.loc[test.SexuponOutcome == 'Unknown', 'sprayed']"
0,https://www.kaggle.com/saurabhp75/titanicexcercise1,combined['FamilySize'].map(lambda s: 1 if 5 <= s else 0),"np.where( 5 <= combined['FamilySize'] , 1 ,0)"
0,https://www.kaggle.com/scirpus/benouilli-naive-bayes,df[columnName].map(lambda y: 1 if y == x else 0),"np.where( df[columnName] == x , 1 ,0)"
0,https://www.kaggle.com/scirpus/genetic-programming-ii-lb-0-662,train.Product_Info_2.str[1:],train.Product_Info_2.map(lambda x: x[1:])
0,https://www.kaggle.com/scirpus/genetic-programming-ii-lb-0-662,train.Product_Info_2.str[0],train.Product_Info_2.map(lambda x: x[0])
0,https://www.kaggle.com/scirpus/genetic-programming-ii-lb-0-662,test.Product_Info_2.str[0],test.Product_Info_2.map(lambda x: x[0])
0,https://www.kaggle.com/scirpus/quick-genetic-programme,"test.loc[:, (col)]","test.ix[:, (col)]"
0,https://www.kaggle.com/sdanaipat/prime,"np.ones(n + 1, dtype=np.bool)","np.empty(n + 1, dtype=np.bool); r2.fill(1)"
0,https://www.kaggle.com/seandot7/mnist-test,"train.ix[:, 1:]","train.iloc[:, 1:]"
0,https://www.kaggle.com/shankarpendse/titanicsurvivortraining,np.ones(X.shape[0]),np.empty(X.shape[0]); r2.fill(1)
0,https://www.kaggle.com/shitalsawant/liner-svm-two-variables-py,"train_df.loc[:, (selected_features)]","train_df.ix[:, (selected_features)]"
0,https://www.kaggle.com/shitalsawant/liner-svm-two-variables-py,"test_df.loc[:, (selected_features)]","test_df.ix[:, (selected_features)]"
0,https://www.kaggle.com/shyamspr/backward-elimination,"np.ones((891, 1))","np.empty((891, 1)); r2.fill(1)"
0,https://www.kaggle.com/silpara/h2o-python-starter,"train_test.loc[(train_test.flag == 1), :]","train_test.ix[(train_test.flag == 1), :]"
0,https://www.kaggle.com/soroushj/tap30-challenge-random-forest-regressor,"np.array((hse, row, col, hod), dtype=np.int32)","np.fromiter((hse, row, col, hod), dtype=np.int32)"
0,https://www.kaggle.com/soutou/new-model-lb-44-6,np.where(Visits < 1),np.nonzero(Visits < 1)
0,https://www.kaggle.com/stacyayaka/cs145,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.append(np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed, axis=1)"
0,https://www.kaggle.com/stacyayaka/cs145,"np.hstack((x_num_data, vec_x_cat_data))","np.append(x_num_data, vec_x_cat_data, axis=1)"
0,https://www.kaggle.com/stacyayaka/cs145,"np.hstack((x_num_test, vec_x_cat_test))","np.append(x_num_test, vec_x_cat_test, axis=1)"
0,https://www.kaggle.com/sudalairajkumar/rf-multilabel-framework-lb-0-022475,"np.hstack([train_X, temp_train_X])","np.append(train_X, temp_train_X, axis=1)"
0,https://www.kaggle.com/sudalairajkumar/rf-multilabel-framework-lb-0-022475,"np.hstack([train_X, temp_train_X])","np.concatenate([train_X, temp_train_X], axis=1)"
0,https://www.kaggle.com/sudalairajkumar/rf-multilabel-framework-lb-0-022475,"np.hstack([test_X, temp_test_X])","np.concatenate([test_X, temp_test_X], axis=1)"
0,https://www.kaggle.com/sundancekid/sctryout,np.array(train),np.concatenate([train])
0,https://www.kaggle.com/sundancekid/sctryout,np.array(labels),np.concatenate([labels])
0,https://www.kaggle.com/swkim94/test77,"np.c_[xx.ravel(), yy.ravel(), zz.ravel()]","np.hstack([xx.ravel().reshape(len(xx.ravel()),1), yy.ravel().reshape(len(xx.ravel()),1), zz.ravel().reshape(len(xx.ravel()),1)])"
0,https://www.kaggle.com/tedspikes/titanic-test,"train.loc[:, (['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare'])]","train.ix[:, (['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare'])]"
0,https://www.kaggle.com/tflana/simple-keras-feed-fwd-nn,np.array(full_df[coln]),np.concatenate([full_df[coln]])
0,https://www.kaggle.com/thamagame/titanic-with-learning-curves,"train.ix[:, 'Pclass':]","train.loc[:, 'Pclass':]"
0,https://www.kaggle.com/thamagame/titanic-with-learning-curves,"test.ix[:, 'Pclass':]","test.loc[:, 'Pclass':]"
0,https://www.kaggle.com/thamagame/titanic-with-learning-curves,"train_temp.ix[:, 'Pclass':]","train_temp.loc[:, 'Pclass':]"
0,https://www.kaggle.com/tilii7/you-want-outliers-we-got-them-outliers,"np.sum((points - median) ** 2, axis=-1)",((points - median) ** 2).sum( axis=-1)
0,https://www.kaggle.com/tilii7/you-want-outliers-we-got-them-outliers,"np.vstack((target, target_pred))","np.column_stack((target.T, target_pred.T)).T"
0,https://www.kaggle.com/toadtoadtoad/newwwww,data.ix[891:],data.iloc[891:]
0,https://www.kaggle.com/tobikaggle/stacked-then-averaged-models-0-5697,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.append(np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed, axis=1)"
0,https://www.kaggle.com/tommyttf/try-to-learn,"train.loc[:, 'pixel0':]","train.ix[:, 'pixel0':]"
0,https://www.kaggle.com/tommyttf/try-to-learn,"test.loc[:, 'pixel0':]","test.ix[:, 'pixel0':]"
0,https://www.kaggle.com/tranquangan/my-first-experiment-with-kaggle,family['FamilySize'].map(lambda s: 1 if 5 <= s else 0),"np.where( 5 <= family['FamilySize'] , 1 ,0)"
0,https://www.kaggle.com/tunguz/pca-svm1,"train.ix[:, (0)]","train.iloc[:, (0)]"
0,https://www.kaggle.com/tunguz/script-competition-facebook-v-2-2,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T"
0,https://www.kaggle.com/tuomastik/pca-visualization,np.where(y_train == class_ix),np.nonzero(y_train == class_ix)
0,https://www.kaggle.com/uj2295/xgboost-for-compset,df_train[column].astype(str),df_train[column].apply(str)
0,https://www.kaggle.com/unlikelybutpossible/scratch1,"alldata.ix[kids_no_age, 'Age2']","alldata.loc[kids_no_age, 'Age2']"
0,https://www.kaggle.com/unlikelybutpossible/scratch1,"alldata.ix[dr_no_age, 'Age2']","alldata.loc[dr_no_age, 'Age2']"
0,https://www.kaggle.com/unlikelybutpossible/scratch1,"alldata.ix[ms_no_age, 'Age2']","alldata.loc[ms_no_age, 'Age2']"
0,https://www.kaggle.com/unlikelybutpossible/scratch1,"alldata.ix[mr_no_age, 'Age2']","alldata.loc[mr_no_age, 'Age2']"
0,https://www.kaggle.com/unlikelybutpossible/scratch1,"alldata.ix[miss_no_age, 'Age2']","alldata.loc[miss_no_age, 'Age2']"
0,https://www.kaggle.com/unlikelybutpossible/scratch1,"alldata.ix[mrs_no_age, 'Age2']","alldata.loc[mrs_no_age, 'Age2']"
0,https://www.kaggle.com/utsavpatel/titanic-test,"np.count_nonzero(titanic.loc[titanic['Pclass'] == 3, 'Survived'].values)","np.sum(titanic.loc[titanic['Pclass'] == 3, 'Survived'].values!=0)"
0,https://www.kaggle.com/utsavpatel/titanic-test,"np.count_nonzero(titanic.loc[titanic['Pclass'] == 2, 'Pclass'].values)","np.sum(titanic.loc[titanic['Pclass'] == 2, 'Pclass'].values!=0)"
0,https://www.kaggle.com/utsavpatel/titanic-test,"np.count_nonzero(titanic.loc[titanic['Pclass'] == 2, 'Survived'].values)","np.sum(titanic.loc[titanic['Pclass'] == 2, 'Survived'].values!=0)"
0,https://www.kaggle.com/utsavpatel/titanic-test,np.where(titanic['Pclass'] == 2),np.nonzero(titanic['Pclass'] == 2)
0,https://www.kaggle.com/v81msk/test1,"df.loc[df['ecology'] == 'no data', ['ecology', 'industrial_km']]","df.ix[df['ecology'] == 'no data', ['ecology', 'industrial_km']]"
0,https://www.kaggle.com/vgerald/predict-claims-severity-v2,"train.ix[:, 'cat1':'cat116']","train.loc[:, 'cat1':'cat116']"
0,https://www.kaggle.com/vgerald/predict-claims-severity-v2,"test.ix[:, 'cont1':'cont14']","test.loc[:, 'cont1':'cont14']"
0,https://www.kaggle.com/vgerald/predict-claims-severity-v2,"test.ix[:, 'cont1':'cont14']","test.loc[:, 'cont1':'cont14']"
0,https://www.kaggle.com/vinhnguyen/evolutionary-algorithms-for-param-tuning,df[featureCol].map(lambda x: 1 if x == val else 0),"np.where( df[featureCol] == val , 1 ,0)"
0,https://www.kaggle.com/vinhnguyen/evolutionary-algorithms-for-param-tuning,data['StoreType'].map(lambda y: 1 if y == x else 0),"np.where( data['StoreType'] == x , 1 ,0)"
0,https://www.kaggle.com/weishyi/titanic,"train.loc[:, (feat_colums)]","train.ix[:, (feat_colums)]"
0,https://www.kaggle.com/weishyi/titanic,"test.loc[:, (feat_colums)]","test.ix[:, (feat_colums)]"
0,https://www.kaggle.com/willjashford/minst-willjashford,"verify_df.loc[row, 'label']","verify_df.at[row, 'label']"
0,https://www.kaggle.com/willjashford/minst-willjashford,"verify_df.loc[row, 'label']","verify_df.at[row, 'label']"
0,https://www.kaggle.com/willjashford/minst-willjashford,"verify_df.loc[row, 'label']","verify_df.at[row, 'label']"
0,https://www.kaggle.com/willjashford/minst-willjashford,"verify_df.loc[row, 'label']","verify_df.at[row, 'label']"
0,https://www.kaggle.com/wonjohnchoi/pca-svm,"train.ix[:, 1:]","train.iloc[:, 1:]"
0,https://www.kaggle.com/wonjohnchoi/pca-svm,"train.ix[:, (0)]","train.iloc[:, (0)]"
0,https://www.kaggle.com/wonjohnchoi/pca-svm,"test.ix[:, :]","test.loc[:, :]"
0,https://www.kaggle.com/wrosinski/boosted-python-xgb-starter-0-0223532-lb,"np.hstack([test_X, temp_test_X])","np.append(test_X, temp_test_X, axis=1)"
0,https://www.kaggle.com/wrosinski/boosted-python-xgb-starter-0-0223532-lb,"np.hstack([train_X, temp_train_X])","np.concatenate([train_X, temp_train_X], axis=1)"
0,https://www.kaggle.com/xcz011/mercedez,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.concatenate((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed), axis=1)"
0,https://www.kaggle.com/xiaoml/bag-of-app-id-python-2-27392,np.ones(len(FLS)),np.empty(len(FLS)); r2.fill(1)
0,https://www.kaggle.com/xiziling/deal-with,"np.hstack((pro_data, XL1))","np.append(pro_data, XL1, axis=1)"
0,https://www.kaggle.com/xiziling/deal-with,"np.hstack((pro_data, XL1))","np.concatenate((pro_data, XL1), axis=1)"
0,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,a_s.sum(),"np.einsum('i->',a_s)"
0,https://www.kaggle.com/yangnanhai/testtest,"np.vstack((train_preds, train_preds, train['Response'].values))","np.column_stack((train_preds.T, train_preds.T, train['Response'].values.T)).T"
0,https://www.kaggle.com/yangnanhai/testtest,all_data.Product_Info_2.str[0],all_data.Product_Info_2.map(lambda x: x[0])
0,https://www.kaggle.com/yangnanhai/testtest,all_data.Product_Info_2.str[1],all_data.Product_Info_2.map(lambda x: x[1])
0,https://www.kaggle.com/yashduvvuru/pytanic,"test.loc[:, (['Cader', 'FamilyId'])]","test.ix[:, (['Cader', 'FamilyId'])]"
0,https://www.kaggle.com/yashduvvuru/pytanic,"test.loc[:, (['PassengerId', 'Survived'])]","test.ix[:, (['PassengerId', 'Survived'])]"
0,https://www.kaggle.com/ybping/digits-recognizer,"train_data.ix[:, 1:]","train_data.iloc[:, 1:]"
0,https://www.kaggle.com/yifanxie/training-set-split-for-cross-validation,np.sum((np.log1p(tr_preds) - np.log1p(tr_test_y)) ** 2),((np.log1p(tr_preds) - np.log1p(tr_test_y)) ** 2).sum()
0,https://www.kaggle.com/ymatioun/lightgbm-v1,np.zeros([len_train]),np.empty([len_train]); r2[:]= 0
0,https://www.kaggle.com/ymatioun/lightgbm-v1,"merged_df['ingredients'].apply(','.join)","merged_df['ingredients'].map(','.join)"
0,https://www.kaggle.com/youngseoklee/digit-recognizer-with-machine-learning,X.loc[:size],X.ix[:size]
0,https://www.kaggle.com/youngseoklee/digit-recognizer-with-machine-learning,y.loc[:size],y.ix[:size]
0,https://www.kaggle.com/youngseoklee/house-price-prediction-with-numeric-only-dataset,"df_test.loc[:, (important_index_wo_price)]","df_test.ix[:, (important_index_wo_price)]"
0,https://www.kaggle.com/ypcfirst/titanic-model-using-logistic-regression,"test.loc[:, (['Pclass', 'Age', 'Sex', 'SibSp', 'Parch', 'Fare', 'Embarked'])]","test.ix[:, (['Pclass', 'Age', 'Sex', 'SibSp', 'Parch', 'Fare', 'Embarked'])]"
0,https://www.kaggle.com/yuyimiao/miaoster,train['price_doc'].ix[train['price_doc'] > int(2.5 * np.exp(supbdd))],train['price_doc'].loc[train['price_doc'] > int(2.5 * np.exp(supbdd))]
0,https://www.kaggle.com/yuyimiao/miaoster,train['price_doc'].ix[train['price_doc'] < int(np.exp(13.5))],train['price_doc'].loc[train['price_doc'] < int(np.exp(13.5))]
0,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']"
0,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[equal_index, 'life_sq']","test.loc[equal_index, 'life_sq']"
0,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'life_sq']","test.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']"
0,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[kitch_is_build_year, 'build_year']","train.loc[kitch_is_build_year, 'build_year']"
0,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'kitch_sq']","train.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'kitch_sq']","test.loc[bad_index, 'kitch_sq']"
0,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'full_sq']","train.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'life_sq']","train.loc[bad_index, 'life_sq']"
0,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]"
0,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'full_sq']","test.loc[bad_index, 'full_sq']"
0,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'build_year']","train.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'build_year']","test.loc[bad_index, 'build_year']"
0,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'num_room']","train.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'num_room']","test.loc[bad_index, 'num_room']"
0,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, ['max_floor', 'floor']]","train.loc[bad_index, ['max_floor', 'floor']]"
0,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'max_floor']","train.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, 'max_floor']","test.loc[bad_index, 'max_floor']"
0,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'floor']","train.loc[bad_index, 'floor']"
0,https://www.kaggle.com/yuyimiao/miaoster,"train.ix[bad_index, 'state']","train.loc[bad_index, 'state']"
0,https://www.kaggle.com/zeroblue/knn-accelerated-v3,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T"
0,https://www.kaggle.com/zeroblue/testing-knn,np.vstack(preds_list),"np.concatenate(preds_list, axis=0)"
0,https://www.kaggle.com/zeroblue/xgb-boost-with-event-data,"df_train_event.loc[fold_mask, ['M', 'F']]","df_train_event.ix[fold_mask, ['M', 'F']]"
0,https://www.kaggle.com/zeroblue/xgboost-with-optimized-offsets,all_data.Product_Info_2.str[0],all_data.Product_Info_2.map(lambda x: x[0])
0,https://www.kaggle.com/zeroblue/xgboost-with-optimized-offsets,all_data.Product_Info_2.str[1],all_data.Product_Info_2.map(lambda x: x[1])
0,https://www.kaggle.com/zeta2191622/how-to-get-a-score-of-0-894-in-two-minutes,"np.full((1000000, 1000), -1, dtype=np.int16)","np.empty((1000000, 1000), dtype=np.int16) ; r2[:] = -1"
0,https://www.kaggle.com/zeta2191622/how-to-get-a-score-of-0-894-in-two-minutes,"np.full((1000, 1000000), -1, dtype=np.int16)","np.empty((1000, 1000000), dtype=np.int16) ; r2[:] = -1"
0,https://www.kaggle.com/zgo2016/titanic-logistic-regression,"np.ones((m, n + 1))","np.empty((m, n + 1)); r2.fill(1)"
0,https://www.kaggle.com/zhoulaiqing/feature-starter,np.ones(gatrain.shape[0]),np.empty(gatrain.shape[0]); r2.fill(1)
0,https://www.kaggle.com/zhoulaiqing/feature-starter,np.ones(gatrain.shape[0]),np.empty(gatrain.shape[0]); r2.fill(1)
0,https://www.kaggle.com/zstuwangrui/start-up,np.ones(df_test.shape[0]),np.empty(df_test.shape[0]); r2.fill(1)
0,https://www.kaggle.com/chrisgundling/anyone-else-try-using-svm,counts.iloc[n],counts.iat[n]
0,https://www.kaggle.com/chrisgundling/anyone-else-try-using-svm,counts.iloc[n + 1],counts.iat[n + 1]
0,https://www.kaggle.com/rakhlin/ultra-fast-grid-knn-model,t.iloc[br],t.iat[br]
1,https://www.kaggle.com/aarotang/test-data,"np.hstack((x_num_test, vec_x_cat_test))","np.concatenate((x_num_test, vec_x_cat_test), axis=1)"
1,https://www.kaggle.com/aawadall/deep-neural-net,np.sum((y_hat == y_star) * y_star * 1),np.count_nonzero((y_hat == y_star) * y_star * 1)
1,https://www.kaggle.com/aawadall/deep-neural-net,"np.sum(t, axis=0)","np.einsum('ij->j',t)"
1,https://www.kaggle.com/abrierly/explore-titanic-python,"train2.loc[train['Sex'] == 'male', 'Sex']","train2.ix[train['Sex'] == 'male', 'Sex']"
1,https://www.kaggle.com/abrierly/nn-approach,"np.dot(t0, x.T)","np.einsum('ij,jm->im',t0, x.T)"
1,https://www.kaggle.com/adiamb/titanic-survival-my-way,"train.loc[:, 'Pclass':'Embarked']","train.ix[:, 'Pclass':'Embarked']"
1,https://www.kaggle.com/adityakumarsinha/stacked-then-averaged-models-private-lb-0-554,"all_data.loc[:, ('lag1')]","all_data.ix[:, ('lag1')]"
1,https://www.kaggle.com/adityakumarsinha/stacked-then-averaged-models-private-lb-0-554,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.concatenate((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed), axis=1)"
1,https://www.kaggle.com/adrianbureu/another-test,"data.loc[data.Fare.isnull() & (data.Pclass == f + 1), 'Fare']","data.ix[data.Fare.isnull() & (data.Pclass == f + 1), 'Fare']"
1,https://www.kaggle.com/adrianspataru/first-submission,"train.loc[train['Sex'] == 'male', 'Sex']","train.ix[train['Sex'] == 'male', 'Sex']"
1,https://www.kaggle.com/agarwalsneha/linear-svm-with-feature-engineering,"train.loc[train['Fare'] == 0, 'Fare_norm']","train.ix[train['Fare'] == 0, 'Fare_norm']"
1,https://www.kaggle.com/agarwalsneha/linear-svm-with-feature-engineering,"test['Sex'].map({'female': 0, 'male': 1})","pd.DataFrame(test['Sex']).replace({'female': 0, 'male': 1})"
1,https://www.kaggle.com/aharless/jiwon-small-improvements-for-magic-number-results,"train.loc[bad_index, 'life_sq']","train.ix[bad_index, 'life_sq']"
1,https://www.kaggle.com/aharless/latest-iteration-in-this-silly-game,"train.loc[train.full_sq == 0, 'full_sq']","train.ix[train.full_sq == 0, 'full_sq']"
1,https://www.kaggle.com/albytho/pubg-prediction-ann-implementation,"df_train.loc[:, :]","df_train.ix[:, :]"
1,https://www.kaggle.com/aleiken/beginner-xgboost,df_train['Target'].replace(mapping),df_train['Target'].map(mapping)
1,https://www.kaggle.com/alexxanderlarko/road-2-0-4-featureset,"train.loc[train.Id.isin(tr.Id), 'StartTime']","train.ix[train.Id.isin(tr.Id), 'StartTime']"
1,https://www.kaggle.com/alipala/ml-regressors-20-features,"train.loc[:, (train.columns != c)]","train.ix[:, (train.columns != c)]"
1,https://www.kaggle.com/alpoza/test-titanic,"titanic.loc[titanic['Sex'] == 'male', 'Sex']","titanic.ix[titanic['Sex'] == 'male', 'Sex']"
1,https://www.kaggle.com/amazone/lightgbm-regressor,df['pickup_datetime'].apply(lambda x: int(x.split(' ')[0].split('-')[1])),df['pickup_datetime'].map(lambda x: int(x.split(' ')[0].split('-')[1]))
1,https://www.kaggle.com/amznit/rf-multilabel-framework-lb-0-022475,"np.hstack([train_X, temp_train_X])","np.append(train_X, temp_train_X, axis=1)"
1,https://www.kaggle.com/amznit/rf-multilabel-framework-lb-0-022475,"np.hstack([train_X, temp_train_X])","np.concatenate([train_X, temp_train_X], axis=1)"
1,https://www.kaggle.com/andrewlin1006/cs145-v1,"np.hstack((x_num_data, vec_x_cat_data))","np.append(x_num_data, vec_x_cat_data, axis=1)"
1,https://www.kaggle.com/andywan/data-import,"np.vstack([age_col['Age'], np.ones(len(age_col['Age']))])","np.column_stack((age_col['Age'].T, np.ones(len(age_col['Age'])).T)).T"
1,https://www.kaggle.com/andyxie/titanic-xgboost,"data['train'].loc[:, (col)]","data['train'].ix[:, (col)]"
1,https://www.kaggle.com/angadp/trying-for-top-10,"dataset.loc[dataset['Family_Size'] == 1, 'isAlone']","dataset.ix[dataset['Family_Size'] == 1, 'isAlone']"
1,https://www.kaggle.com/anilcs/ectra-with-new-features,"train.loc[train[c].round(5) == 0, c]","train.ix[train[c].round(5) == 0, c]"
1,https://www.kaggle.com/anilkumarkuppa/extratreesclassifier-score-0-45911,"train.loc[train_series.isnull(), train_name]","train.ix[train_series.isnull(), train_name]"
1,https://www.kaggle.com/anirban00727/titanic-survival-chances-prediction,"combined.Sex.map({'male': 1, 'female': 0})","pd.DataFrame(combined.Sex).replace({'male': 1, 'female': 0})"
1,https://www.kaggle.com/anishanalytics/oscar-wala-actor-leo,"data.loc[data.Sex != 'male', 'Sex']","data.ix[data.Sex != 'male', 'Sex']"
1,https://www.kaggle.com/anjuram25/titanic-ramanujamallam,"dataset.loc[dataset['FamilySize'] == 0, 'Family']","dataset.ix[dataset['FamilySize'] == 0, 'Family']"
1,https://www.kaggle.com/ankurbhartiya/titanicpy2,"df.loc[df.Age.isnull() & (df.Gender == i) & (df.Pclass == j + 1), 'AgeFill']","df.ix[df.Age.isnull() & (df.Gender == i) & (df.Pclass == j + 1), 'AgeFill']"
1,https://www.kaggle.com/ankurbhartiya/titanicpy2,"df['Embarked'].map({'C': 1, 'Q': 2, 'S': 3, '0': 3})","pd.DataFrame(df['Embarked']).replace({'C': 1, 'Q': 2, 'S': 3, '0': 3})"
1,https://www.kaggle.com/anuragupadhyaya/silly-silly-data,"test.ix[equal_index, 'full_sq']","test.loc[equal_index, 'full_sq']"
1,https://www.kaggle.com/azeembootwala/titanic-logistic-regression,X.T.dot(Y_pred - T),"np.tensordot(X.T,Y_pred - T,axes=1)"
1,https://www.kaggle.com/b0untyhunter/xgboost-lasso,"all_df.loc[idx, 'LotFrontage']","all_df.ix[idx, 'LotFrontage']"
1,https://www.kaggle.com/balajibi/facebook-solution-bi-1,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T"
1,https://www.kaggle.com/batzner/small-dataset-generator,np.where(child_pref[gift_id] == child_id),np.nonzero(child_pref[gift_id] == child_id)
1,https://www.kaggle.com/bguberfain/v22-classifier,"train.loc[~train[c].isin(cboth), c]","train.ix[~train[c].isin(cboth), c]"
1,https://www.kaggle.com/bhavesh09/onemoremodel,"c.loc[c.Age.isnull() & (c.Title == i), 'Age']","c.ix[c.Age.isnull() & (c.Title == i), 'Age']"
1,https://www.kaggle.com/bhavesh09/removing-all-bad-values,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]"
1,https://www.kaggle.com/bhavesh09/titanicsurvivalprediction,"train.loc[train['Age'] <= 14, 'Age']","train.ix[train['Age'] <= 14, 'Age']"
1,https://www.kaggle.com/bigdit/test00000,"Df['Embarked'].map({'C': 1, 'S': 2, 'Q': 3})","pd.DataFrame(Df['Embarked']).replace({'C': 1, 'S': 2, 'Q': 3})"
1,https://www.kaggle.com/bineetranjan/gbt-classification,"df.loc[df['Sex'] == 'male', 'Sex']","df.ix[df['Sex'] == 'male', 'Sex']"
1,https://www.kaggle.com/bluepoplar/try-1,"df.loc[df.FareFill > fare_ceiling - 1.0, 'FareFill']","df.ix[df.FareFill > fare_ceiling - 1.0, 'FareFill']"
1,https://www.kaggle.com/brajen259/pca-and-xgb,"test.loc[test[f] < lim, f]","test.ix[test[f] < lim, f]"
1,https://www.kaggle.com/brandymat/titanic-kernel-test,"data.loc[data['Title'] == 'Dr', 'Age']","data.ix[data['Title'] == 'Dr', 'Age']"
1,https://www.kaggle.com/brandymat/titanic-kernel-test,"np.where(data['Sex'] == 'male', 1, 0)",(data['Sex'] == 'male').astype((data['Sex'] == 'male').dtype)
1,https://www.kaggle.com/bruceokallau/simple-knn-model-93-accurate,np.where(pred_valid != y_weight),np.nonzero(pred_valid != y_weight)
1,https://www.kaggle.com/bschaefer/frequent-items-per-user-baseline-lb-0-30,"submission.loc[submission['products'].isnull(), 'products']","submission.ix[submission['products'].isnull(), 'products']"
1,https://www.kaggle.com/bschaefer/frequent-items-per-user-baseline-lb-0-30,orders_test_user.query('eval_set == 'prior''),orders_test_user.loc[orders_test_user.eval_set == 'prior']
1,https://www.kaggle.com/buzzolord/kappavoid-testing,"dataset.loc[dataset['Age'] <= 5, 'Age']","dataset.ix[dataset['Age'] <= 5, 'Age']"
1,https://www.kaggle.com/bwboerman/a-quick-dive-into-h2o-with-python,"fullData.loc[fullData.TicketDiffFares == 1, 'TicketFare']","fullData.ix[fullData.TicketDiffFares == 1, 'TicketFare']"
1,https://www.kaggle.com/bwboerman/a-quick-dive-into-h2o-with-python,"np.where((fullData.Age <= 12) & (fullData.Sex == 'male'), 1, 0)",((fullData.Age <= 12) & (fullData.Sex == 'male')).astype(((fullData.Age <= 12) & (fullData.Sex == 'male')).dtype)
1,https://www.kaggle.com/canran/titanic-rf,"X_df.loc[:, ('Sex')]","X_df.ix[:, ('Sex')]"
1,https://www.kaggle.com/careyai/san-fran-crime,"train.loc[train.X < -122.51093037786198, 'X']","train.ix[train.X < -122.51093037786198, 'X']"
1,https://www.kaggle.com/carloshuertas/lol-tell-me-more,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]"
1,https://www.kaggle.com/cast42/xgboost-example-python,"train_df.loc[train_df['Embarked'] == 'S', 'Embarked']","train_df.ix[train_df['Embarked'] == 'S', 'Embarked']"
1,https://www.kaggle.com/cast42/xgboost-extra-features,"data.loc[data.Open.isnull(), 'Open']","data.ix[data.Open.isnull(), 'Open']"
1,https://www.kaggle.com/cbrioso/lightgbm-with-cv,"data['hol']['transferred'].map({'False': 0, 'True': 1})","pd.DataFrame(data['hol']['transferred']).replace({'False': 0, 'True': 1})"
1,https://www.kaggle.com/ceshine/pytorch-baseline-model,"df.loc[df.rankPoints < 0, 'rankPoints']","df.ix[df.rankPoints < 0, 'rankPoints']"
1,https://www.kaggle.com/ceshine/pytorch-baseline-model,df[col].astype(np.float64),df[col].apply(np.float64)
1,https://www.kaggle.com/chappy19910723/tutrial20180702-2,np.array(L),np.concatenate([L])
1,https://www.kaggle.com/chesters99/titanic-using-svm-classifierx,"df.loc[df['Age'].isnull() & (df['Title'] == atitle), 'Age']","df.ix[df['Age'].isnull() & (df['Title'] == atitle), 'Age']"
1,https://www.kaggle.com/chriscc/xgb-cv,"np.hstack((testCatVecX, testNumX))","np.concatenate((testCatVecX, testNumX), axis=1)"
1,https://www.kaggle.com/chriscc/xgb-py,"np.hstack((trainCatVecX, trainNumX))","np.append(trainCatVecX, trainNumX, axis=1)"
1,https://www.kaggle.com/cjansen/magic-numbers-private-lb-0-31647,"train.loc[bad_index, 'num_room']","train.ix[bad_index, 'num_room']"
1,https://www.kaggle.com/clararnoux/titanic-not-failing,"titanic_test.loc[titanic_test['Sex'] == 'female', 'Sex']","titanic_test.ix[titanic_test['Sex'] == 'female', 'Sex']"
1,https://www.kaggle.com/clustifier/7-weeks-mode-lb-51-5,"test.loc[test.Visits.isnull(), 'Visits']","test.ix[test.Visits.isnull(), 'Visits']"
1,https://www.kaggle.com/code1110/titanic-model-prediction-submission,"test_df['Sex'].map({'female': 1, 'male': 0})","pd.DataFrame(test_df['Sex']).replace({'female': 1, 'male': 0})"
1,https://www.kaggle.com/coltonpaul/lost-in-a-forest-titanic,"data.loc[data['Sex'] == 'male', 'Sex']","data.ix[data['Sex'] == 'male', 'Sex']"
1,https://www.kaggle.com/company/facebook-pci,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T"
1,https://www.kaggle.com/computermage/test-titanic-survival-script,"np.where(full.Sex == 'male', 1, 0)",(full.Sex == 'male').astype((full.Sex == 'male').dtype)
1,https://www.kaggle.com/cooleel/a-quick-try-of-h2o-automl-on-titanic-dataset,"data.loc[data.Name.str.contains('Miss.', regex=False), 'Prefix']","data.ix[data.Name.str.contains('Miss.', regex=False), 'Prefix']"
1,https://www.kaggle.com/corgicoffee/kernelb4bd873fab,"train_data.loc[:, (['Pclass', 'Sex', 'Age'])]","train_data.ix[:, (['Pclass', 'Sex', 'Age'])]"
1,https://www.kaggle.com/cttsai/xgb-trial-oct-08,"clustered_test.loc[:, (name)]","clustered_test.ix[:, (name)]"
1,https://www.kaggle.com/cttsai/xgb-trial-oct-08,df[i].astype(str),df[i].apply(str)
1,https://www.kaggle.com/cxxacxx/have-a-try-2,"all_data.loc[np.logical_not(all_data['LotFrontage'].isnull()), 'LotArea']","all_data.ix[np.logical_not(all_data['LotFrontage'].isnull()), 'LotArea']"
1,https://www.kaggle.com/daniglezl/main-1-py,"train.loc[train.Age.isnull(), 'Age']","train.ix[train.Age.isnull(), 'Age']"
1,https://www.kaggle.com/daniglezl/main-5-py,"train.loc[train.Fare > bin_max, 'Fare']","train.ix[train.Fare > bin_max, 'Fare']"
1,https://www.kaggle.com/daskoo/titanic-test-python,"train.loc[:, (['Name', 'SibSp', 'Age', 'Parch'])]","train.ix[:, (['Name', 'SibSp', 'Age', 'Parch'])]"
1,https://www.kaggle.com/daskoo/titanic-test-python,"(train.loc[:,['Name','SibSp','Age','Parch']]).query('Parch > 0 or SibSp > 0')","(train.loc[:,['Name','SibSp','Age','Parch']]).loc[(train.loc[:,['Name','SibSp','Age','Parch']].Parch > 0) | (train.loc[:,['Name','SibSp','Age','Parch']].SibSp > 0)]"
1,https://www.kaggle.com/devinodsa/titanic,"full.loc[full.PassengerId == 280, ['SibSp', 'Parch']]","full.ix[full.PassengerId == 280, ['SibSp', 'Parch']]"
1,https://www.kaggle.com/dexter22/testing,"train.loc[~train['Title'].isin(['Mr', 'Miss', 'Mrs', 'Master']), 'Title']","train.ix[~train['Title'].isin(['Mr', 'Miss', 'Mrs', 'Master']), 'Title']"
1,https://www.kaggle.com/dish42/getting-started,"train.loc[train.Age.isnull(), 'AgeFill']","train.ix[train.Age.isnull(), 'AgeFill']"
1,https://www.kaggle.com/dishajindal/script2-py,"train['Sex'].map({'female': 1, 'male': 0})","pd.DataFrame(train['Sex']).replace({'female': 1, 'male': 0})"
1,https://www.kaggle.com/dishajindal/script-py,"train['Sex'].map({'female': 1, 'male': 0})","pd.DataFrame(train['Sex']).replace({'female': 1, 'male': 0})"
1,https://www.kaggle.com/dollardollar/importance-of-address-features,"train.loc[:, ('Category')]","train.ix[:, ('Category')]"
1,https://www.kaggle.com/dollardollar/importance-of-address-features,np.zeros(merged_data.shape),np.empty(merged_data.shape); r2[:]= 0
1,https://www.kaggle.com/dujianjun79/titanic-machine-learing,"titanic.loc[titanic.Sex == 'male', 'Sex']","titanic.ix[titanic.Sex == 'male', 'Sex']"
1,https://www.kaggle.com/dvasyukova/predict-sales-with-pandas-py,"test.loc[test.Open.isnull(), 'Open']","test.ix[test.Open.isnull(), 'Open']"
1,https://www.kaggle.com/ekethio/titanic-second,"file.loc[file.Sex == 'male', 'Sex']","file.ix[file.Sex == 'male', 'Sex']"
1,https://www.kaggle.com/eponymous/weighted-models-example,np.column_stack([y_preds[k][i] for k in clfs]),np.transpose([y_preds[k][i] for k in clfs])
1,https://www.kaggle.com/etherqua/airbnbdemo,df_all.date_account_created.astype(str),df_all.date_account_created.apply(str)
1,https://www.kaggle.com/ezyyyy/silly-silly-data,train['ratio_kitch_sq_life_sq'].ix[train['ratio_kitch_sq_life_sq'] < 0],train['ratio_kitch_sq_life_sq'].loc[train['ratio_kitch_sq_life_sq'] < 0]
1,https://www.kaggle.com/felsiq/some-amateurish-full-titanic-data-process,"data_frame.loc[data_frame['Embarked'] == '', 'Embarked']","data_frame.ix[data_frame['Embarked'] == '', 'Embarked']"
1,https://www.kaggle.com/fernandocruz/first-test,"train.loc[:, 'margin1':]","train.ix[:, 'margin1':]"
1,https://www.kaggle.com/filatenkova/digit-read,np.transpose(train.as_matrix()),np.column_stack(train.as_matrix())
1,https://www.kaggle.com/francksylla/titanic-machine-learning-from-disaster,"full.loc[:, ('Title')]","full.ix[:, ('Title')]"
1,https://www.kaggle.com/fzhurd/titanic-suvive20160924v4,combined.ix[891:],combined.iloc[891:]
1,https://www.kaggle.com/ganliu/testwhy,"train.loc[train['TARGET'] == 1, features + ['TARGET']]","train.ix[train['TARGET'] == 1, features + ['TARGET']]"
1,https://www.kaggle.com/garethjns/microsoft-lightgbm-with-parameter-tuning-0-823,"full.loc[full.Age.isnull(), 'Age']","full.ix[full.Age.isnull(), 'Age']"
1,https://www.kaggle.com/ghozlan/traincsv-numonly-py,np.where(predicted < 0),np.nonzero(predicted < 0)
1,https://www.kaggle.com/gilbar/visualizing-data,"X.loc[:, (ranges > 1000)]","X.ix[:, (ranges > 1000)]"
1,https://www.kaggle.com/gilsonfaria/script3-title-dummies,"np.column_stack((test['PassengerId'], test_result))","np.transpose((test['PassengerId'], test_result))"
1,https://www.kaggle.com/gilsonfaria/script4-boolsibsp-parch,"np.column_stack((idTest, test_result))","np.transpose((idTest, test_result))"
1,https://www.kaggle.com/gilsonfaria/scriptfinal,"np.column_stack((idTest, test_result))","np.transpose((idTest, test_result))"
1,https://www.kaggle.com/gouxute1/xgboost-and-simple-data-cleaning,"df_train.loc[df_train['n0'] == 0, 'n0']","df_train.ix[df_train['n0'] == 0, 'n0']"
1,https://www.kaggle.com/gshguru/beating-the-benchmark-0-57,"np.array(rater_a, dtype=int)","np.fromiter(rater_a, dtype=int)"
1,https://www.kaggle.com/guillaumegg/titanic-machine-learning,"custom_train.loc[custom_train['Age'] <= 16, 'Age']","custom_train.ix[custom_train['Age'] <= 16, 'Age']"
1,https://www.kaggle.com/gunjan17/mytitanicsolution,"new_train.loc[new_train['Sex'] == 'male', 'Sex']","new_train.ix[new_train['Sex'] == 'male', 'Sex']"
1,https://www.kaggle.com/gvyshnya/basic-prophet-ts-forecasting-framework,air_visit_data.query('air_store_id ==  + current_store_id + '),air_visit_data.loc[air_visit_data.air_store_id ==  current_store_id ]
1,https://www.kaggle.com/gvyshnya/gbm-cv-submission-lb-28,train_df[f2].apply(lambda x: str(x)),train_df[f2].map(lambda x: str(x))
1,https://www.kaggle.com/haphamhoang/ensemble-modeling-for-prediction-house-price,"df.loc[df.GarageYrBlt == 2207, 'GarageYrBlt']","df.ix[df.GarageYrBlt == 2207, 'GarageYrBlt']"
1,https://www.kaggle.com/happycube/scirpus-extreme-bayes-faron-36312,"blindtraindata.loc[:, (col)]","blindtraindata.ix[:, (col)]"
1,https://www.kaggle.com/happycube/simple-cv-example-one-feature-near-rf,"all_data.loc[all_data[key] != na, key]","all_data.ix[all_data[key] != na, key]"
1,https://www.kaggle.com/happycube/simple-cv-example-one-feature-near-rf,"np.full(len(train_bag), 0, dtype=np.float32)","np.zeros(len(train_bag), dtype=np.float32)"
1,https://www.kaggle.com/harini5693/data-analysisusingpython,"dataset.loc[(dataset['Age'] > 16) & (dataset['Age'] <= 32), 'Age']","dataset.ix[(dataset['Age'] > 16) & (dataset['Age'] <= 32), 'Age']"
1,https://www.kaggle.com/hawkinsliam/simple-random-forest,"df.loc[df['Family_size'] == 1, 'Is_alone']","df.ix[df['Family_size'] == 1, 'Is_alone']"
1,https://www.kaggle.com/hawkinsliam/simple-random-forest,"np.column_stack((ids.T, predictions.T))","np.vstack((ids.T, predictions.T)).T"
1,https://www.kaggle.com/hawkinsliam/simple-random-forest,"np.column_stack((ids.T, predictions.T))","np.transpose((ids.T, predictions.T))"
1,https://www.kaggle.com/hideki1234/neural-network,Theta2.dot(A2),"np.tensordot(Theta2,A2,axes=1)"
1,https://www.kaggle.com/hubifeng/jack-japan-s-python-version,date_info.calendar_date.dt.weekday.map(week_dict),date_info.calendar_date.dt.weekday.replace(week_dict)
1,https://www.kaggle.com/ievgenvp/lgbm-custom-randomizedsearchcv-lb-283,"np.c_[actual, pred, np.arange(len(actual))]","np.hstack([np.array(actual).reshape(len(actual),1), np.array(pred).reshape(len(actual),1), np.arange(len(actual)).reshape(len(actual),1)])"
1,https://www.kaggle.com/inpefess/xgboost-in-python-with-rmspe,"data.loc[data['StateHoliday'] == 'b', 'StateHoliday']","data.ix[data['StateHoliday'] == 'b', 'StateHoliday']"
1,https://www.kaggle.com/inversion/pls-visualization-2,np.where(y_train == class_ix),np.nonzero(y_train == class_ix)
1,https://www.kaggle.com/inversion/visualizing-class-distance,"dist_metric.loc[1000:2000, ('5_10')]","dist_metric.ix[1000:2000, ('5_10')]"
1,https://www.kaggle.com/inversion/visualizing-class-distance,np.where(label == c),np.nonzero(label == c)
1,https://www.kaggle.com/izzul02/age-gender-breed-and-name-vs-outcome,"df.loc[df['AnimalType'] == 'Dog', feature]","df.ix[df['AnimalType'] == 'Dog', feature]"
1,https://www.kaggle.com/jackiezhao/xgboost-v2,"data_set['Embarked'].map({'S': 1, 'C': 2, 'Q': 3})","pd.DataFrame(data_set['Embarked']).replace({'S': 1, 'C': 2, 'Q': 3})"
1,https://www.kaggle.com/jasonbenner/lets-try-xgb10,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]"
1,https://www.kaggle.com/jasonbenner/xgb-lets-try,"train.ix[bad_index, ['life_sq', 'full_sq']]","train.loc[bad_index, ['life_sq', 'full_sq']]"
1,https://www.kaggle.com/jasonbenner/xgb-lets-try-clean-2,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]"
1,https://www.kaggle.com/jbuchner/random-forest-97-7-stroke-features-gaps-knots,"data.loc[:, 'pixel0':'pixel783']","data.ix[:, 'pixel0':'pixel783']"
1,https://www.kaggle.com/jbuchner/random-forest-97-7-stroke-features-gaps-knots,numpy.where(mask),numpy.nonzero(mask)
1,https://www.kaggle.com/jeolas/id-survived,"titanic_test.loc[titanic_test['Embarked'] == 'S', 'Embarked']","titanic_test.ix[titanic_test['Embarked'] == 'S', 'Embarked']"
1,https://www.kaggle.com/joanfo/my-first-kernel,"clean.loc[:, (numerical_cols)]","clean.ix[:, (numerical_cols)]"
1,https://www.kaggle.com/jojadud/titanic-exploration-1,"train['Sex'].map({'female': 1, 'male': 0})","train['Sex'].replace({'female': 1, 'male': 0})"
1,https://www.kaggle.com/journeycheng/script-py,"train_df.loc[train_df.Age.isnull() & (f == train_df.Title), 'Age']","train_df.ix[train_df.Age.isnull() & (f == train_df.Title), 'Age']"
1,https://www.kaggle.com/jtson1213/titanic-decision-tree-classifier,"dataset.loc[dataset['Age'] <= 9, 'Age']","dataset.ix[dataset['Age'] <= 9, 'Age']"
1,https://www.kaggle.com/justfor/bench-stacked-generalization,"np.hstack((trainCatVecX, trainNumX))","np.append(trainCatVecX, trainNumX, axis=1)"
1,https://www.kaggle.com/justfor/bench-stacked-generalization,"np.hstack((trainCatVecX, trainNumX))","np.concatenate((trainCatVecX, trainNumX), axis=1)"
1,https://www.kaggle.com/justinabel/prud-1,train.ix[train_rows],train.loc[train_rows]
1,https://www.kaggle.com/jvallej/agregaciones-previouse-applications,"data.loc[:, (['SK_ID_PREV', 'SK_ID_CURR'])]","data.ix[:, (['SK_ID_PREV', 'SK_ID_CURR'])]"
1,https://www.kaggle.com/kevins/models-war,"data_cl.loc[data_cl['action_type'].isin(rare_action_types), 'action_type']","data_cl.ix[data_cl['action_type'].isin(rare_action_types), 'action_type']"
1,https://www.kaggle.com/kingarthurie/titanik-rdf,"data.loc[data['Embarked'] == 'S', 'Embarked']","data.ix[data['Embarked'] == 'S', 'Embarked']"
1,https://www.kaggle.com/knageswara78/my-tatanic-python-solution,"np.array(results['param_C'].data, dtype=float)","np.fromiter(results['param_C'].data, dtype=float)"
1,https://www.kaggle.com/knageswara78/my-tatanic-python-solution,"np.where(final_test['Age'] <= 16, 1, 0)",(final_test['Age'] <= 16).astype((final_test['Age'] <= 16).dtype)
1,https://www.kaggle.com/knageswara78/my-tatanic-python-solution,"np.where(train_data['SibSp'] + train_data['Parch'] > 0, 0, 1)",(train_data['SibSp'] + train_data['Parch']).map(lambda x : 0 if x > 0 else  1).values
1,https://www.kaggle.com/knageswara78/my-tatanic-python-solution,np.where(tpr > 0.95),np.nonzero(tpr > 0.95)
1,https://www.kaggle.com/kotaroito/titanic,"train_df.loc[train_df.Embarked.isnull(), 'Embarked']","train_df.ix[train_df.Embarked.isnull(), 'Embarked']"
1,https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,np.where(p < 0.5),np.nonzero(p < 0.5)
1,https://www.kaggle.com/kyleingraham/titanic-survivor-prediction,np.zeros(input_x.shape[1]),np.empty(input_x.shape[1]); r2[:]= 0
1,https://www.kaggle.com/lancerts/combined,np.where(queries[:10158] == q),np.nonzero(queries[:10158] == q)
1,https://www.kaggle.com/ldavim/code01,"trainData['Sex'].map({'female': 0, 'male': 1})","trainData['Sex'].replace({'female': 0, 'male': 1})"
1,https://www.kaggle.com/leblondmorgan/titanic-machine-learning,"train_df.loc[train_df['Sex'] == 'male', 'Sex']","train_df.ix[train_df['Sex'] == 'male', 'Sex']"
1,https://www.kaggle.com/lesibius/naive-bayes-time-only,"df_train.loc[:, ('Hour')]","df_train.ix[:, ('Hour')]"
1,https://www.kaggle.com/lesibius/time-only-sv,"df_test.ix[:, 2:]","df_test.iloc[:, 2:]"
1,https://www.kaggle.com/lesibius/time-only-sv,"df_train.loc[:, (['Year', 'Hour', 'Month', 'DayOfWeek', 'X', 'Y'])]","df_train.ix[:, (['Year', 'Hour', 'Month', 'DayOfWeek', 'X', 'Y'])]"
1,https://www.kaggle.com/lifengmiao/titanic,"df.loc[df.Age.isnull() & (df.Sex == i) & (df.Pclass == j + 1), 'Age']","df.ix[df.Age.isnull() & (df.Sex == i) & (df.Pclass == j + 1), 'Age']"
1,https://www.kaggle.com/lindenlu/linden-titanic-script,"train_df.loc[:, ('Name')]","train_df.ix[:, ('Name')]"
1,https://www.kaggle.com/lionalio/titanicprediction,"TrainingSet['Embarked'].map({'S': 0, 'C': 1, 'Q': 2})","pd.DataFrame(TrainingSet['Embarked']).replace({'S': 0, 'C': 1, 'Q': 2})"
1,https://www.kaggle.com/lllinger/crimedistribution-temporal-spatial,"train_data.loc[:, ('Dates')]","train_data.ix[:, ('Dates')]"
1,https://www.kaggle.com/lolalola/miaowuwu,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]"
1,https://www.kaggle.com/lostking91/titanic,"train.loc[train['Cabin'] != 'N', 'Cabin']","train.ix[train['Cabin'] != 'N', 'Cabin']"
1,https://www.kaggle.com/lzzzfelipe/titanic-modelling,"combined2.loc[:, ('Title')]","combined2.ix[:, ('Title')]"
1,https://www.kaggle.com/maheshak04/xgb-with-nan-and-other-cleaning-25052017,"df_train.loc[df_train.full_sq == 0, 'full_sq']","df_train.ix[df_train.full_sq == 0, 'full_sq']"
1,https://www.kaggle.com/maheshak04/xgb-with-select-macro-features-07062017,"train.ix[kitch_is_build_year, 'kitch_sq']","train.loc[kitch_is_build_year, 'kitch_sq']"
1,https://www.kaggle.com/meeththakkar/perceptron-implementation,"train_data.loc[train_data.Age.isnull(), 'Age']","train_data.ix[train_data.Age.isnull(), 'Age']"
1,https://www.kaggle.com/meeththakkar/perceptron-implementation,"train_data['Sex'].map({'female': 0, 'male': 1})","pd.DataFrame(train_data['Sex']).replace({'female': 0, 'male': 1})"
1,https://www.kaggle.com/meeththakkar/titanic-randomforest-kfold-python,"df.loc[df.Embarked.isnull(), 'Embarked']","df.ix[df.Embarked.isnull(), 'Embarked']"
1,https://www.kaggle.com/melisbiyikli/titanic-data-sets,"all_datas['Sex'].map({'male': 1, 'female': 0})","pd.DataFrame(all_datas['Sex']).replace({'male': 1, 'female': 0})"
1,https://www.kaggle.com/mhooreman/test-new-script,"tmp.loc[tmp[1].isin(('year', 'years')), 'years']","tmp.ix[tmp[1].isin(('year', 'years')), 'years']"
1,https://www.kaggle.com/mjyang/testw,X.T.dot(Y_pred - T),"np.tensordot(X.T,Y_pred - T,axes=1)"
1,https://www.kaggle.com/mkurnikov/modified-cos-similarity-python-edition,"np.dot(user_profiles, W)","np.einsum('ij,jm->im',user_profiles, W)"
1,https://www.kaggle.com/mldm16fe/mytest051603,"trainData.loc[trainData.Age.isnull(), 'modAge']","trainData.ix[trainData.Age.isnull(), 'modAge']"
1,https://www.kaggle.com/mnoguchi/titanic-pandas,"df['Sex'].map({'female': 0, 'male': 1})","pd.DataFrame(df['Sex']).replace({'female': 0, 'male': 1})"
1,https://www.kaggle.com/moichiaaron/numpynist-py,theta2.T.dot(s3),"np.tensordot(theta2.T,s3,axes=1)"
1,https://www.kaggle.com/mosa94/linear-regression-implementations,"np.dot(trainX_.transpose(), trainX_)","np.einsum('ij,jm->im',trainX_.transpose(), trainX_)"
1,https://www.kaggle.com/mrisdal/starter-kernel-python-script-1,"np.array(row[1:], dtype=np.uint8)","np.fromiter(row[1:], dtype=np.uint8)"
1,https://www.kaggle.com/mschou/titanic001,"titanic.loc[titanic['Sex'] == 1, 'Age']","titanic.ix[titanic['Sex'] == 1, 'Age']"
1,https://www.kaggle.com/nabilnobel/if-product-exists-in-last-4-order,"orders_all.loc[orders_all['order_number'] > 1, 'n_1']","orders_all.ix[orders_all['order_number'] > 1, 'n_1']"
1,https://www.kaggle.com/nagadomi/nearest-neighbor-search,np.transpose(train_x),np.column_stack(train_x)
1,https://www.kaggle.com/naropian/narnar-test,"df_train.ix[:, (df_train.columns != 'SalePrice')]","df_train.loc[:, (df_train.columns != 'SalePrice')]"
1,https://www.kaggle.com/naumanahm/nauman-attempt3-final,"complete_data.loc[1379, 'Electrical']","complete_data.ix[1379, 'Electrical']"
1,https://www.kaggle.com/navaneeth51089/my-first-script,"train_set['Sex'].map({'female': 2, 'male': 1})","train_set['Sex'].replace({'female': 2, 'male': 1})"
1,https://www.kaggle.com/nbose2/tests,"df_train.ix[:, (df_train.columns != 'SalePrice')]","df_train.loc[:, (df_train.columns != 'SalePrice')]"
1,https://www.kaggle.com/nemethpeter42/osztalyozas,"df_tmp.loc[:, ('tipp')]","df_tmp.ix[:, ('tipp')]"
1,https://www.kaggle.com/nemethpeter42/valami,"df.loc[:, ('Demanda_uni_equil')]","df.ix[:, ('Demanda_uni_equil')]"
1,https://www.kaggle.com/newhardwarefound/artificial-neural-network,"np.dot(delta, activations[-2].transpose())","np.einsum('ij,jm->im',delta, activations[-2].transpose())"
1,https://www.kaggle.com/nicapotato/tf-idf-xgboost,"train.loc[:, (class_names)]","train.ix[:, (class_names)]"
1,https://www.kaggle.com/nightshade7/allstatetest,"np.hstack((catData.T, df[cols[117:nFeat - 1]].as_matrix()))","np.concatenate((catData.T, df[cols[117:nFeat - 1]].as_matrix()), axis=1)"
1,https://www.kaggle.com/nightshade7/allstatetest,"np.vstack((catData, temp))","np.column_stack((catData.T, temp.T)).T"
1,https://www.kaggle.com/nikolayburlutskiy/modified-grid-knn,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T"
1,https://www.kaggle.com/niladri18/usinng-logistic-regression,"np.vstack((x0, x1, x2, x3))","np.column_stack((x0.T, x1.T, x2.T, x3.T)).T"
1,https://www.kaggle.com/nilzone/lgbm-with-mean-encodings,"test.loc[:, ('is_test')]","test.ix[:, ('is_test')]"
1,https://www.kaggle.com/nishadi/breeds,"np.where(breeds_group[:, (0)] == i)","np.nonzero(breeds_group[:, (0)] == i)"
1,https://www.kaggle.com/ocaudevi/passanger-flow-mapping-properties,"np.ones((1, values_pickup.shape[1]))","np.empty((1, values_pickup.shape[1])); r2.fill(1)"
1,https://www.kaggle.com/ogrellier/xgb-classifier-upsampling-lb-0-283,"np.zeros((len(trn_df.columns), n_splits))","np.empty((len(trn_df.columns), n_splits)); r2[:]= 0"
1,https://www.kaggle.com/olttwa/titanic-logistic-regression-v1,X.dot(theta),"np.tensordot(X,theta,axes=1)"
1,https://www.kaggle.com/omijn1/titanic-survivor-prediction,"X_train.loc[:, (['Sex'])]","X_train.ix[:, (['Sex'])]"
1,https://www.kaggle.com/opanichev/pandas-btb,"np.array(products, dtype='int')","np.fromiter(products, dtype='int')"
1,https://www.kaggle.com/opjason/titanicsarita,"dataset['Sex'].map({'female': 1, 'male': 0})","pd.DataFrame(dataset['Sex']).replace({'female': 1, 'male': 0})"
1,https://www.kaggle.com/panpolikarp/housing-submission-0-12695,"data.loc[data.index.isin(missing[c].index.tolist()), c]","data.ix[data.index.isin(missing[c].index.tolist()), c]"
1,https://www.kaggle.com/patrickjordan/random-forest,"frame.loc[frame[feature] == cat, feature + '_E']","frame.ix[frame[feature] == cat, feature + '_E']"
1,https://www.kaggle.com/paullo0106/knn-accelerated-v3,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T"
1,https://www.kaggle.com/paulorzp/run-length-encode-and-decode,np.where(pixels[1:] != pixels[:-1]),np.nonzero(pixels[1:] != pixels[:-1])
1,https://www.kaggle.com/piplimoon/leaderboard-0-8134,"df_combo.loc[:, ('Fam')]","df_combo.ix[:, ('Fam')]"
1,https://www.kaggle.com/popupsert/titanic-my-first-kaggle,"dataset.loc[:, ('Sex')]","dataset.ix[:, ('Sex')]"
1,https://www.kaggle.com/qvajou/titanic-disaster-first-test,"np.where(full.Sex == 'male', 1, 0)",(full.Sex == 'male').astype((full.Sex == 'male').dtype)
1,https://www.kaggle.com/rakhlin/ultra-fast-grid-knn-model,np.where(d > g.th),np.nonzero(d > g.th)
1,https://www.kaggle.com/ranjith49/home-credit-default-risk-python,"app_train.loc[app_train['TARGET'] == 0, 'DAYS_BIRTH']","app_train.ix[app_train['TARGET'] == 0, 'DAYS_BIRTH']"
1,https://www.kaggle.com/rcasellas/ensemble-stacking-with-et-script,"df.loc[df['Family_size'] == 1, 'isAlone']","df.ix[df['Family_size'] == 1, 'isAlone']"
1,https://www.kaggle.com/rchitic17/titanic-r-to-python,"full['Embarked'].map({'S': 0, 'C': 1, 'Q': 2})","pd.DataFrame(full['Embarked']).replace({'S': 0, 'C': 1, 'Q': 2})"
1,https://www.kaggle.com/riteshsinha/single-xgboost-model-public-lb-481,"date_info.loc[wkend_holidays, 'holiday_flg']","date_info.ix[wkend_holidays, 'holiday_flg']"
1,https://www.kaggle.com/robdias/predictfy-titanic-survival,"t_train.loc[t_train['Sex'] == 'male', 'Sex']","t_train.ix[t_train['Sex'] == 'male', 'Sex']"
1,https://www.kaggle.com/rohitagarwal/attempt-number-1,"total.loc[total['Fare'].isnull() & total['Pclass'] == i + 1, 'Fare']","total.ix[total['Fare'].isnull() & total['Pclass'] == i + 1, 'Fare']"
1,https://www.kaggle.com/rohitagarwal/attempt-number-1,"total['FamilySizeCategories'].map({(0): 1, (1): 0, (2): 2})","pd.DataFrame(total['FamilySizeCategories']).replace({(0): 1, (1): 0, (2): 2})"
1,https://www.kaggle.com/rtmink/cs-145-project-2c,"np.hstack((x_num_test, vec_x_cat_test))","np.append(x_num_test, vec_x_cat_test, axis=1)"
1,https://www.kaggle.com/rtmink/cs-145-project-2c,"np.hstack((x_num_test, vec_x_cat_test))","np.concatenate((x_num_test, vec_x_cat_test), axis=1)"
1,https://www.kaggle.com/rtmink/test-101,"np.hstack((x_num_data, vec_x_cat_data))","np.append(x_num_data, vec_x_cat_data, axis=1)"
1,https://www.kaggle.com/rtmink/test-101,"np.hstack((x_num_data, vec_x_cat_data))","np.concatenate((x_num_data, vec_x_cat_data), axis=1)"
1,https://www.kaggle.com/rtmink/test-1011,"np.hstack((x_num_test, vec_x_cat_test))","np.append(x_num_test, vec_x_cat_test, axis=1)"
1,https://www.kaggle.com/rtmink/test-1011,"np.hstack((x_num_data, vec_x_cat_data))","np.concatenate((x_num_data, vec_x_cat_data), axis=1)"
1,https://www.kaggle.com/sachin13/titanic,"data.loc[data['SibSp'] + data['Parch'] == 0, 'isAlone']","data.ix[data['SibSp'] + data['Parch'] == 0, 'isAlone']"
1,https://www.kaggle.com/sachin13/titanic,"data['Embarked'].map({'C': 0, 'Q': 1, 'S': 2})","pd.DataFrame(data['Embarked']).replace({'C': 0, 'Q': 1, 'S': 2})"
1,https://www.kaggle.com/safavieh/median-estimation-by-fibonacci-et-al-lb-44-9,row[1:].nonzero(),np.where(row[1:])
1,https://www.kaggle.com/sajal0jain/delme-1,"events.loc[:, ('device_id')]","events.ix[:, ('device_id')]"
1,https://www.kaggle.com/sakenk/random-forest,"ttest.loc[ttest['Sex'] == 'male', 'Sex']","ttest.ix[ttest['Sex'] == 'male', 'Sex']"
1,https://www.kaggle.com/scirpus/3-little-models,a_s.sum(),"np.sum(a_s,)"
1,https://www.kaggle.com/scirpus/genetic-programming-ii-lb-0-662,test.Product_Info_2.str[1:],test.Product_Info_2.map(lambda x: x[1:])
1,https://www.kaggle.com/scirpus/gp-lb-0-984930,"submission.loc[visibletest.outcome__grpdate == 0.0, 'outcome']","submission.ix[visibletest.outcome__grpdate == 0.0, 'outcome']"
1,https://www.kaggle.com/scirpus/gp-plus-santander-style-heuristics,"submission.loc[test.char_38.values < 40, 'outcome']","submission.ix[test.char_38.values < 40, 'outcome']"
1,https://www.kaggle.com/scirpus/naive-bayes-xgb,"traindata.loc[:, (col)]","traindata.ix[:, (col)]"
1,https://www.kaggle.com/scirpus/ordinal-xgb-lb-46190,"train.loc[~train[col].isin(test[col]), col]","train.ix[~train[col].isin(test[col]), col]"
1,https://www.kaggle.com/scirpus/quick-genetic-programme,"blindtrain.loc[:, (col)]","blindtrain.ix[:, (col)]"
1,https://www.kaggle.com/sergioortiz/titanic-competition-script-1,"Xdf.loc[Xdf['Age'] <= 16, 'Age']","Xdf.ix[Xdf['Age'] <= 16, 'Age']"
1,https://www.kaggle.com/shabin/titanic-get-started,"np.column_stack((X_initial, train_df_as_dic[key]))","np.vstack((X_initial.T, train_df_as_dic[key].T)).T"
1,https://www.kaggle.com/shankarpendse/titanicsurvivortraining,"unprocessedData.loc[:, ('Survived')]","unprocessedData.ix[:, ('Survived')]"
1,https://www.kaggle.com/shankarpendse/titanicsurvivortraining,np.where(hypothesis >= 0.5),np.nonzero(hypothesis >= 0.5)
1,https://www.kaggle.com/sharma72/titanic-survival-prediction,"df.loc[df.Fare.isnull() & (df.Pclass == f + 1), 'Fare']","df.ix[df.Fare.isnull() & (df.Pclass == f + 1), 'Fare']"
1,https://www.kaggle.com/shitalsawant/liner-svm-two-variables-py,"train_df.loc[:, (['Survived'])]","train_df.ix[:, (['Survived'])]"
1,https://www.kaggle.com/silpara/h2o-python-starter,"train_test.loc[(train_test.flag == -1), :]","train_test.ix[(train_test.flag == -1), :]"
1,https://www.kaggle.com/sinanalb/test-titanic,"dataset.loc[dataset['Age'] < 0, 'Age']","dataset.ix[dataset['Age'] < 0, 'Age']"
1,https://www.kaggle.com/sjtreadway/titanic-prediction,"dataset.loc[(dataset['Age'] > 16) & (dataset['Age'] <= 26), 'Age']","dataset.ix[(dataset['Age'] > 16) & (dataset['Age'] <= 26), 'Age']"
1,https://www.kaggle.com/smartbao/item-recomm2,"y_train.loc[:, (i)]","y_train.ix[:, (i)]"
1,https://www.kaggle.com/sodanuo/fork-dataquest,"dataset.loc[dataset['Sex'] == 'male', 'Sex']","dataset.ix[dataset['Sex'] == 'male', 'Sex']"
1,https://www.kaggle.com/soutou/new-model-lb-44-6,row[1:].nonzero(),np.where(row[1:])
1,https://www.kaggle.com/srinisid/test1,"df_train.loc[df_train['Age'].isnull(), 'Age']","df_train.ix[df_train['Age'].isnull(), 'Age']"
1,https://www.kaggle.com/stacyayaka/cs145,"np.hstack((x_num_data, vec_x_cat_data))","np.concatenate((x_num_data, vec_x_cat_data), axis=1)"
1,https://www.kaggle.com/steffenritter/test-kernel,"dataset.loc[dataset['FamilySize'] == 1, 'IsAlone']","dataset.ix[dataset['FamilySize'] == 1, 'IsAlone']"
1,https://www.kaggle.com/sturdydata/titanic-rf,"np.where(test.Embarked == 'Q', 1, 0)",(test.Embarked == 'Q').astype((test.Embarked == 'Q').dtype)
1,https://www.kaggle.com/sudalairajkumar/rf-multilabel-framework-lb-0-022475,"np.hstack([test_X, temp_test_X])","np.append(test_X, temp_test_X, axis=1)"
1,https://www.kaggle.com/suryavan/knn-and-probability-lookup-script,"np.vstack((grid1, grid2, grid3, grid4))","np.column_stack((grid1.T, grid2.T, grid3.T, grid4.T)).T"
1,https://www.kaggle.com/swkim94/test77,"data_p.loc[data_p['Fare'].isnull(), 'Price']","data_p.ix[data_p['Fare'].isnull(), 'Price']"
1,https://www.kaggle.com/szczepanov/titanic-try-3,"df.loc[df.Age.isnull(), 'Age']","df.ix[df.Age.isnull(), 'Age']"
1,https://www.kaggle.com/szczepanov/titanic-try-3,"df_test['Sex'].map({'female': 0, 'male': 1})","pd.DataFrame(df_test['Sex']).replace({'female': 0, 'male': 1})"
1,https://www.kaggle.com/techaware/quora-1,pd.Series(df_dup['question1'].tolist()).astype(str),pd.Series(df_dup['question1'].tolist()).apply(str)
1,https://www.kaggle.com/tedspikes/titanic-test,"train.loc[:, ('Survived')]","train.ix[:, ('Survived')]"
1,https://www.kaggle.com/thamagame/titanic-with-learning-curves,"trainCv_temp.ix[:, 'Pclass':]","trainCv_temp.loc[:, 'Pclass':]"
1,https://www.kaggle.com/thamagame/titanic-with-learning-curves,dataFrame['Ticket'].apply(MapTicket),dataFrame['Ticket'].map(MapTicket)
1,https://www.kaggle.com/thamagame/titanic-with-learning-curves,"dataFrame['Embarked'].map({'C': 0, 'S': 1, 'Q': 2})","pd.DataFrame(dataFrame['Embarked']).replace({'C': 0, 'S': 1, 'Q': 2})"
1,https://www.kaggle.com/tilii7/ensemble-weights-minimization-vs-mcmc,np.array(answer),np.concatenate([answer])
1,https://www.kaggle.com/timur008/newscript,"dataset.loc[dataset['Survived'] > 1, 'Survived']","dataset.ix[dataset['Survived'] > 1, 'Survived']"
1,https://www.kaggle.com/tobikaggle/stacked-then-averaged-models-0-5697,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.concatenate((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed), axis=1)"
1,https://www.kaggle.com/tommyttf/try-to-learn,"train.loc[:, ('label')]","train.ix[:, ('label')]"
1,https://www.kaggle.com/tranquangan/my-first-experiment-with-kaggle,"np.where(full.Sex == 'male', 1, 0)",(full.Sex == 'male').astype((full.Sex == 'male').dtype)
1,https://www.kaggle.com/tsetsenos/firstpyscript,"train.loc[train_type.isnull(), train_col]","train.ix[train_type.isnull(), train_col]"
1,https://www.kaggle.com/utsavpatel/titanic-test,"titanic.loc[titanic['Pclass'] == 3, 'Pclass']","titanic.ix[titanic['Pclass'] == 3, 'Pclass']"
1,https://www.kaggle.com/utsavpatel/titanic-test,"np.count_nonzero(titanic.loc[titanic['Pclass'] == 3, 'Pclass'].values)","np.sum(titanic.loc[titanic['Pclass'] == 3, 'Pclass'].values!=0)"
1,https://www.kaggle.com/utsavpatel/titanic-test,np.where(titanic['Pclass'] == 1),np.nonzero(titanic['Pclass'] == 1)
1,https://www.kaggle.com/v81msk/test1,"df.loc[df['product_type'] == 'OwnerOccupier', 'a_pt']","df.ix[df['product_type'] == 'OwnerOccupier', 'a_pt']"
1,https://www.kaggle.com/valadi/mad-scripts-battle-z,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T"
1,https://www.kaggle.com/vecxoz/test1,"test_df.loc[:, ('loss')]","test_df.ix[:, ('loss')]"
1,https://www.kaggle.com/verdecal/epic-titanic-disaster,"np.where(full_data.Sex == 'male', 1, 0)",(full_data.Sex == 'male').astype((full_data.Sex == 'male').dtype)
1,https://www.kaggle.com/vgerald/predict-claims-severity-v2,"train.ix[:, 'cat1':'cat116']","train.loc[:, 'cat1':'cat116']"
1,https://www.kaggle.com/vicbap/titanic,"df.loc[df.Age.isnull() & (df.Gender == i) & (df.Pclass == j + 1), 'Age']","df.ix[df.Age.isnull() & (df.Gender == i) & (df.Pclass == j + 1), 'Age']"
1,https://www.kaggle.com/violinbeats/knn-test-run,"test.loc[:99, ('row_id')]","test.ix[:99, ('row_id')]"
1,https://www.kaggle.com/vishreddy/predicting-cuisine,"data.loc[(data['TYPE-LABEL'] == 'TRAIN').tolist(), 'ingredients']","data.ix[(data['TYPE-LABEL'] == 'TRAIN').tolist(), 'ingredients']"
1,https://www.kaggle.com/wawanco/data-ownership-numeric-features,"train.loc[:, (train.dtypes == 'int64')]","train.ix[:, (train.dtypes == 'int64')]"
1,https://www.kaggle.com/willjashford/minst-willjashford,"train_df.loc[(train_df['label'] == digit), :]","train_df.ix[(train_df['label'] == digit), :]"
1,https://www.kaggle.com/wirehack/fdsfsdfdsfsdfsdf,"df.loc[df['Alley'].isnull(), 'Alley']","df.ix[df['Alley'].isnull(), 'Alley']"
1,https://www.kaggle.com/wirehack/fdsfsdfdsfsdfsdf,"np.zeros((X.shape[0], len(self.base_models)))","np.empty((X.shape[0], len(self.base_models))); r2[:]= 0"
1,https://www.kaggle.com/wrosinski/boosted-python-xgb-starter-0-0223532-lb,"np.hstack([train_X, temp_train_X])","np.append(train_X, temp_train_X, axis=1)"
1,https://www.kaggle.com/xcz011/mercedez,"np.hstack((np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed))","np.append(np.reshape(self.estimator.predict(X), (-1, 1)), X_transformed, axis=1)"
1,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,"df.loc[0 == df.ps_calc_06, 'ps_calc_06']","df.ix[0 == df.ps_calc_06, 'ps_calc_06']"
1,https://www.kaggle.com/yakolle/porto-lgb-prune-ensemble,a_s.sum(),"np.count_nonzero(a_s,)"
1,https://www.kaggle.com/yangnanhai/testtest,"np.vstack((test_preds, test_preds, test['Response'].values))","np.column_stack((test_preds.T, test_preds.T, test['Response'].values.T)).T"
1,https://www.kaggle.com/yashduvvuru/pytanic,"train.loc[train.FamilySize < 2, 'FamilyId']","train.ix[train.FamilySize < 2, 'FamilyId']"
1,https://www.kaggle.com/yaxelperez/logistic-regression-thing,"np.dot(X, theta)","np.einsum('ij,jm->im',X, theta)"
1,https://www.kaggle.com/yaxelperez/logistic-regression-thing,"np.zeros((X.shape[1], 1))","np.empty((X.shape[1], 1)); r2[:]= 0"
1,https://www.kaggle.com/yeewii/firstscratchinpy,"np.where(df_train['SibSp'] + df_train['Parch'] + 1 == 1, 1, 0)",(df_train['SibSp'] + df_train['Parch'] + 1 == 1).astype((df_train['SibSp'] + df_train['Parch'] + 1 == 1).dtype)
1,https://www.kaggle.com/yeewii/firstscratchinpy,"np.where(df_train['SibSp'] + df_train['Parch'] + 1 == 1, 1, 0)",(df_train['SibSp'] + df_train['Parch'] + 1).map(lambda x : 1 if x == 1 else  0).values
1,https://www.kaggle.com/yekenot/toxic-regression,"np.zeros((test.shape[0], len(col)))","np.empty((test.shape[0], len(col))); r2[:]= 0"
1,https://www.kaggle.com/yhzjut/leyutestrun,"dataset['Sex'].map({'female': 1, 'male': 0})","pd.DataFrame(dataset['Sex']).replace({'female': 1, 'male': 0})"
1,https://www.kaggle.com/yipcma/catboost-on-a-boat-with-useful-tricks,np.where(X.dtypes != np.float),np.nonzero(X.dtypes != np.float)
1,https://www.kaggle.com/ymatioun/hoh-only-scaled,np.zeros([len_train]),np.empty([len_train]); r2[:]= 0
1,https://www.kaggle.com/youngseoklee/digit-recognizer-with-machine-learning,X.loc[size:size * 2],X.ix[size:size * 2]
1,https://www.kaggle.com/youngseoklee/house-price-prediction-with-numeric-only-dataset,"df_num.loc[:, (important_index)]","df_num.ix[:, (important_index)]"
1,https://www.kaggle.com/ypcfirst/titanic-model-using-logistic-regression,"train.loc[:, (['Pclass', 'Age', 'Sex', 'SibSp', 'Parch', 'Fare', 'Embarked'])]","train.ix[:, (['Pclass', 'Age', 'Sex', 'SibSp', 'Parch', 'Fare', 'Embarked'])]"
1,https://www.kaggle.com/yuyimiao/miaoster,"test.ix[bad_index, ['life_sq', 'full_sq']]","test.loc[bad_index, ['life_sq', 'full_sq']]"
1,https://www.kaggle.com/zeroblue/modified-grid-knn-17-alex2,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T"
1,https://www.kaggle.com/zeroblue/modified-grid-knn-17-z,"np.column_stack((row_ids, pred_labels))","np.vstack((row_ids.T, pred_labels.T)).T"
1,https://www.kaggle.com/zeroblue/modified-grid-knn-17-z,np.vstack(preds_list),"np.concatenate(preds_list, axis=0)"
1,https://www.kaggle.com/zeroblue/xgb-boost-with-event-data,"df_phone.loc[df_phone['device_id'].isin(infrequent), 'phone_brand']","df_phone.ix[df_phone['device_id'].isin(infrequent), 'phone_brand']"
1,https://www.kaggle.com/zfturbo/greedy-children-baseline-v2-0-7455,np.where(wish[child_id] == gift_id),np.nonzero(wish[child_id] == gift_id)
1,https://www.kaggle.com/zgo2016/titanic-logistic-regression,"train.loc[train['Sex'] == 0, 'Sex']","train.ix[train['Sex'] == 0, 'Sex']"
1,https://www.kaggle.com/zgo2016/titanic-logistic-regression,X.dot(theta),"np.tensordot(X,theta,axes=1)"
1,https://www.kaggle.com/zusmani/baseline-optimal-mask,"np.array(train_masks, dtype=np.uint8)","np.fromiter(train_masks, dtype=np.uint8)"
1,https://www.kaggle.com/zygmunt/predict-sales-with-pandas-py,"test2.loc[test2.Open == 0, 'Sales']","test2.ix[test2.Open == 0, 'Sales']"
